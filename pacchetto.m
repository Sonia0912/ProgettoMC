(* ::Package:: *)

(* :Title: Esercizio Analisi Sintattica *)
(* :Context: AnalisiSintattica` *)
(* :Author: Lorenzo Campidelli, Luca Castricini, Gianluca Gueli, Sonia Nicoletti, Anna Tosoroni *)
(* :Summary: Pacchetto che permette la generazioni di esercizi sull'analisi sintattica *)
(* :Copyright: GS 2023 *)
(* :Package Version: 1 *)
(* :Mathematica Version: 13 *)
(* :History: last modified 07/05/2023 *)
(* :Keywords: analisi sintattica, compilatori, interpreti, grammatica *)
(* :Sources: biblio *)
(* :Limitations: this is a preliminary version, for educational purposes only. *)
(* :Discussion: *)
(* :Requirements: *)
(* :Warning: DOCUMENTARE TUTTO il codice *)


BeginPackage["AnalisiSintattica`"]


GenerazioneGrammatica::usage =
"GenerazioneGrammatica[] genera le regole della grammatica per l'esercizio."


Begin["`Private`"]


(*GENERAZIONE GRAMMATICA CASUALE*)
(*
- A ogni Non Terminale (sempre 4) e' associata una lista di 1-3 Terminali e 2-3 Non Terminali (almeno 1 deve essere il Non Terminale successivo nella lista - tranne per l'ultimo Non Terminale, che ha solo Terminali)
- Tutti gli elementi della lista devono apparire esattamente una volta nelle produzioni (1-4 produzioni) 
- Esempio:
A: a, b, B, C
B: c, d, C
C: e, f, D
D: g, h
*)
GenerazioneGrammatica[seed_] := (
	If[seed == 0,
		SeedRandom[];
	,
		SeedRandom[seed];
	];
(*Parametri*)
tuttiNonTerminali = CharacterRange["A", "D"];
tuttiTerminali = CharacterRange["a", "l"];

nonTerminali = tuttiNonTerminali;
nonTerminali = Drop[nonTerminali, 1];
nonTerminaliIndici = tuttiNonTerminali;
terminali = tuttiTerminali;

numNonTerminali = Length[tuttiNonTerminali];
numTerminali = Length[terminali];

maxNumeroNonTerminali = 2;

minNumeroTerminali = 2;
maxNumeroTerminali = 3;

maxProduzioni = 4;

probabilitaEpsilon = 40; (*probabilita' che compaia Epsilon come produzione per un Non Terminale*)

(*Inizializzazione lista per la grammatica finale*)
Clear[grammatica];
grammatica = List[];

(*Per ogni Non Terminale viene generata la sua lista di produzioni*)
Table[
  	(*Salviamo il primo Non Terminale in una lista e lo rimuoviamo dalla lista nonTerminali*)
  	Clear[listaNonTerminaleEProduzioni];
  	listaNonTerminaleEProduzioni = List[];
  	AppendTo[listaNonTerminaleEProduzioni, nonTerminaliIndici[[1]]];
  	nonTerminaliIndici = Drop[nonTerminaliIndici, 1];
  	
  	numNonTerminaliRimanenti = Length[nonTerminali];
  	
  	(*
  	(*Creazione della stringa di tutte le produzioni per il Non Terminale corrente*)
  	If[numNonTerminaliRimanenti > 0, 
  		(*Tutti i casi (tranne ultimo)*)
  		numElementiNonTerminali = RandomInteger[{1, numNonTerminaliRimanenti}];
  		numElementiTerminali = RandomInteger[{minNumeroTerminali, maxNumeroTerminali}];
  		
  		elementiNonTerminali = nonTerminali[[1;;numElementiNonTerminali]];
  		elementiTerminali = terminali[[1;;numElementiTerminali]];
  		terminali = Drop[terminali, numElementiTerminali];
  		,
  		(*Caso ultimo Non Terminale*)	
  		numElementiTerminali = RandomInteger[{minNumeroTerminali, maxNumeroTerminali}];
  		elementiTerminali = terminali[[1;;numElementiTerminali]];
  		elementiNonTerminali = List[];
  	];
  	*)
  	
  	(*Creazione della stringa di tutte le produzioni per il Non Terminale corrente*)
  	If[numNonTerminaliRimanenti > 0, 
   		(*Ci sono ancora Non Terminali inutilizzati*)
   		numElementiNonTerminali = RandomInteger[{1, Min[maxNumeroNonTerminali, numNonTerminaliRimanenti]}];
   		elementiNonTerminali = nonTerminali[[1 ;; numElementiNonTerminali]];
   		nonTerminali = Drop[nonTerminali, numElementiNonTerminali];
   		numElementiTerminali = RandomInteger[{minNumeroTerminali, maxNumeroTerminali}];
   		elementiTerminali = terminali[[1 ;; numElementiTerminali]];
   		terminali = Drop[terminali, numElementiTerminali];
   		,
   		(*Sono stati usati tutti i Non terminali*)	
   		numElementiTerminali = RandomInteger[{minNumeroTerminali, maxNumeroTerminali}];
   		elementiTerminali = terminali[[1 ;; numElementiTerminali]];
   	    terminali = Drop[terminali, numElementiTerminali];
   		elementiNonTerminali = List[];
   	];
  	elementiDestra = Union[elementiNonTerminali, elementiTerminali];
  	elementiDestra = RandomSample[elementiDestra];
  	numElementiDestra = Length[elementiDestra];
  	
  	(*Inizializzazione lista di produzioni per il Non Terminale corrente*)
  	Clear[listaProduzioniCorrente];
  	listaProduzioniCorrente = List[];
  	
  	(*Generazione dei punti di suddivisione della stringa per ottenere le produzioni*)
  	breaks = Range[2, numElementiDestra];
  	numProduzioni = RandomInteger[{1, Min[maxProduzioni, numElementiDestra]}];
  	numBreakpoints = numProduzioni - 1;
  	breakpoints = Sort[RandomSample[breaks, numBreakpoints]]; (*Indici a cui spezzare la lista di elementi*)
  	
  	(*Divisione della stringa nelle varie produzioni*)
  	If[numBreakpoints == 0,
   		(*Caso partizione singola (una sola produzione)*)
   		AppendTo[listaProduzioniCorrente, StringRiffle[elementiDestra, ""]];
   	,
   		(*Caso partizioni/produzioni multiple*)
   		Table[
     			Which[
       			j == 1, (*Prima produzione*)
       				indiceUltimoElementoProduzione = breakpoints[[j]] - 1;
       				AppendTo[listaProduzioniCorrente, StringRiffle[elementiDestra[[1 ;; indiceUltimoElementoProduzione]], ""]];
       			, 
       			j == numProduzioni, (*Ultima produzione*)
       				AppendTo[listaProduzioniCorrente, StringRiffle[elementiDestra[[breakpoints[[j - 1]] ;; -1]], ""]];
       			,
       			True, (*Produzioni intermedie*)
       				indiceUltimoElementoProduzione = breakpoints[[j]] - 1;
       				AppendTo[listaProduzioniCorrente, StringRiffle[elementiDestra[[breakpoints[[j - 1]] ;; indiceUltimoElementoProduzione]], ""]];
       			];
     		,
     		{j, 1, numProduzioni}
     		];
   	];
  	
  	(*I Non Terminali successivi al primo possono produrre Epsilon con una determinata percentuale di probabilita'*)	
  	If[i > 1,
   		If[RandomInteger[99] < probabilitaEpsilon, 
    			AppendTo[listaProduzioniCorrente, "\[Epsilon]"];
    		]
   	]
  	
  	(*La lista finale con Non Terminale e relative produzioni viene aggiunta alla grammatica*);
  	AppendTo[listaNonTerminaleEProduzioni, listaProduzioniCorrente];
  	AppendTo[grammatica, listaNonTerminaleEProduzioni];	
  			
  ,
  {i, 1, numNonTerminali}
  ];

grammatica)


(*FUNZIONI AUSILIARIE*)

(*Ritorna i First di un Non Terminale*)
getFirst[NT_] := (
	posizione = Position[first,NT];
	posizioneFlat = Flatten[posizione];
	firstNT = first[[posizioneFlat[[1]],2]];
	firstNT	
)

(*Ritorna True se il Non Terminale e' nullable, False se non e' nullable*)
checkNullabilita[NT_] := (
	posNTinNullable = Position[nullable, NT];
	indiceNTinNullable = posNTinNullable[[1, 1]];
	nullabilita = nullable[[indiceNTinNullable,2]];
	nullabilita
)

(*Data una produzione, le colonne e la riga in cui inserirla, la inserisce nella soluzione*)
inserisciProduzione[prod_, colonne_, riga_] := (
	Table[
		Table[
			If[soluzione[[1,c]]==colonne[[r]],
				soluzione[[riga]] = ReplacePart[soluzione[[riga]], c -> prod];
			];
			,
			{r, 1, Length[colonne],1}
		];
		,
		{c, 1, numColonne, 1}
	];
)

(*Ritorna una lista di Terminali rimouvendo, se ci sono, Non Terminali e \[Epsilon]*)
rimuoviNTeEps[lista_] := (
	nuovaLista = lista;
	Table[
		If[ContainsAny[{nuovaLista[[k]]},tuttiNonTerminali] || ContainsAny[{nuovaLista[[k]]},{"\[Epsilon]"}],
			nuovaLista = Drop[nuovaLista, {k}];
		];
		,
		{k, 1, Length[nuovaLista], 1}
	];
	nuovaLista
)


(* NULLABLE *)

nullable = List[];
(*Per ogni Non Terminale partendo dall'ultimo*)
(*Un Non Terminale potrebbe produrre uno dei Non Terminali successivi, serve sapere se quelli sono annullabili*)
Table[ 
	Clear[currentNull];
	currentNull = {grammatica[[i, 1]], False};
	
	(*Flag da attivare se trovo un elemento annullabile*)
	foundNullable = False;
	
	(*Per ogni produzione finch\[EGrave] non ne trova una annullabile*)
	(*Le iterazioni partono dall'ultima produzione perch\[EGrave] \[Epsilon] \[EGrave] sempre l'ultima*)
	j = Length[grammatica[[i, 2]]];
	While[!foundNullable && j > 0,
		produzioneDaControllare = grammatica[[i, 2, j]] ;
		(*Se trova \[Epsilon] allora il Non Terminale \[EGrave] annullabile*)
		If[produzioneDaControllare == "\[Epsilon]",
			currentNull = {grammatica[[i, 1]], True};
			foundNullable = True;
			,(*Else*)
			isNull = True;
			k = 1;

			(*Controlla tutti i caratteri della produzione corrente*)
			While[isNull && k <= StringLength[produzioneDaControllare],
				(*Se il carattere \[EGrave] un simbolo Terminale allora il Non Terminale non \[EGrave] annullabile*)
				If [MemberQ[CharacterRange["a", "z"], StringTake[produzioneDaControllare, {k}]],
					isNull = False;
					, (*Else*)
					(*Se il carattere \[EGrave] un simbolo Non Terminale devo controllare se \[EGrave] annullabile*)
					isNull = isNull && nullable[[Flatten[Position[nullable, StringTake[produzioneDaControllare, {k}]]][[1]], 2]];
				];
				k++;
			];
			(*Se la produzione \[EGrave] annullabile allora lo \[EGrave] anche il Non Terminale, esce dal ciclo*)
			If[isNull, 
				currentNull = {grammatica[[i, 1]], True};
				foundNullable = True;
			];
		];
	j--;
	];
	PrependTo[nullable, currentNull];
,
{i, Length[grammatica], 1, -1}
];

nullable



(* FIRST *)

(*Inizializzazione della lista di first e liste di supporto temporanee*)
first = List[];
listaNonTerminaleEFirst = List[];
listaFirstCorrente = List[];

(*Ricerca First "ovvi" (sia Terminali che Non Terminali)*)
Table[
\[NonBreakingSpace]\[NonBreakingSpace]\[NonBreakingSpace] Table[
		AppendTo[listaFirstCorrente, StringTake[grammatica[[i,2,j]],1]];
		,
		{j, 1, Length[grammatica[[i,2]]], 1}
\[NonBreakingSpace]\[NonBreakingSpace]\[NonBreakingSpace] ];

\[NonBreakingSpace]\[NonBreakingSpace]\[NonBreakingSpace] AppendTo[listaNonTerminaleEFirst, tuttiNonTerminali[[i]]];
\[NonBreakingSpace]\[NonBreakingSpace]\[NonBreakingSpace] AppendTo[listaNonTerminaleEFirst, listaFirstCorrente];
\[NonBreakingSpace]\[NonBreakingSpace]\[NonBreakingSpace] AppendTo[first,listaNonTerminaleEFirst];
\[NonBreakingSpace]\[NonBreakingSpace]\[NonBreakingSpace] 
\[NonBreakingSpace]\[NonBreakingSpace]\[NonBreakingSpace] Clear[listaFirstCorrente];
\[NonBreakingSpace]\[NonBreakingSpace]\[NonBreakingSpace] listaFirstCorrente = List[];
\[NonBreakingSpace]\[NonBreakingSpace]\[NonBreakingSpace] Clear[listaNonTerminaleEFirst];
\[NonBreakingSpace]\[NonBreakingSpace]\[NonBreakingSpace] listaNonTerminaleEFirst = List[];
\[NonBreakingSpace]\[NonBreakingSpace]\[NonBreakingSpace] ,
\[NonBreakingSpace]\[NonBreakingSpace]\[NonBreakingSpace] {i, 1, numNonTerminali, 1}
];

(*Mettiamo Epsilon ai Non Terminali nullable*)
Table[
	If[nullable[[i,2]],
		first[[i,2]] = Union[first[[i,2]], {"\[Epsilon]"}];
	];
	,
	{i, 1, numNonTerminali, 1}
];

(*Ricerca First "non ovvi"*)
Table[
	Table[
		elementoCorrente = first[[i,2,j]];
		If[ContainsAny[{elementoCorrente},tuttiNonTerminali],
			(*Cerchiamo i first di quel Non Terminale che saranno i first "non ovvi" del Terminale che stiamo valutando*)
			tuttePosizioni = Position[first,elementoCorrente];
			posizioneFinale = Last[tuttePosizioni];
			posizione = posizioneFinale[[1]];
			terminaliNonOvvi = first[[posizione,2]];
			(*Rimuoviamo il Non Terminale dalla lista di first*)
			first[[i,2]] = Drop[first[[i,2]],{j}];
			
			(*Se c'e', rimuoviamo \[Epsilon] tra i Terminali da aggiungere*)
			If[ContainsAny[{"\[Epsilon]"},terminaliNonOvvi],
				posizione = Position[terminaliNonOvvi, "\[Epsilon]"];
				terminaliNonOvvi = Drop[terminaliNonOvvi, Flatten[posizione]];
			];
			(*Aggiungiamo i Terminali senza duplicati*)
			first[[i,2]] = Union[first[[i,2]], terminaliNonOvvi];
			
			(*Controlliamo se il Non Terminale e' nullable*)
			nullabilita = checkNullabilita[elementoCorrente];
			
			(*Prendiamo la produzione in cui compare quel NT*)
			produzione = "";
			Table[
				If[StringTake[grammatica[[i,2,prod]],{1}] == elementoCorrente,
					produzione = grammatica[[i,2,prod]];
				];
				,
				{prod, 1, Length[grammatica[[i,2]]], 1}
			];
					
			successivo = 2; (*Step a cui siamo nella produzione*)			
			
			While[nullabilita,
				If[StringLength[produzione] >= successivo,
					elementoSuccessivo = StringTake[produzione,{successivo}];
					Which[
						(*Il successivo e' un Non Terminale -> aggiungiamo i suoi First ai First del Non Terminale corrente*)
						ContainsAny[{elementoSuccessivo},tuttiNonTerminali],
							(*Aggiungiamo i First*)
							posNTinFirst = Last[Position[first, elementoSuccessivo]][[1]];
							terminaliDaAggiungere = first[[posNTinFirst, 2]];
							
							(*Se ci sono rimuoviamo i Non Terminali e \[Epsilon]*)
							terminaliDaAggiungere = rimuoviNTeEps[terminaliDaAggiungere];
							first[[i,2]] = Union[first[[i,2]], terminaliDaAggiungere];
							
							(*Controlliamo se anche questo e' nullable*)
							nullabilita = checkNullabilita[elementoSuccessivo];
							(*Aumentiamo successivo per vedere cosa c'\[EGrave] dopo*)
							successivo = successivo+1;
						, 
						(*Il successivo e' un Terminale -> aggiungiamo il Terminali ai First*)
						ContainsAny[{elementoSuccessivo},tuttiTerminali], 
							first[[i,2]] = Union[first[[i,2]], {elementoSuccessivo}];
							nullabilita = False;
						,
						(*E' vuoto -> non aggiungiamo niente *)
						True,
							nullabilita = False;
					];
					,
					nullabilita = False;
				];
			];
			(*Decrementiamo j perche' avendo tolto il NT dalla lista di first gli indici sono cambiati*)
			j--;			
		];
		,
		{j, 1, Length[first[[i,2]]], 1}
	];
	,
	{i, numNonTerminali, 1, -1}
];

first


(* FOLLOW *)

follow = {{"A", {"$"}}};
listaRicontrollo1 = List[];
listaRicontrollo2 = List[];

(*Inizializzazione lista di Follow*)
Table[
	AppendTo[follow, {tuttiNonTerminali[[i]], {}}]
,{i, 2, numNonTerminali}
];

(*Itero su tutte le produzioni di tutti i Non Terminali*)
Table[ (*Per ogni Non Terminale*)
	Table[(*Per ogni produzione del Non Terminale*)
		produzioneCorrente = grammatica[[i, 2, j]];
		Table[(*Per ogni carattere della produzione*)
			If[MemberQ[tuttiNonTerminali, StringTake[produzioneCorrente, {k}]],
			(*Se il carattere \[EGrave] un Non Terminale ci sono 3 casi*)
				nonTerminaleDaControllare = StringTake[produzioneCorrente, {k}];
				Which[
					(*Se \[EGrave] l'ultimo elemento della produzione*)
					k == StringLength[produzioneCorrente],
						(*Bisogner\[AGrave] aggiungere al Follow del Non Terminale corrente il Follow del Non Terminale che lo produce*)
						AppendTo[listaRicontrollo1, {nonTerminaleDaControllare, grammatica[[i, 1]]}];
					,
					(*Se il prossimo elemento \[EGrave] un Terminale lo aggiungo al Follow del Non Terminale corrente*)
					MemberQ[tuttiTerminali, StringTake[produzioneCorrente, {k + 1}]],
						AppendTo[follow[[Flatten[Position[follow, nonTerminaleDaControllare]][[1]], 2]], StringTake[produzioneCorrente, {k + 1}]];
					,
					(*Se il prossimo elemento \[EGrave] un Non Terminale aggiungo il suo First (senza \[Epsilon]) al Follow del Non Terminale corrente*)
					MemberQ[tuttiNonTerminali, StringTake[produzioneCorrente, {k + 1}]],
						firstProssimoNonTerminale =  first[[Flatten[Position[first, StringTake[produzioneCorrente, {k + 1}]]][[1]], 2]];
						If[MemberQ[firstProssimoNonTerminale, "\[Epsilon]"],
							firstProssimoNonTerminale = Drop[firstProssimoNonTerminale, Flatten[Position[firstProssimoNonTerminale, "\[Epsilon]"]]];
						];
						AppendTo[follow[[Flatten[Position[follow, nonTerminaleDaControllare]][[1]], 2]], firstProssimoNonTerminale];
						
						(*Se il Non Terminale successivo \[EGrave] Nullable bisogner\[AGrave] aggiungere il suo Follow a quello del Non Terminale corrente*)
						If[nullable[[Flatten[Position[nullable, StringTake[produzioneCorrente, {k + 1}]]][[1]], 2]],
							PrependTo[listaRicontrollo2, {nonTerminaleDaControllare, StringTake[produzioneCorrente, {k + 1}]}];
						];
				];
			];
		,{k, 1, StringLength[produzioneCorrente]}
		];
	,{j, 1, Length[grammatica[[i, 2]]]}
	];
,{i, 1, numNonTerminali}
];

(*Ad ogni Non Terminale in ultima posizione in una produzione viene aggiunto il Follow del Non Terminale che lo ha prodotto*)
Table[	
	AppendTo[follow[[Flatten[Position[follow, listaRicontrollo1[[i, 1]]]][[1]], 2]], follow[[Flatten[Position[follow, listaRicontrollo1[[i, 2]]]][[1]], 2]]];
,{i, 1, Length[listaRicontrollo1]}
];

(*Ad ogni Non Terminale che precede un Non Terminale Nullable viene aggiunto il Follow del Non Terminale Nullable*)
Table[
	AppendTo[follow[[Flatten[Position[follow, listaRicontrollo2[[i, 1]]]][[1]], 2]], follow[[Flatten[Position[follow, listaRicontrollo2[[i, 2]]]][[1]], 2]]];
,{i, 1, Length[listaRicontrollo2]}
];

Table[
	follow[[i, 2]] = Flatten[follow[[i, 2]]];
	DeleteDuplicates[follow[[i, 2]]];
	Sort[follow[[i, 2]]];
,{i, 1, Length[follow]}	
];

follow


(*GENERAZIONE DELLA SOLUZIONE*)

soluzione = List[];

colonne = tuttiTerminali;
colonne = Prepend[colonne, " "];
AppendTo[colonne, "$"];
numColonne = Length[colonne];
AppendTo[soluzione, colonne];

rigaCorrente = List[];

For[i = 1, i <= numNonTerminali, i++,

	(*Inizializziamo la riga di quel Non Terminale*)
	For[h = 1, h <= numColonne, h++,
		AppendTo[rigaCorrente, " "];
	];
	(*Il primo elemento della riga sara' il NT corrente*)
	rigaCorrente = ReplacePart[rigaCorrente, 1 -> tuttiNonTerminali[[i]]];
	AppendTo[soluzione, rigaCorrente];
	
	(*Cicliamo su tutte le produzioni del NT corrente*)
	For[j = 1, j <= Length[grammatica[[i,2]]], j++,
		produzione = grammatica[[i,2,j]];
		primoElemento = StringTake[produzione,1];
		produzioneIntera = StringJoin[tuttiNonTerminali[[i]], "->", produzione];
		(*Controlliamo se la produzione inizia con un Terminale o con un Non Terminale*)
		Which[
			(*Caso Terminale*)
			ContainsAny[{primoElemento}, tuttiTerminali],
				(*Mettiamo la produzione nella colonna di quel Terminale*)
				posizione = Position[soluzione[[1]],primoElemento];
				posizioneFlat = Flatten[posizione];
				soluzione[[i+1]] = ReplacePart[soluzione[[i+1]], posizioneFlat[[1]] -> produzioneIntera];
			,
			(*Caso Non Terminale*)
			ContainsAny[{primoElemento}, tuttiNonTerminali],
				(*Prendiamo i fisrt di quel NT, saranno le colonne in cui mettere la produzione*)
				firstNT = getFirst[primoElemento];
				(*Prendiamo le posizioni di quei Terminali nelle colonne e rimpiazziamo*)
				inserisciProduzione[produzioneIntera, firstNT, i+1];
				
				(*Caso in cui il NT e' nullable*)
				nullabilita = checkNullabilita[primoElemento];
				successivo = 2;
				While[nullabilita,
					If[StringLength[produzione] >= successivo,
						elementoSuccessivo = StringTake[produzione,{successivo}];
						
						Which[
							(*Il successivo e' un Non Terminale -> mettiamo la produzione nelle colonne dei First di quel NT*)
							ContainsAny[{elementoSuccessivo},tuttiNonTerminali],					
								(*Prendiamo i fisrt di quel NT, saranno le colonne in cui mettere la produzione*)
								firstNT = getFirst[elementoSuccessivo];
								(*Prendiamo le posizioni di quei Terminali nelle colonne e rimpiazziamo*)
								inserisciProduzione[produzioneIntera, firstNT, i+1];

								(*Controlliamo se anche questo e' nullable*)
								nullabilita = checkNullabilita[elementoSuccessivo];
								(*Aumentiamo successivo per vedere cosa c'\[EGrave] dopo*)
								successivo = successivo+1;
							, 
							(*Il successivo e' un Terminale -> mettiamo la produzione nella colonna di quel Terminale*)
							ContainsAny[{elementoSuccessivo},tuttiTerminali],
								posizione = Position[soluzione[[1]],elementoSuccessivo];
								posizioneFlat = Flatten[posizione];
								soluzione[[i+1]] = ReplacePart[soluzione[[i+1]], posizioneFlat[[1]] -> produzioneIntera];
								nullabilita = False;
							,
							(*E' vuoto -> non aggiungiamo niente *)
							True,
								nullabilita = False;
						];					
						,
						nullabilita = False;
					];
				
				];
			,
			(*Caso Epsilon*)
			True,
				followNT = follow[[i,2]];
				(*Prendiamo le posizioni di quei Terminali nelle colonne e rimpiazziamo*)
				inserisciProduzione[produzioneIntera, followNT, i+1];
		];
	];
	
	(*Reinizializziamo rigaCorrente*)
	Clear[rigaCorrente];
    rigaCorrente = List[];
];

Print["Grammatica: ", grammatica];
Print["First: ", first];
Print["Follow: ", follow];
soluzione // MatrixForm



(*TABELLA*)
(*colonne Terminali SOLO dei first*)
colonneTabellaFirst = List[];

listaProduzioni = List[];
Table[
	Table[
		AppendTo[listaProduzioni, StringJoin[grammatica[[i, 1]], "->", grammatica[[i, 2, j]]]];
	,{j, 1, Length[grammatica[[i, 2]]]}
	];
,{i, 1, Length[grammatica]}
];
listaProduzioni		





displayFirst[g_]:=Grid[g,
			 Frame -> All, 
			 Background->{White,White},
			 ItemStyle->{Automatic},
			 ItemSize->{{2,{2}}},
		     BaseStyle->{Bold}
			 Editable -> False]
			 
displayFirstSln[g_]:=displayFirst[g]

displayFollow[g_]:=Grid[g,
			 Frame -> All, 
			 Background->{White,White},
			 ItemStyle->{Automatic},
			 ItemSize->{{2,{2}}},
		     BaseStyle->{Bold}
			 Editable -> False]

displayFollowSln[g_]:=displayFollow[g]
		 
displayTable[g_,cursor_:0]:=
	Module[{backgrounds},
		backgrounds = xy[cursor] -> If[cursor > 0,checkErrors[g, cursor]];
		Grid[g,
		Frame->If[MatchQ[xy[cursor],_Integer],All,{All,All,{xy[cursor]->{Thick,Blue}}}],
		Background->{White, White, backgrounds},
		ItemStyle->{Automatic},
		ItemSize->{{3,{4}}},
		BaseStyle->{Bold},
		Editable -> False]]

displayTableSln[g_]:=displayTable[g,0]

checkErrors[g_, cursor_]:=
\[NonBreakingSpace]\[NonBreakingSpace]\[NonBreakingSpace] If[g[[xy[cursor][[1]], xy[cursor][[2]]]] != " ", 
\[NonBreakingSpace]\[NonBreakingSpace]\[NonBreakingSpace]    If[g[[xy[cursor][[1]], xy[cursor][[2]]]]!= soluzione[[xy[cursor][[1]], xy[cursor][[2]]]],
\[NonBreakingSpace]\[NonBreakingSpace]\[NonBreakingSpace]\[NonBreakingSpace]\[NonBreakingSpace]\[NonBreakingSpace]\[NonBreakingSpace]\[NonBreakingSpace]\[NonBreakingSpace]\[NonBreakingSpace]\[NonBreakingSpace] LightRed]]
\[NonBreakingSpace]\[NonBreakingSpace]\[NonBreakingSpace]\[NonBreakingSpace]\[NonBreakingSpace]\[NonBreakingSpace]\[NonBreakingSpace]\[NonBreakingSpace]\[NonBreakingSpace]\[NonBreakingSpace]\[NonBreakingSpace] 
createEmptyGrammar[sln_] := 
	Module[{copy = sln}, Table[ If[i > 1 && j > 1, copy[[i, j]] = " "], {i, rows}, {j, cols} ]; copy ]

createEmptyCheckbox[sln_]:= 
	Module[{copy = sln}, Table[ If[i > 1 && j > 1, copy[[i, j]] = Checkbox[]], {i, rows}, {j, cols} ]; copy ]

(*Mappiamo il click del mouse sulla tabella a un numero che identifica in maniera univoca la cella cliccata*)
loc[{x_, y_}] := 1 + Floor[cols x] + cols Floor[(1 - y) rows]
tmp = soluzione[[All,1]]
tmp = Delete[soluzione[[All,1]], 1]


rows = Length[grammar[[All,1]]];
cols = Length[grammar[[1,All]]];

(*calcola l'esatta riga e colonna di ogni cella della tabella*)
row[n_]:=Quotient[n-1,cols]+1;
col[n_]:=Mod[n-1,cols]+1;
(*data la cella n restituisce riga e colonna corrispondenti*)
xy[n_]:={row[n],col[n]}


showInterface[]:= (Manipulate[
	Grid[
	{{Column[{Style["ANALISI SINTATTICA", Bold],
	  Style["ESERCIZIO DI GRAMMATICA N\[Degree]:", Bold] (*INSERISCI SEED*),
	  Style["Generare gli insiemi Nullable, First e Follow per la seguente grammatica", Bold] }, 
	  Alignment -> Left]},
	{
	Column[{
		(*GRAMMATICA*)
		Row[{
		Button["Nuova grammatica",(
		cursor=0 ; 
		Spacer[5];
		showSolution=False;
		soluzione=grammar;
		emptyGrammar=createEmptyGrammar[soluzione];
		)&],
		
		DynamicModule[{numero = ""}, 
        Panel[Column[{
        Row[{
        Style["Genera esercizio n\[Degree]: ", Bold],
        InputField[Dynamic[numero], Number]
        }],
        Dynamic[numero];
        }]]
	    ]}], " ",
		Row[{Column[{
			Style["Grammatica", Bold],
			Grid[Map[List, listaProduzioni],
			 Frame -> All, 
			 Background->{White,White},
			 ItemStyle->{Automatic},
			 ItemSize->{{8,{8}}},
		     BaseStyle->{Bold}
			 Editable -> False]}, Alignment->Left]}], 
		" ",
		
		(*NULLABLE*)
		Row[{Column[{
			Style["NULLABLE", Bold],
			Framed["Dato un non terminale, questo \[EGrave] nullable se pu\[OGrave] produrre una stringa vuota (\[Epsilon]).\nSeleziona i non terminali nullable.",
					FrameStyle -> Directive[Thin, White],ImageSize -> {800, 80}],	
			TabView[Table[tmp[[i]]->Checkbox[],{i, 1, Length[tmp]}]]}, Alignment->Left],
			" ",
			If[showNullable, 
				Column[{
						Style["Soluzione Nullable", Bold],
						TabView[Table[tmp[[i]]->nullable[[i,2]],{i, 1, Length[tmp]}]]}, Alignment->Left]," "]		 
          }], 
			" ",
			
		(*FIRST*)	
		Row[{Column[{
			Style["FIRST", Bold],
			Framed["Dato un non terminale (ad esempio A,B), il suo insieme First \[EGrave] composto dai simboli terminali (compreso \[Epsilon])\n che possono apparire come carattere iniziale di una stringa derivata da una sua produzione.",
					FrameStyle -> Directive[Thin, White],ImageSize -> {800, 80}],
			displayFirst[emptyCheckboxGrammar]
			}, Alignment->Left],
			If[showFirst, 
				Column[{
					Style["Soluzione First", Bold],
					displayFirstSln[emptyCheckboxGrammar]
				},
				Alignment->Left],""]		 
          }], 
          " ",
          
          (*FOLLOW*)	
		Row[{Column[{
			Style["FOLLOW", Bold],
			Framed["Dato un non terminale, il suo insieme Follow \[EGrave] composto dai simboli terminali (e dal simbolo $)\n che possono apparire immediatamente dopo il non terminale in qualsiasi derivazione valida.",
					FrameStyle -> Directive[Thin, White],ImageSize -> {600, 80}],
			displayFollow[emptyCheckboxGrammar]
			}, Alignment->Left],
			If[showFollow, 
				Column[{
					Style["Soluzione Follow", Bold],
					displayFollowSln[emptyCheckboxGrammar]
				},Alignment->Left],""]		 
          }], 
         " ",
         
		(*TABLE*)	
		Row[{
			Column[{
			Style["TABELLA PRODUZIONI", Bold],
			Framed["Seleziona la cella in cui inserire la produzione e successivamente il bottone ad essa corrispondente.",
					FrameStyle -> Directive[Thin, White]],
			EventHandler[
			Dynamic[displayTable[emptyGrammar,cursor]],
			"MouseClicked":>(
			If[MemberQ[Range[1, rows*cols, cols],loc[MousePosition["EventHandlerScaled"]]] || 
				MemberQ[Range[1, cols],loc[MousePosition["EventHandlerScaled"]]],
				cursor = -1,
				cursor = loc[MousePosition["EventHandlerScaled"]]
				] 
			)],
			Row[ 
			Table[With[{i = i},\[NonBreakingSpace]
\[NonBreakingSpace]           Button[listaProduzioni[[i]],
\[NonBreakingSpace]              emptyGrammar[[xy[cursor][[1]], xy[cursor][[2]]]]=listaProduzioni[[i]];
\[NonBreakingSpace]              If[soluzione[[xy[cursor][[1]], xy[cursor][[2]]]] != emptyGrammar[[xy[cursor][[1]], xy[cursor][[2]]]], Beep[]]
\[NonBreakingSpace]            ]], 
\[NonBreakingSpace]            {i, 1, Length[listaProduzioni]}],Spacer[0.4]
            ],
            Row[{
            Button["Clear", emptyGrammar[[xy[cursor][[1]], xy[cursor][[2]]]]= " "],
            Button["Clear All", Table[emptyGrammar[[i,j]] = " ", {i, 2, rows}, {j, 2, cols}]]
            }, Alignment -> Center]
			}],
			If[showSolution,
				Row[{Style["Soluzione tabella delle produzioni", Bold],
				displayTableSln[soluzione]},Alignment -> Left],""]
			}, Alignment->Center],  " " 
    }
    
    ],
   
	" "	
	}
	}, Editable->False],
	{soluzione,ControlType->None},
	(*{first,ControlType->None},
	{follow,ControlType->None}, PER SOLUZIONI FIRST E FOLLOW*)
	{{emptyGrammar, createEmptyGrammar[soluzione]},ControlType->None},
	{{emptyCheckboxGrammar, createEmptyCheckbox[soluzione]},ControlType->None},
	{{cursor,0},ControlType->None},
   
	(*Genera nuova gramm con seed da keyboard*)
	{{showNullable,False,"Mostra Nullable"},{True,False}},
	{{showFirst,False,"Mostra First"},{True,False}},
	{{showFollow,False,"Mostra Follow"},{True,False}},
	{{showSolution,False,"show solution"},{True,False}},
	SaveDefinitions->True,
	ContentSize->{900, 900}
])


(* ::Output:: *)
(*Manipulate[Grid[{{Column[{Style["ANALISI SINTATTICA", Bold], *)
(*       Style["ESERCIZIO DI GRAMMATICA N\[Degree]:", Bold], Style["Generare gli \*)
(*insiemi Nullable, First e Follow per la seguente grammatica", Bold]}, *)
(*      Alignment -> Left]}, *)
(*    {Column[{Row[{Button["Nuova grammatica", *)
(*          (AnalisiSintattica`Private`cursor = 0; Spacer[5]; *)
(*            AnalisiSintattica`Private`showSolution = False; *)
(*            AnalisiSintattica`Private`soluzione = *)
(*             AnalisiSintattica`Private`grammar; *)
(*            AnalisiSintattica`Private`emptyGrammar = *)
(*             AnalisiSintattica`Private`createEmptyGrammar[*)
(*              AnalisiSintattica`Private`soluzione]; ) & ], *)
(*         DynamicModule[{AnalisiSintattica`Private`numero = ""}, *)
(*          Panel[Column[{Row[{Style["Genera esercizio n\[Degree]: ", Bold], *)
(*               InputField[Dynamic[AnalisiSintattica`Private`numero], *)
(*                Number]}], Dynamic[AnalisiSintattica`Private`numero]; }]]]}], *)
(*       " ", Row[{Column[{Style["Grammatica", Bold], *)
(*           Grid[List /@ AnalisiSintattica`Private`listaProduzioni, *)
(*            Frame -> All, Background -> {White, White}, ItemStyle -> *)
(*             {Automatic}, ItemSize -> {{8, {8}}}, BaseStyle -> *)
(*             {Bold}*Editable -> False]}, Alignment -> Left]}], " ", *)
(*       Row[{Column[{Style["NULLABLE", Bold], Framed["Dato un non terminale, \*)
(*questo \[EGrave] nullable se pu\[OGrave] produrre una stringa vuota (\[Epsilon]).\nSeleziona i non \*)
(*terminali nullable.", FrameStyle -> Directive[Thin, White], *)
(*            ImageSize -> {800, 80}], TabView[Table[*)
(*             AnalisiSintattica`Private`tmp[[AnalisiSintattica`Private`i]] -> *)
(*              Checkbox[], {AnalisiSintattica`Private`i, 1, *)
(*              Length[AnalisiSintattica`Private`tmp]}]]}, Alignment -> Left], *)
(*         " ", If[AnalisiSintattica`Private`showNullable, *)
(*          Column[{Style["Soluzione Nullable", Bold], *)
(*            TabView[Table[AnalisiSintattica`Private`tmp[[*)
(*                AnalisiSintattica`Private`i]] -> *)
(*               AnalisiSintattica`Private`nullable[[*)
(*                AnalisiSintattica`Private`i,2]], *)
(*              {AnalisiSintattica`Private`i, 1, Length[*)
(*                AnalisiSintattica`Private`tmp]}]]}, Alignment -> Left], *)
(*          " "]}], " ", Row[{Column[{Style["FIRST", Bold], Framed["Dato un non \*)
(*terminale (ad esempio A,B), il suo insieme First \[EGrave] composto dai simboli \*)
(*terminali (compreso \[Epsilon])\n che possono apparire come carattere iniziale di una \*)
(*stringa derivata da una sua produzione.", FrameStyle -> Directive[Thin, *)
(*              White], ImageSize -> {800, 80}], *)
(*           AnalisiSintattica`Private`displayFirst[*)
(*            AnalisiSintattica`Private`emptyCheckboxGrammar]}, *)
(*          Alignment -> Left], If[AnalisiSintattica`Private`showFirst, *)
(*          Column[{Style["Soluzione First", Bold], *)
(*            AnalisiSintattica`Private`displayFirstSln[*)
(*             AnalisiSintattica`Private`emptyCheckboxGrammar]}, *)
(*           Alignment -> Left], ""]}], " ", *)
(*       Row[{Column[{Style["FOLLOW", Bold], Framed["Dato un non terminale, il \*)
(*suo insieme Follow \[EGrave] composto dai simboli terminali (e dal simbolo $)\n che \*)
(*possono apparire immediatamente dopo il non terminale in qualsiasi \*)
(*derivazione valida.", FrameStyle -> Directive[Thin, White], *)
(*            ImageSize -> {600, 80}], AnalisiSintattica`Private`displayFollow[*)
(*            AnalisiSintattica`Private`emptyCheckboxGrammar]}, *)
(*          Alignment -> Left], If[AnalisiSintattica`Private`showFollow, *)
(*          Column[{Style["Soluzione Follow", Bold], *)
(*            AnalisiSintattica`Private`displayFollowSln[*)
(*             AnalisiSintattica`Private`emptyCheckboxGrammar]}, *)
(*           Alignment -> Left], ""]}], " ", *)
(*       Row[{Column[{Style["TABELLA PRODUZIONI", Bold], Framed["Seleziona la \*)
(*cella in cui inserire la produzione e successivamente il bottone ad essa \*)
(*corrispondente.", FrameStyle -> Directive[Thin, White]], *)
(*           EventHandler[Dynamic[AnalisiSintattica`Private`displayTable[*)
(*              AnalisiSintattica`Private`emptyGrammar, *)
(*              AnalisiSintattica`Private`cursor]], "MouseClicked" :> *)
(*             If[MemberQ[Range[1, AnalisiSintattica`Private`rows**)
(*                  AnalisiSintattica`Private`cols, *)
(*                 AnalisiSintattica`Private`cols], *)
(*                AnalisiSintattica`Private`loc[MousePosition[*)
(*                  "EventHandlerScaled"]]] || MemberQ[Range[1, *)
(*                 AnalisiSintattica`Private`cols], *)
(*                AnalisiSintattica`Private`loc[MousePosition[*)
(*                  "EventHandlerScaled"]]], AnalisiSintattica`Private`cursor = *)
(*               -1, AnalisiSintattica`Private`cursor = *)
(*               AnalisiSintattica`Private`loc[MousePosition[*)
(*                 "EventHandlerScaled"]]]], *)
(*           Row[Table[With[{AnalisiSintattica`Private`i$ = *)
(*                AnalisiSintattica`Private`i}, Button[*)
(*               AnalisiSintattica`Private`listaProduzioni[[*)
(*                AnalisiSintattica`Private`i$]], *)
(*               AnalisiSintattica`Private`emptyGrammar[[*)
(*                  AnalisiSintattica`Private`xy[*)
(*                    AnalisiSintattica`Private`cursor][[1]],*)
(*                  AnalisiSintattica`Private`xy[*)
(*                    AnalisiSintattica`Private`cursor][[2]]]] = *)
(*                 AnalisiSintattica`Private`listaProduzioni[[*)
(*                  AnalisiSintattica`Private`i$]]; *)
(*                If[AnalisiSintattica`Private`soluzione[[*)
(*                   AnalisiSintattica`Private`xy[*)
(*                     AnalisiSintattica`Private`cursor][[1]],*)
(*                   AnalisiSintattica`Private`xy[*)
(*                     AnalisiSintattica`Private`cursor][[2]]]] != *)
(*                  AnalisiSintattica`Private`emptyGrammar[[*)
(*                   AnalisiSintattica`Private`xy[*)
(*                     AnalisiSintattica`Private`cursor][[1]],*)
(*                   AnalisiSintattica`Private`xy[*)
(*                     AnalisiSintattica`Private`cursor][[2]]]], Beep[]]]], *)
(*             {AnalisiSintattica`Private`i, 1, Length[*)
(*               AnalisiSintattica`Private`listaProduzioni]}], Spacer[0.4]], *)
(*           Row[{Button["Clear", AnalisiSintattica`Private`emptyGrammar[[*)
(*                AnalisiSintattica`Private`xy[*)
(*                  AnalisiSintattica`Private`cursor][[1]],*)
(*                AnalisiSintattica`Private`xy[*)
(*                  AnalisiSintattica`Private`cursor][[2]]]] = " "], *)
(*             Button["Clear All", Table[*)
(*               AnalisiSintattica`Private`emptyGrammar[[*)
(*                 AnalisiSintattica`Private`i,AnalisiSintattica`Private`j]] = *)
(*                " ", {AnalisiSintattica`Private`i, 2, *)
(*                AnalisiSintattica`Private`rows}, {*)
(*                AnalisiSintattica`Private`j, 2, *)
(*                AnalisiSintattica`Private`cols}]]}, Alignment -> Center]}], *)
(*         If[AnalisiSintattica`Private`showSolution, *)
(*          Row[{Style["Soluzione tabella delle produzioni", Bold], *)
(*            AnalisiSintattica`Private`displayTableSln[*)
(*             AnalisiSintattica`Private`soluzione]}, Alignment -> Left], ""]}, *)
(*        Alignment -> Center], " "}], " "}}, Editable -> False], *)
(*  {{AnalisiSintattica`Private`soluzione, *)
(*    {{" ", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "$"}, *)
(*     {"A", "A->Bab", " ", "A->Bab", "A->Bab", "A->Bab", "A->C", "A->C", *)
(*      "A->C", " ", " ", " ", " ", " "}, {"B", "B->\[Epsilon]", " ", "B->cD", "B->d", *)
(*      "B->e", " ", " ", " ", " ", " ", " ", " ", " "}, *)
(*     {"C", " ", " ", " ", " ", " ", "C->f", "C->g", "C->h", " ", " ", " ", *)
(*      " ", "C->\[Epsilon]"}, {"D", "D->\[Epsilon]", " ", " ", " ", " ", " ", " ", " ", " ", *)
(*      "D->jik", " ", " ", " "}}}, ControlType -> None}, *)
(*  {{AnalisiSintattica`Private`emptyGrammar, *)
(*    {{" ", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "$"}, *)
(*     {"A", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "}, *)
(*     {"B", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "}, *)
(*     {"C", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "}, *)
(*     {"D", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", *)
(*      " "}}}, ControlType -> None}, *)
(*  {{AnalisiSintattica`Private`emptyCheckboxGrammar, *)
(*    {{" ", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "$"}, *)
(*     {"A", Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], *)
(*      Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], *)
(*      Checkbox[], Checkbox[]}, {"B", Checkbox[], Checkbox[], Checkbox[], *)
(*      Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], *)
(*      Checkbox[], Checkbox[], Checkbox[], Checkbox[]}, *)
(*     {"C", Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], *)
(*      Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], *)
(*      Checkbox[], Checkbox[]}, {"D", Checkbox[], Checkbox[], Checkbox[], *)
(*      Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], *)
(*      Checkbox[], Checkbox[], Checkbox[], Checkbox[]}}}, *)
(*   ControlType -> None}, {{AnalisiSintattica`Private`cursor, 0}, *)
(*   ControlType -> None}, {{AnalisiSintattica`Private`showNullable, False, *)
(*    "Mostra Nullable"}, {True, False}}, *)
(*  {{AnalisiSintattica`Private`showFirst, False, "Mostra First"}, *)
(*   {True, False}}, {{AnalisiSintattica`Private`showFollow, False, *)
(*    "Mostra Follow"}, {True, False}}, *)
(*  {{AnalisiSintattica`Private`showSolution, False, "show solution"}, *)
(*   {True, False}}, ContentSize -> {900, 900}, *)
(*  Initialization :> {AnalisiSintattica`Private`soluzione = *)
(*     {{" ", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "$"}, *)
(*      {"A", "A->Bab", " ", "A->Bab", "A->Bab", "A->Bab", "A->C", "A->C", *)
(*       "A->C", " ", " ", " ", " ", " "}, {"B", "B->\[Epsilon]", " ", "B->cD", "B->d", *)
(*       "B->e", " ", " ", " ", " ", " ", " ", " ", " "}, *)
(*      {"C", " ", " ", " ", " ", " ", "C->f", "C->g", "C->h", " ", " ", " ", *)
(*       " ", "C->\[Epsilon]"}, {"D", "D->\[Epsilon]", " ", " ", " ", " ", " ", " ", " ", " ", *)
(*       "D->jik", " ", " ", " "}}, AnalisiSintattica`Private`grammar = *)
(*     {{" ", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "$"}, *)
(*      {"A", "A->Bab", " ", "A->Bab", "A->Bab", "A->Bab", "A->C", "A->C", *)
(*       "A->C", " ", " ", " ", " ", " "}, {"B", "B->\[Epsilon]", " ", "B->cD", "B->d", *)
(*       "B->e", " ", " ", " ", " ", " ", " ", " ", " "}, *)
(*      {"C", " ", " ", " ", " ", " ", "C->f", "C->g", "C->h", " ", " ", " ", *)
(*       " ", "C->\[Epsilon]"}, {"D", "D->\[Epsilon]", " ", " ", " ", " ", " ", " ", " ", " ", *)
(*       "D->jik", " ", " ", " "}}, *)
(*    AnalisiSintattica`Private`createEmptyGrammar[*)
(*      AnalisiSintattica`Private`sln_] := *)
(*     Module[{AnalisiSintattica`Private`copy = AnalisiSintattica`Private`sln}, *)
(*      Table[If[AnalisiSintattica`Private`i > 1 && *)
(*          AnalisiSintattica`Private`j > 1, AnalisiSintattica`Private`copy[[*)
(*           AnalisiSintattica`Private`i,AnalisiSintattica`Private`j]] = " "], *)
(*        {AnalisiSintattica`Private`i, AnalisiSintattica`Private`rows}, *)
(*        {AnalisiSintattica`Private`j, AnalisiSintattica`Private`cols}]; *)
(*       AnalisiSintattica`Private`copy], AnalisiSintattica`Private`i = 5, *)
(*    AnalisiSintattica`Private`j = 3, AnalisiSintattica`Private`rows = 5, *)
(*    AnalisiSintattica`Private`cols = 14, *)
(*    AnalisiSintattica`Private`listaProduzioni = {"A->C", "A->Bab", "B->cD", *)
(*      "B->d", "B->e", "B->\[Epsilon]", "C->h", "C->g", "C->f", "C->\[Epsilon]", "D->jik", *)
(*      "D->\[Epsilon]"}, AnalisiSintattica`Private`tmp = {"A", "B", "C", "D"}, *)
(*    AnalisiSintattica`Private`nullable = {{"A", True}, {"B", True}, *)
(*      {"C", True}, {"D", True}}, AnalisiSintattica`Private`displayFirst[*)
(*      AnalisiSintattica`Private`g_] := Grid[AnalisiSintattica`Private`g, *)
(*      Frame -> All, Background -> {White, White}, ItemStyle -> {Automatic}, *)
(*      ItemSize -> {{2, {2}}}, BaseStyle -> {Bold}*Editable -> False], *)
(*    AnalisiSintattica`Private`displayFirstSln[*)
(*      AnalisiSintattica`Private`g_] := AnalisiSintattica`Private`displayFirst[*)
(*      AnalisiSintattica`Private`g], AnalisiSintattica`Private`displayFollow[*)
(*      AnalisiSintattica`Private`g_] := Grid[AnalisiSintattica`Private`g, *)
(*      Frame -> All, Background -> {White, White}, ItemStyle -> {Automatic}, *)
(*      ItemSize -> {{2, {2}}}, BaseStyle -> {Bold}*Editable -> False], *)
(*    AnalisiSintattica`Private`displayFollowSln[*)
(*      AnalisiSintattica`Private`g_] := *)
(*     AnalisiSintattica`Private`displayFollow[AnalisiSintattica`Private`g], *)
(*    AnalisiSintattica`Private`displayTable[AnalisiSintattica`Private`g_, *)
(*      AnalisiSintattica`Private`cursor_:0] := *)
(*     Module[{AnalisiSintattica`Private`backgrounds}, *)
(*      AnalisiSintattica`Private`backgrounds = AnalisiSintattica`Private`xy[*)
(*          AnalisiSintattica`Private`cursor] -> *)
(*         If[AnalisiSintattica`Private`cursor > 0, *)
(*          AnalisiSintattica`Private`checkErrors[AnalisiSintattica`Private`g, *)
(*           AnalisiSintattica`Private`cursor]]; *)
(*       Grid[AnalisiSintattica`Private`g, Frame -> *)
(*         If[MatchQ[AnalisiSintattica`Private`xy[*)
(*            AnalisiSintattica`Private`cursor], _Integer], All, *)
(*          {All, All, {AnalisiSintattica`Private`xy[*)
(*              AnalisiSintattica`Private`cursor] -> {Thick, Blue}}}], *)
(*        Background -> {White, White, AnalisiSintattica`Private`backgrounds}, *)
(*        ItemStyle -> {Automatic}, ItemSize -> {{3, {4}}}, *)
(*        BaseStyle -> {Bold}, Editable -> False]], *)
(*    AnalisiSintattica`Private`xy[AnalisiSintattica`Private`n_] := *)
(*     {AnalisiSintattica`Private`row[AnalisiSintattica`Private`n], *)
(*      AnalisiSintattica`Private`col[AnalisiSintattica`Private`n]}, *)
(*    AnalisiSintattica`Private`row[AnalisiSintattica`Private`n_] := *)
(*     Quotient[AnalisiSintattica`Private`n - 1, *)
(*       AnalisiSintattica`Private`cols] + 1, *)
(*    AnalisiSintattica`Private`col[AnalisiSintattica`Private`n_] := *)
(*     Mod[AnalisiSintattica`Private`n - 1, AnalisiSintattica`Private`cols] + *)
(*      1, AnalisiSintattica`Private`checkErrors[AnalisiSintattica`Private`g$_, *)
(*      AnalisiSintattica`Private`cursor$_] := *)
(*     If[AnalisiSintattica`Private`g$[[AnalisiSintattica`Private`xy[*)
(*          AnalisiSintattica`Private`cursor$][[1]],*)
(*        AnalisiSintattica`Private`xy[AnalisiSintattica`Private`cursor$][[*)
(*         2]]]] != " ", If[AnalisiSintattica`Private`g$[[*)
(*         AnalisiSintattica`Private`xy[AnalisiSintattica`Private`cursor$][[1]],*)
(*         AnalisiSintattica`Private`xy[AnalisiSintattica`Private`cursor$][[*)
(*          2]]]] != AnalisiSintattica`Private`soluzione[[*)
(*         AnalisiSintattica`Private`xy[AnalisiSintattica`Private`cursor$][[1]],*)
(*         AnalisiSintattica`Private`xy[AnalisiSintattica`Private`cursor$][[*)
(*          2]]]], LightRed]], AnalisiSintattica`Private`loc[*)
(*      {AnalisiSintattica`Private`x_, AnalisiSintattica`Private`y_}] := *)
(*     1 + Floor[AnalisiSintattica`Private`cols*AnalisiSintattica`Private`x] + *)
(*      AnalisiSintattica`Private`cols*Floor[(1 - AnalisiSintattica`Private`y)**)
(*         AnalisiSintattica`Private`rows], *)
(*    AnalisiSintattica`Private`displayTableSln[*)
(*      AnalisiSintattica`Private`g_] := AnalisiSintattica`Private`displayTable[*)
(*      AnalisiSintattica`Private`g, 0]}]*)


(* ::Output:: *)
(*Manipulate[Grid[{{Column[{Style["ANALISI SINTATTICA", Bold], *)
(*       Style["ESERCIZIO DI GRAMMATICA N\[Degree]:", Bold], Style["Generare gli \*)
(*insiemi Nullable, First e Follow per la seguente grammatica", Bold]}, *)
(*      Alignment -> Left]}, *)
(*    {Column[{Row[{Button["Nuova grammatica", *)
(*          (AnalisiSintattica`Private`cursor = 0; Spacer[5]; *)
(*            AnalisiSintattica`Private`showSolution = False; *)
(*            AnalisiSintattica`Private`soluzione = *)
(*             AnalisiSintattica`Private`grammar; *)
(*            AnalisiSintattica`Private`emptyGrammar = *)
(*             AnalisiSintattica`Private`createEmptyGrammar[*)
(*              AnalisiSintattica`Private`soluzione]; ) & ], *)
(*         DynamicModule[{AnalisiSintattica`Private`numero = ""}, *)
(*          Panel[Column[{Row[{Style["Genera esercizio n\[Degree]: ", Bold], *)
(*               InputField[Dynamic[AnalisiSintattica`Private`numero], *)
(*                Number]}], Dynamic[AnalisiSintattica`Private`numero]; }]]]}], *)
(*       " ", Row[{Column[{Style["Grammatica", Bold], *)
(*           Grid[List /@ AnalisiSintattica`Private`listaProduzioni, *)
(*            Frame -> All, Background -> {White, White}, ItemStyle -> *)
(*             {Automatic}, ItemSize -> {{8, {8}}}, BaseStyle -> *)
(*             {Bold}*Editable -> False]}, Alignment -> Left]}], " ", *)
(*       Row[{Column[{Style["NULLABLE", Bold], Framed["Dato un non terminale, \*)
(*questo \[EGrave] nullable se pu\[OGrave] produrre una stringa vuota (\[Epsilon]).\nSeleziona i non \*)
(*terminali nullable.", FrameStyle -> Directive[Thin, White], *)
(*            ImageSize -> {800, 80}], TabView[Table[*)
(*             AnalisiSintattica`Private`tmp[[AnalisiSintattica`Private`i]] -> *)
(*              Checkbox[], {AnalisiSintattica`Private`i, 1, *)
(*              Length[AnalisiSintattica`Private`tmp]}]]}, Alignment -> Left], *)
(*         " ", If[AnalisiSintattica`Private`showNullable, *)
(*          Column[{Style["Soluzione Nullable", Bold], *)
(*            TabView[Table[AnalisiSintattica`Private`tmp[[*)
(*                AnalisiSintattica`Private`i]] -> *)
(*               AnalisiSintattica`Private`nullable[[*)
(*                AnalisiSintattica`Private`i,2]], *)
(*              {AnalisiSintattica`Private`i, 1, Length[*)
(*                AnalisiSintattica`Private`tmp]}]]}, Alignment -> Left], *)
(*          " "]}], " ", Row[{Column[{Style["FIRST", Bold], Framed["Dato un non \*)
(*terminale (ad esempio A,B), il suo insieme First \[EGrave] composto dai simboli \*)
(*terminali (compreso \[Epsilon])\n che possono apparire come carattere iniziale di una \*)
(*stringa derivata da una sua produzione.", FrameStyle -> Directive[Thin, *)
(*              White], ImageSize -> {800, 80}], *)
(*           AnalisiSintattica`Private`displayFirst[*)
(*            AnalisiSintattica`Private`emptyCheckboxGrammar]}, *)
(*          Alignment -> Left], If[AnalisiSintattica`Private`showFirst, *)
(*          Column[{Style["Soluzione First", Bold], *)
(*            AnalisiSintattica`Private`displayFirstSln[*)
(*             AnalisiSintattica`Private`emptyCheckboxGrammar]}, *)
(*           Alignment -> Left], ""]}], " ", *)
(*       Row[{Column[{Style["FOLLOW", Bold], Framed["Dato un non terminale, il \*)
(*suo insieme Follow \[EGrave] composto dai simboli terminali (e dal simbolo $)\n che \*)
(*possono apparire immediatamente dopo il non terminale in qualsiasi \*)
(*derivazione valida.", FrameStyle -> Directive[Thin, White], *)
(*            ImageSize -> {600, 80}], AnalisiSintattica`Private`displayFollow[*)
(*            AnalisiSintattica`Private`emptyCheckboxGrammar]}, *)
(*          Alignment -> Left], If[AnalisiSintattica`Private`showFollow, *)
(*          Column[{Style["Soluzione Follow", Bold], *)
(*            AnalisiSintattica`Private`displayFollowSln[*)
(*             AnalisiSintattica`Private`emptyCheckboxGrammar]}, *)
(*           Alignment -> Left], ""]}], " ", *)
(*       Row[{Column[{Style["TABELLA PRODUZIONI", Bold], Framed["Seleziona la \*)
(*cella in cui inserire la produzione e successivamente il bottone ad essa \*)
(*corrispondente.", FrameStyle -> Directive[Thin, White]], *)
(*           EventHandler[Dynamic[AnalisiSintattica`Private`displayTable[*)
(*              AnalisiSintattica`Private`emptyGrammar, *)
(*              AnalisiSintattica`Private`cursor]], "MouseClicked" :> *)
(*             If[MemberQ[Range[1, AnalisiSintattica`Private`rows**)
(*                  AnalisiSintattica`Private`cols, *)
(*                 AnalisiSintattica`Private`cols], *)
(*                AnalisiSintattica`Private`loc[MousePosition[*)
(*                  "EventHandlerScaled"]]] || MemberQ[Range[1, *)
(*                 AnalisiSintattica`Private`cols], *)
(*                AnalisiSintattica`Private`loc[MousePosition[*)
(*                  "EventHandlerScaled"]]], AnalisiSintattica`Private`cursor = *)
(*               -1, AnalisiSintattica`Private`cursor = *)
(*               AnalisiSintattica`Private`loc[MousePosition[*)
(*                 "EventHandlerScaled"]]]], *)
(*           Row[Table[With[{AnalisiSintattica`Private`i$ = *)
(*                AnalisiSintattica`Private`i}, Button[*)
(*               AnalisiSintattica`Private`listaProduzioni[[*)
(*                AnalisiSintattica`Private`i$]], *)
(*               AnalisiSintattica`Private`emptyGrammar[[*)
(*                  AnalisiSintattica`Private`xy[*)
(*                    AnalisiSintattica`Private`cursor][[1]],*)
(*                  AnalisiSintattica`Private`xy[*)
(*                    AnalisiSintattica`Private`cursor][[2]]]] = *)
(*                 AnalisiSintattica`Private`listaProduzioni[[*)
(*                  AnalisiSintattica`Private`i$]]; *)
(*                If[AnalisiSintattica`Private`soluzione[[*)
(*                   AnalisiSintattica`Private`xy[*)
(*                     AnalisiSintattica`Private`cursor][[1]],*)
(*                   AnalisiSintattica`Private`xy[*)
(*                     AnalisiSintattica`Private`cursor][[2]]]] != *)
(*                  AnalisiSintattica`Private`emptyGrammar[[*)
(*                   AnalisiSintattica`Private`xy[*)
(*                     AnalisiSintattica`Private`cursor][[1]],*)
(*                   AnalisiSintattica`Private`xy[*)
(*                     AnalisiSintattica`Private`cursor][[2]]]], Beep[]]]], *)
(*             {AnalisiSintattica`Private`i, 1, Length[*)
(*               AnalisiSintattica`Private`listaProduzioni]}], Spacer[0.4]], *)
(*           Row[{Button["Clear", AnalisiSintattica`Private`emptyGrammar[[*)
(*                AnalisiSintattica`Private`xy[*)
(*                  AnalisiSintattica`Private`cursor][[1]],*)
(*                AnalisiSintattica`Private`xy[*)
(*                  AnalisiSintattica`Private`cursor][[2]]]] = " "], *)
(*             Button["Clear All", Table[*)
(*               AnalisiSintattica`Private`emptyGrammar[[*)
(*                 AnalisiSintattica`Private`i,AnalisiSintattica`Private`j]] = *)
(*                " ", {AnalisiSintattica`Private`i, 2, *)
(*                AnalisiSintattica`Private`rows}, {*)
(*                AnalisiSintattica`Private`j, 2, *)
(*                AnalisiSintattica`Private`cols}]]}, Alignment -> Center]}], *)
(*         If[AnalisiSintattica`Private`showSolution, *)
(*          Row[{Style["Soluzione tabella delle produzioni", Bold], *)
(*            AnalisiSintattica`Private`displayTableSln[*)
(*             AnalisiSintattica`Private`soluzione]}, Alignment -> Left], ""]}, *)
(*        Alignment -> Center], " "}], " "}}, Editable -> False], *)
(*  {{AnalisiSintattica`Private`soluzione, *)
(*    {{" ", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "$"}, *)
(*     {"A", "A->Bab", " ", "A->Bab", "A->Bab", "A->Bab", "A->C", "A->C", *)
(*      "A->C", " ", " ", " ", " ", " "}, {"B", "B->\[Epsilon]", " ", "B->cD", "B->d", *)
(*      "B->e", " ", " ", " ", " ", " ", " ", " ", " "}, *)
(*     {"C", " ", " ", " ", " ", " ", "C->f", "C->g", "C->h", " ", " ", " ", *)
(*      " ", "C->\[Epsilon]"}, {"D", "D->\[Epsilon]", " ", " ", " ", " ", " ", " ", " ", " ", *)
(*      "D->jik", " ", " ", " "}}}, ControlType -> None}, *)
(*  {{AnalisiSintattica`Private`emptyGrammar, *)
(*    {{" ", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "$"}, *)
(*     {"A", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "}, *)
(*     {"B", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "}, *)
(*     {"C", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "}, *)
(*     {"D", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", *)
(*      " "}}}, ControlType -> None}, *)
(*  {{AnalisiSintattica`Private`emptyCheckboxGrammar, *)
(*    {{" ", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "$"}, *)
(*     {"A", Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], *)
(*      Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], *)
(*      Checkbox[], Checkbox[]}, {"B", Checkbox[], Checkbox[], Checkbox[], *)
(*      Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], *)
(*      Checkbox[], Checkbox[], Checkbox[], Checkbox[]}, *)
(*     {"C", Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], *)
(*      Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], *)
(*      Checkbox[], Checkbox[]}, {"D", Checkbox[], Checkbox[], Checkbox[], *)
(*      Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], *)
(*      Checkbox[], Checkbox[], Checkbox[], Checkbox[]}}}, *)
(*   ControlType -> None}, {{AnalisiSintattica`Private`cursor, 0}, *)
(*   ControlType -> None}, {{AnalisiSintattica`Private`showNullable, False, *)
(*    "Mostra Nullable"}, {True, False}}, *)
(*  {{AnalisiSintattica`Private`showFirst, False, "Mostra First"}, *)
(*   {True, False}}, {{AnalisiSintattica`Private`showFollow, False, *)
(*    "Mostra Follow"}, {True, False}}, *)
(*  {{AnalisiSintattica`Private`showSolution, False, "show solution"}, *)
(*   {True, False}}, ContentSize -> {900, 900}, *)
(*  Initialization :> {AnalisiSintattica`Private`soluzione = *)
(*     {{" ", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "$"}, *)
(*      {"A", "A->Bab", " ", "A->Bab", "A->Bab", "A->Bab", "A->C", "A->C", *)
(*       "A->C", " ", " ", " ", " ", " "}, {"B", "B->\[Epsilon]", " ", "B->cD", "B->d", *)
(*       "B->e", " ", " ", " ", " ", " ", " ", " ", " "}, *)
(*      {"C", " ", " ", " ", " ", " ", "C->f", "C->g", "C->h", " ", " ", " ", *)
(*       " ", "C->\[Epsilon]"}, {"D", "D->\[Epsilon]", " ", " ", " ", " ", " ", " ", " ", " ", *)
(*       "D->jik", " ", " ", " "}}, AnalisiSintattica`Private`grammar = *)
(*     {{" ", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "$"}, *)
(*      {"A", "A->Bab", " ", "A->Bab", "A->Bab", "A->Bab", "A->C", "A->C", *)
(*       "A->C", " ", " ", " ", " ", " "}, {"B", "B->\[Epsilon]", " ", "B->cD", "B->d", *)
(*       "B->e", " ", " ", " ", " ", " ", " ", " ", " "}, *)
(*      {"C", " ", " ", " ", " ", " ", "C->f", "C->g", "C->h", " ", " ", " ", *)
(*       " ", "C->\[Epsilon]"}, {"D", "D->\[Epsilon]", " ", " ", " ", " ", " ", " ", " ", " ", *)
(*       "D->jik", " ", " ", " "}}, *)
(*    AnalisiSintattica`Private`createEmptyGrammar[*)
(*      AnalisiSintattica`Private`sln_] := *)
(*     Module[{AnalisiSintattica`Private`copy = AnalisiSintattica`Private`sln}, *)
(*      Table[If[AnalisiSintattica`Private`i > 1 && *)
(*          AnalisiSintattica`Private`j > 1, AnalisiSintattica`Private`copy[[*)
(*           AnalisiSintattica`Private`i,AnalisiSintattica`Private`j]] = " "], *)
(*        {AnalisiSintattica`Private`i, AnalisiSintattica`Private`rows}, *)
(*        {AnalisiSintattica`Private`j, AnalisiSintattica`Private`cols}]; *)
(*       AnalisiSintattica`Private`copy], AnalisiSintattica`Private`i = 5, *)
(*    AnalisiSintattica`Private`j = 3, AnalisiSintattica`Private`rows = 5, *)
(*    AnalisiSintattica`Private`cols = 14, *)
(*    AnalisiSintattica`Private`listaProduzioni = {"A->C", "A->Bab", "B->cD", *)
(*      "B->d", "B->e", "B->\[Epsilon]", "C->h", "C->g", "C->f", "C->\[Epsilon]", "D->jik", *)
(*      "D->\[Epsilon]"}, AnalisiSintattica`Private`tmp = {"A", "B", "C", "D"}, *)
(*    AnalisiSintattica`Private`nullable = {{"A", True}, {"B", True}, *)
(*      {"C", True}, {"D", True}}, AnalisiSintattica`Private`displayFirst[*)
(*      AnalisiSintattica`Private`g_] := Grid[AnalisiSintattica`Private`g, *)
(*      Frame -> All, Background -> {White, White}, ItemStyle -> {Automatic}, *)
(*      ItemSize -> {{2, {2}}}, BaseStyle -> {Bold}*Editable -> False], *)
(*    AnalisiSintattica`Private`displayFirstSln[*)
(*      AnalisiSintattica`Private`g_] := AnalisiSintattica`Private`displayFirst[*)
(*      AnalisiSintattica`Private`g], AnalisiSintattica`Private`displayFollow[*)
(*      AnalisiSintattica`Private`g_] := Grid[AnalisiSintattica`Private`g, *)
(*      Frame -> All, Background -> {White, White}, ItemStyle -> {Automatic}, *)
(*      ItemSize -> {{2, {2}}}, BaseStyle -> {Bold}*Editable -> False], *)
(*    AnalisiSintattica`Private`displayFollowSln[*)
(*      AnalisiSintattica`Private`g_] := *)
(*     AnalisiSintattica`Private`displayFollow[AnalisiSintattica`Private`g], *)
(*    AnalisiSintattica`Private`displayTable[AnalisiSintattica`Private`g_, *)
(*      AnalisiSintattica`Private`cursor_:0] := *)
(*     Module[{AnalisiSintattica`Private`backgrounds}, *)
(*      AnalisiSintattica`Private`backgrounds = AnalisiSintattica`Private`xy[*)
(*          AnalisiSintattica`Private`cursor] -> *)
(*         If[AnalisiSintattica`Private`cursor > 0, *)
(*          AnalisiSintattica`Private`checkErrors[AnalisiSintattica`Private`g, *)
(*           AnalisiSintattica`Private`cursor], White]; *)
(*       Grid[AnalisiSintattica`Private`g, Frame -> *)
(*         If[MatchQ[AnalisiSintattica`Private`xy[*)
(*            AnalisiSintattica`Private`cursor], _Integer], All, *)
(*          {All, All, {AnalisiSintattica`Private`xy[*)
(*              AnalisiSintattica`Private`cursor] -> {Thick, Blue}}}], *)
(*        Background -> {White, White, AnalisiSintattica`Private`backgrounds}, *)
(*        ItemStyle -> {Automatic}, ItemSize -> {{3, {4}}}, *)
(*        BaseStyle -> {Bold}, Editable -> False]], *)
(*    AnalisiSintattica`Private`xy[AnalisiSintattica`Private`n_] := *)
(*     {AnalisiSintattica`Private`row[AnalisiSintattica`Private`n], *)
(*      AnalisiSintattica`Private`col[AnalisiSintattica`Private`n]}, *)
(*    AnalisiSintattica`Private`row[AnalisiSintattica`Private`n_] := *)
(*     Quotient[AnalisiSintattica`Private`n - 1, *)
(*       AnalisiSintattica`Private`cols] + 1, *)
(*    AnalisiSintattica`Private`col[AnalisiSintattica`Private`n_] := *)
(*     Mod[AnalisiSintattica`Private`n - 1, AnalisiSintattica`Private`cols] + *)
(*      1, AnalisiSintattica`Private`checkErrors[AnalisiSintattica`Private`g$_, *)
(*      AnalisiSintattica`Private`cursor$_] := *)
(*     If[AnalisiSintattica`Private`g$[[AnalisiSintattica`Private`xy[*)
(*          AnalisiSintattica`Private`cursor$][[1]],*)
(*        AnalisiSintattica`Private`xy[AnalisiSintattica`Private`cursor$][[*)
(*         2]]]] != " ", If[AnalisiSintattica`Private`g$[[*)
(*         AnalisiSintattica`Private`xy[AnalisiSintattica`Private`cursor$][[1]],*)
(*         AnalisiSintattica`Private`xy[AnalisiSintattica`Private`cursor$][[*)
(*          2]]]] != AnalisiSintattica`Private`soluzione[[*)
(*         AnalisiSintattica`Private`xy[AnalisiSintattica`Private`cursor$][[1]],*)
(*         AnalisiSintattica`Private`xy[AnalisiSintattica`Private`cursor$][[*)
(*          2]]]], LightRed]], AnalisiSintattica`Private`loc[*)
(*      {AnalisiSintattica`Private`x_, AnalisiSintattica`Private`y_}] := *)
(*     1 + Floor[AnalisiSintattica`Private`cols*AnalisiSintattica`Private`x] + *)
(*      AnalisiSintattica`Private`cols*Floor[(1 - AnalisiSintattica`Private`y)**)
(*         AnalisiSintattica`Private`rows], *)
(*    AnalisiSintattica`Private`displayTableSln[*)
(*      AnalisiSintattica`Private`g_] := AnalisiSintattica`Private`displayTable[*)
(*      AnalisiSintattica`Private`g, 0]}]*)


(* ::Output:: *)
(*Manipulate[Grid[{{Column[{Style["ANALISI SINTATTICA", Bold], *)
(*       Style["ESERCIZIO DI GRAMMATICA N\[Degree]:", Bold], Style["Generare gli \*)
(*insiemi Nullable, First e Follow per la seguente grammatica", Bold]}, *)
(*      Alignment -> Left]}, *)
(*    {Column[{Row[{Button["Nuova grammatica", *)
(*          (AnalisiSintattica`Private`cursor = 0; Spacer[5]; *)
(*            AnalisiSintattica`Private`showSolution = False; *)
(*            AnalisiSintattica`Private`soluzione = *)
(*             AnalisiSintattica`Private`grammar; *)
(*            AnalisiSintattica`Private`emptyGrammar = *)
(*             AnalisiSintattica`Private`createEmptyGrammar[*)
(*              AnalisiSintattica`Private`soluzione]; ) & ], *)
(*         DynamicModule[{AnalisiSintattica`Private`numero = ""}, *)
(*          Panel[Column[{Row[{Style["Genera esercizio n\[Degree]: ", Bold], *)
(*               InputField[Dynamic[AnalisiSintattica`Private`numero], *)
(*                Number]}], Dynamic[AnalisiSintattica`Private`numero]; }]]]}], *)
(*       " ", Row[{Column[{Style["Grammatica", Bold], *)
(*           Grid[List /@ AnalisiSintattica`Private`listaProduzioni, *)
(*            Frame -> All, Background -> {White, White}, ItemStyle -> *)
(*             {Automatic}, ItemSize -> {{8, {8}}}, BaseStyle -> *)
(*             {Bold}*Editable -> False]}, Alignment -> Left]}], " ", *)
(*       Row[{Column[{Style["NULLABLE", Bold], Framed["Dato un non terminale, \*)
(*questo \[EGrave] nullable se pu\[OGrave] produrre una stringa vuota (\[Epsilon]).\nSeleziona i non \*)
(*terminali nullable.", FrameStyle -> Directive[Thin, White], *)
(*            ImageSize -> {800, 80}], TabView[Table[*)
(*             AnalisiSintattica`Private`tmp[[AnalisiSintattica`Private`i]] -> *)
(*              Checkbox[], {AnalisiSintattica`Private`i, 1, *)
(*              Length[AnalisiSintattica`Private`tmp]}]]}, Alignment -> Left], *)
(*         " ", If[AnalisiSintattica`Private`showNullable, *)
(*          Column[{Style["Soluzione Nullable", Bold], *)
(*            TabView[Table[AnalisiSintattica`Private`tmp[[*)
(*                AnalisiSintattica`Private`i]] -> *)
(*               AnalisiSintattica`Private`nullable[[*)
(*                AnalisiSintattica`Private`i,2]], *)
(*              {AnalisiSintattica`Private`i, 1, Length[*)
(*                AnalisiSintattica`Private`tmp]}]]}, Alignment -> Left], *)
(*          " "]}], " ", Row[{Column[{Style["FIRST", Bold], Framed["Dato un non \*)
(*terminale (ad esempio A,B), il suo insieme First \[EGrave] composto dai simboli \*)
(*terminali (compreso \[Epsilon])\n che possono apparire come carattere iniziale di una \*)
(*stringa derivata da una sua produzione.", FrameStyle -> Directive[Thin, *)
(*              White], ImageSize -> {800, 80}], *)
(*           AnalisiSintattica`Private`displayFirst[*)
(*            AnalisiSintattica`Private`emptyCheckboxGrammar]}, *)
(*          Alignment -> Left], If[AnalisiSintattica`Private`showFirst, *)
(*          Column[{Style["Soluzione First", Bold], *)
(*            AnalisiSintattica`Private`displayFirstSln[*)
(*             AnalisiSintattica`Private`emptyCheckboxGrammar]}, *)
(*           Alignment -> Left], ""]}], " ", *)
(*       Row[{Column[{Style["FOLLOW", Bold], Framed["Dato un non terminale, il \*)
(*suo insieme Follow \[EGrave] composto dai simboli terminali (e dal simbolo $)\n che \*)
(*possono apparire immediatamente dopo il non terminale in qualsiasi \*)
(*derivazione valida.", FrameStyle -> Directive[Thin, White], *)
(*            ImageSize -> {600, 80}], AnalisiSintattica`Private`displayFollow[*)
(*            AnalisiSintattica`Private`emptyCheckboxGrammar]}, *)
(*          Alignment -> Left], If[AnalisiSintattica`Private`showFollow, *)
(*          Column[{Style["Soluzione Follow", Bold], *)
(*            AnalisiSintattica`Private`displayFollowSln[*)
(*             AnalisiSintattica`Private`emptyCheckboxGrammar]}, *)
(*           Alignment -> Left], ""]}], " ", *)
(*       Row[{Column[{Style["TABELLA PRODUZIONI", Bold], Framed["Seleziona la \*)
(*cella in cui inserire la produzione e successivamente il bottone ad essa \*)
(*corrispondente.", FrameStyle -> Directive[Thin, White]], *)
(*           EventHandler[Dynamic[AnalisiSintattica`Private`displayTable[*)
(*              AnalisiSintattica`Private`emptyGrammar, *)
(*              AnalisiSintattica`Private`cursor]], "MouseClicked" :> *)
(*             If[MemberQ[Range[1, AnalisiSintattica`Private`rows**)
(*                  AnalisiSintattica`Private`cols, *)
(*                 AnalisiSintattica`Private`cols], *)
(*                AnalisiSintattica`Private`loc[MousePosition[*)
(*                  "EventHandlerScaled"]]] || MemberQ[Range[1, *)
(*                 AnalisiSintattica`Private`cols], *)
(*                AnalisiSintattica`Private`loc[MousePosition[*)
(*                  "EventHandlerScaled"]]], AnalisiSintattica`Private`cursor = *)
(*               -1, AnalisiSintattica`Private`cursor = *)
(*               AnalisiSintattica`Private`loc[MousePosition[*)
(*                 "EventHandlerScaled"]]]], *)
(*           Row[Table[With[{AnalisiSintattica`Private`i$ = *)
(*                AnalisiSintattica`Private`i}, Button[*)
(*               AnalisiSintattica`Private`listaProduzioni[[*)
(*                AnalisiSintattica`Private`i$]], *)
(*               AnalisiSintattica`Private`emptyGrammar[[*)
(*                  AnalisiSintattica`Private`xy[*)
(*                    AnalisiSintattica`Private`cursor][[1]],*)
(*                  AnalisiSintattica`Private`xy[*)
(*                    AnalisiSintattica`Private`cursor][[2]]]] = *)
(*                 AnalisiSintattica`Private`listaProduzioni[[*)
(*                  AnalisiSintattica`Private`i$]]; *)
(*                If[AnalisiSintattica`Private`soluzione[[*)
(*                   AnalisiSintattica`Private`xy[*)
(*                     AnalisiSintattica`Private`cursor][[1]],*)
(*                   AnalisiSintattica`Private`xy[*)
(*                     AnalisiSintattica`Private`cursor][[2]]]] != *)
(*                  AnalisiSintattica`Private`emptyGrammar[[*)
(*                   AnalisiSintattica`Private`xy[*)
(*                     AnalisiSintattica`Private`cursor][[1]],*)
(*                   AnalisiSintattica`Private`xy[*)
(*                     AnalisiSintattica`Private`cursor][[2]]]], Beep[]]]], *)
(*             {AnalisiSintattica`Private`i, 1, Length[*)
(*               AnalisiSintattica`Private`listaProduzioni]}], Spacer[0.4]], *)
(*           Row[{Button["Clear", AnalisiSintattica`Private`emptyGrammar[[*)
(*                AnalisiSintattica`Private`xy[*)
(*                  AnalisiSintattica`Private`cursor][[1]],*)
(*                AnalisiSintattica`Private`xy[*)
(*                  AnalisiSintattica`Private`cursor][[2]]]] = " "], *)
(*             Button["Clear All", Table[*)
(*               AnalisiSintattica`Private`emptyGrammar[[*)
(*                 AnalisiSintattica`Private`i,AnalisiSintattica`Private`j]] = *)
(*                " ", {AnalisiSintattica`Private`i, 2, *)
(*                AnalisiSintattica`Private`rows}, {*)
(*                AnalisiSintattica`Private`j, 2, *)
(*                AnalisiSintattica`Private`cols}]]}, Alignment -> Center]}], *)
(*         If[AnalisiSintattica`Private`showSolution, *)
(*          Row[{Style["Soluzione tabella delle produzioni", Bold], *)
(*            AnalisiSintattica`Private`displayTableSln[*)
(*             AnalisiSintattica`Private`soluzione]}, Alignment -> Left], ""]}, *)
(*        Alignment -> Center], " "}], " "}}, Editable -> False], *)
(*  {{AnalisiSintattica`Private`soluzione, *)
(*    {{" ", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "$"}, *)
(*     {"A", "A->Bab", " ", "A->Bab", "A->Bab", "A->Bab", "A->C", "A->C", *)
(*      "A->C", " ", " ", " ", " ", " "}, {"B", "B->\[Epsilon]", " ", "B->cD", "B->d", *)
(*      "B->e", " ", " ", " ", " ", " ", " ", " ", " "}, *)
(*     {"C", " ", " ", " ", " ", " ", "C->f", "C->g", "C->h", " ", " ", " ", *)
(*      " ", "C->\[Epsilon]"}, {"D", "D->\[Epsilon]", " ", " ", " ", " ", " ", " ", " ", " ", *)
(*      "D->jik", " ", " ", " "}}}, ControlType -> None}, *)
(*  {{AnalisiSintattica`Private`emptyGrammar, *)
(*    {{" ", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "$"}, *)
(*     {"A", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "}, *)
(*     {"B", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "}, *)
(*     {"C", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "}, *)
(*     {"D", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", *)
(*      " "}}}, ControlType -> None}, *)
(*  {{AnalisiSintattica`Private`emptyCheckboxGrammar, *)
(*    {{" ", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "$"}, *)
(*     {"A", Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], *)
(*      Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], *)
(*      Checkbox[], Checkbox[]}, {"B", Checkbox[], Checkbox[], Checkbox[], *)
(*      Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], *)
(*      Checkbox[], Checkbox[], Checkbox[], Checkbox[]}, *)
(*     {"C", Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], *)
(*      Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], *)
(*      Checkbox[], Checkbox[]}, {"D", Checkbox[], Checkbox[], Checkbox[], *)
(*      Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], *)
(*      Checkbox[], Checkbox[], Checkbox[], Checkbox[]}}}, *)
(*   ControlType -> None}, {{AnalisiSintattica`Private`cursor, 0}, *)
(*   ControlType -> None}, {{AnalisiSintattica`Private`showNullable, False, *)
(*    "Mostra Nullable"}, {True, False}}, *)
(*  {{AnalisiSintattica`Private`showFirst, False, "Mostra First"}, *)
(*   {True, False}}, {{AnalisiSintattica`Private`showFollow, False, *)
(*    "Mostra Follow"}, {True, False}}, *)
(*  {{AnalisiSintattica`Private`showSolution, False, "show solution"}, *)
(*   {True, False}}, ContentSize -> {900, 900}, *)
(*  Initialization :> {AnalisiSintattica`Private`soluzione = *)
(*     {{" ", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "$"}, *)
(*      {"A", "A->Bab", " ", "A->Bab", "A->Bab", "A->Bab", "A->C", "A->C", *)
(*       "A->C", " ", " ", " ", " ", " "}, {"B", "B->\[Epsilon]", " ", "B->cD", "B->d", *)
(*       "B->e", " ", " ", " ", " ", " ", " ", " ", " "}, *)
(*      {"C", " ", " ", " ", " ", " ", "C->f", "C->g", "C->h", " ", " ", " ", *)
(*       " ", "C->\[Epsilon]"}, {"D", "D->\[Epsilon]", " ", " ", " ", " ", " ", " ", " ", " ", *)
(*       "D->jik", " ", " ", " "}}, AnalisiSintattica`Private`grammar = *)
(*     {{" ", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "$"}, *)
(*      {"A", "A->Bab", " ", "A->Bab", "A->Bab", "A->Bab", "A->C", "A->C", *)
(*       "A->C", " ", " ", " ", " ", " "}, {"B", "B->\[Epsilon]", " ", "B->cD", "B->d", *)
(*       "B->e", " ", " ", " ", " ", " ", " ", " ", " "}, *)
(*      {"C", " ", " ", " ", " ", " ", "C->f", "C->g", "C->h", " ", " ", " ", *)
(*       " ", "C->\[Epsilon]"}, {"D", "D->\[Epsilon]", " ", " ", " ", " ", " ", " ", " ", " ", *)
(*       "D->jik", " ", " ", " "}}, *)
(*    AnalisiSintattica`Private`createEmptyGrammar[*)
(*      AnalisiSintattica`Private`sln_] := *)
(*     Module[{AnalisiSintattica`Private`copy = AnalisiSintattica`Private`sln}, *)
(*      Table[If[AnalisiSintattica`Private`i > 1 && *)
(*          AnalisiSintattica`Private`j > 1, AnalisiSintattica`Private`copy[[*)
(*           AnalisiSintattica`Private`i,AnalisiSintattica`Private`j]] = " "], *)
(*        {AnalisiSintattica`Private`i, AnalisiSintattica`Private`rows}, *)
(*        {AnalisiSintattica`Private`j, AnalisiSintattica`Private`cols}]; *)
(*       AnalisiSintattica`Private`copy], AnalisiSintattica`Private`i = 5, *)
(*    AnalisiSintattica`Private`j = 3, AnalisiSintattica`Private`rows = 5, *)
(*    AnalisiSintattica`Private`cols = 14, *)
(*    AnalisiSintattica`Private`listaProduzioni = {"A->C", "A->Bab", "B->cD", *)
(*      "B->d", "B->e", "B->\[Epsilon]", "C->h", "C->g", "C->f", "C->\[Epsilon]", "D->jik", *)
(*      "D->\[Epsilon]"}, AnalisiSintattica`Private`tmp = {"A", "B", "C", "D"}, *)
(*    AnalisiSintattica`Private`nullable = {{"A", True}, {"B", True}, *)
(*      {"C", True}, {"D", True}}, AnalisiSintattica`Private`displayFirst[*)
(*      AnalisiSintattica`Private`g_] := Grid[AnalisiSintattica`Private`g, *)
(*      Frame -> All, Background -> {White, White}, ItemStyle -> {Automatic}, *)
(*      ItemSize -> {{2, {2}}}, BaseStyle -> {Bold}*Editable -> False], *)
(*    AnalisiSintattica`Private`displayFirstSln[*)
(*      AnalisiSintattica`Private`g_] := AnalisiSintattica`Private`displayFirst[*)
(*      AnalisiSintattica`Private`g], AnalisiSintattica`Private`displayFollow[*)
(*      AnalisiSintattica`Private`g_] := Grid[AnalisiSintattica`Private`g, *)
(*      Frame -> All, Background -> {White, White}, ItemStyle -> {Automatic}, *)
(*      ItemSize -> {{2, {2}}}, BaseStyle -> {Bold}*Editable -> False], *)
(*    AnalisiSintattica`Private`displayFollowSln[*)
(*      AnalisiSintattica`Private`g_] := *)
(*     AnalisiSintattica`Private`displayFollow[AnalisiSintattica`Private`g], *)
(*    AnalisiSintattica`Private`displayTable[AnalisiSintattica`Private`g_, *)
(*      AnalisiSintattica`Private`cursor_:0] := *)
(*     Module[{AnalisiSintattica`Private`backgrounds}, *)
(*      AnalisiSintattica`Private`backgrounds = *)
(*        Join[AnalisiSintattica`Private`xy[*)
(*           AnalisiSintattica`Private`cursor] -> *)
(*          If[AnalisiSintattica`Private`cursor > 0, LightGray], *)
(*         AnalisiSintattica`Private`xy[AnalisiSintattica`Private`cursor] -> *)
(*          If[AnalisiSintattica`Private`cursor > 0, *)
(*           AnalisiSintattica`Private`checkErrors[AnalisiSintattica`Private`g, *)
(*            AnalisiSintattica`Private`cursor]]]; *)
(*       Grid[AnalisiSintattica`Private`g, Frame -> *)
(*         If[MatchQ[AnalisiSintattica`Private`xy[*)
(*            AnalisiSintattica`Private`cursor], _Integer], All, *)
(*          {All, All, {AnalisiSintattica`Private`xy[*)
(*              AnalisiSintattica`Private`cursor] -> {Thick, Blue}}}], *)
(*        Background -> {White, White, AnalisiSintattica`Private`backgrounds}, *)
(*        ItemStyle -> {Automatic}, ItemSize -> {{3, {4}}}, *)
(*        BaseStyle -> {Bold}, Editable -> False]], *)
(*    AnalisiSintattica`Private`xy[AnalisiSintattica`Private`n_] := *)
(*     {AnalisiSintattica`Private`row[AnalisiSintattica`Private`n], *)
(*      AnalisiSintattica`Private`col[AnalisiSintattica`Private`n]}, *)
(*    AnalisiSintattica`Private`row[AnalisiSintattica`Private`n_] := *)
(*     Quotient[AnalisiSintattica`Private`n - 1, *)
(*       AnalisiSintattica`Private`cols] + 1, *)
(*    AnalisiSintattica`Private`col[AnalisiSintattica`Private`n_] := *)
(*     Mod[AnalisiSintattica`Private`n - 1, AnalisiSintattica`Private`cols] + *)
(*      1, AnalisiSintattica`Private`checkErrors[AnalisiSintattica`Private`g$_, *)
(*      AnalisiSintattica`Private`cursor$_] := *)
(*     If[AnalisiSintattica`Private`g$[[AnalisiSintattica`Private`xy[*)
(*          AnalisiSintattica`Private`cursor$][[1]],*)
(*        AnalisiSintattica`Private`xy[AnalisiSintattica`Private`cursor$][[*)
(*         2]]]] != " ", If[AnalisiSintattica`Private`g$[[*)
(*         AnalisiSintattica`Private`xy[AnalisiSintattica`Private`cursor$][[1]],*)
(*         AnalisiSintattica`Private`xy[AnalisiSintattica`Private`cursor$][[*)
(*          2]]]] != FE`AnalisiSintattica`Private`soluzione$$403[[*)
(*         AnalisiSintattica`Private`xy[AnalisiSintattica`Private`cursor$][[1]],*)
(*         AnalisiSintattica`Private`xy[AnalisiSintattica`Private`cursor$][[*)
(*          2]]]], LightRed]], Attributes[AnalisiSintattica`Private`g$] = *)
(*     {Temporary}, Attributes[AnalisiSintattica`Private`cursor$] = *)
(*     {Temporary}, AnalisiSintattica`Private`loc[*)
(*      {AnalisiSintattica`Private`x_, AnalisiSintattica`Private`y_}] := *)
(*     1 + Floor[AnalisiSintattica`Private`cols*AnalisiSintattica`Private`x] + *)
(*      AnalisiSintattica`Private`cols*Floor[(1 - AnalisiSintattica`Private`y)**)
(*         AnalisiSintattica`Private`rows], *)
(*    AnalisiSintattica`Private`displayTableSln[*)
(*      AnalisiSintattica`Private`g_] := AnalisiSintattica`Private`displayTable[*)
(*      AnalisiSintattica`Private`g, 0]}]*)


(* ::Output:: *)
(*Manipulate[Grid[{{Column[{Style["ANALISI SINTATTICA", Bold], *)
(*       Style["ESERCIZIO DI GRAMMATICA N\[Degree]:", Bold], Style["Generare gli \*)
(*insiemi Nullable, First e Follow per la seguente grammatica", Bold]}, *)
(*      Alignment -> Left]}, *)
(*    {Column[{Row[{Button["Nuova grammatica", *)
(*          (AnalisiSintattica`Private`cursor = 0; Spacer[5]; *)
(*            AnalisiSintattica`Private`showSolution = False; *)
(*            AnalisiSintattica`Private`soluzione = *)
(*             AnalisiSintattica`Private`grammar; *)
(*            AnalisiSintattica`Private`emptyGrammar = *)
(*             AnalisiSintattica`Private`createEmptyGrammar[*)
(*              AnalisiSintattica`Private`soluzione]; ) & ], *)
(*         DynamicModule[{AnalisiSintattica`Private`numero = ""}, *)
(*          Panel[Column[{Row[{Style["Genera esercizio n\[Degree]: ", Bold], *)
(*               InputField[Dynamic[AnalisiSintattica`Private`numero], *)
(*                Number]}], Dynamic[AnalisiSintattica`Private`numero]; }]]]}], *)
(*       " ", Row[{Column[{Style["Grammatica", Bold], *)
(*           Grid[List /@ AnalisiSintattica`Private`listaProduzioni, *)
(*            Frame -> All, Background -> {White, White}, ItemStyle -> *)
(*             {Automatic}, ItemSize -> {{8, {8}}}, BaseStyle -> *)
(*             {Bold}*Editable -> False]}, Alignment -> Left]}], " ", *)
(*       Row[{Column[{Style["NULLABLE", Bold], Framed["Dato un non terminale, \*)
(*questo \[EGrave] nullable se pu\[OGrave] produrre una stringa vuota (\[Epsilon]).\nSeleziona i non \*)
(*terminali nullable.", FrameStyle -> Directive[Thin, White], *)
(*            ImageSize -> {800, 80}], TabView[Table[*)
(*             AnalisiSintattica`Private`tmp[[AnalisiSintattica`Private`i]] -> *)
(*              Checkbox[], {AnalisiSintattica`Private`i, 1, *)
(*              Length[AnalisiSintattica`Private`tmp]}]]}, Alignment -> Left], *)
(*         " ", If[AnalisiSintattica`Private`showNullable, *)
(*          Column[{Style["Soluzione Nullable", Bold], *)
(*            TabView[Table[AnalisiSintattica`Private`tmp[[*)
(*                AnalisiSintattica`Private`i]] -> *)
(*               AnalisiSintattica`Private`nullable[[*)
(*                AnalisiSintattica`Private`i,2]], *)
(*              {AnalisiSintattica`Private`i, 1, Length[*)
(*                AnalisiSintattica`Private`tmp]}]]}, Alignment -> Left], *)
(*          " "]}], " ", Row[{Column[{Style["FIRST", Bold], Framed["Dato un non \*)
(*terminale (ad esempio A,B), il suo insieme First \[EGrave] composto dai simboli \*)
(*terminali (compreso \[Epsilon])\n che possono apparire come carattere iniziale di una \*)
(*stringa derivata da una sua produzione.", FrameStyle -> Directive[Thin, *)
(*              White], ImageSize -> {800, 80}], *)
(*           AnalisiSintattica`Private`displayFirst[*)
(*            AnalisiSintattica`Private`emptyCheckboxGrammar]}, *)
(*          Alignment -> Left], If[AnalisiSintattica`Private`showFirst, *)
(*          Column[{Style["Soluzione First", Bold], *)
(*            AnalisiSintattica`Private`displayFirstSln[*)
(*             AnalisiSintattica`Private`emptyCheckboxGrammar]}, *)
(*           Alignment -> Left], ""]}], " ", *)
(*       Row[{Column[{Style["FOLLOW", Bold], Framed["Dato un non terminale, il \*)
(*suo insieme Follow \[EGrave] composto dai simboli terminali (e dal simbolo $)\n che \*)
(*possono apparire immediatamente dopo il non terminale in qualsiasi \*)
(*derivazione valida.", FrameStyle -> Directive[Thin, White], *)
(*            ImageSize -> {600, 80}], AnalisiSintattica`Private`displayFollow[*)
(*            AnalisiSintattica`Private`emptyCheckboxGrammar]}, *)
(*          Alignment -> Left], If[AnalisiSintattica`Private`showFollow, *)
(*          Column[{Style["Soluzione Follow", Bold], *)
(*            AnalisiSintattica`Private`displayFollowSln[*)
(*             AnalisiSintattica`Private`emptyCheckboxGrammar]}, *)
(*           Alignment -> Left], ""]}], " ", *)
(*       Row[{Column[{Style["TABELLA PRODUZIONI", Bold], Framed["Seleziona la \*)
(*cella in cui inserire la produzione e successivamente il bottone ad essa \*)
(*corrispondente.", FrameStyle -> Directive[Thin, White]], *)
(*           EventHandler[Dynamic[AnalisiSintattica`Private`displayTable[*)
(*              AnalisiSintattica`Private`emptyGrammar, *)
(*              AnalisiSintattica`Private`cursor]], "MouseClicked" :> *)
(*             If[MemberQ[Range[1, AnalisiSintattica`Private`rows**)
(*                  AnalisiSintattica`Private`cols, *)
(*                 AnalisiSintattica`Private`cols], *)
(*                AnalisiSintattica`Private`loc[MousePosition[*)
(*                  "EventHandlerScaled"]]] || MemberQ[Range[1, *)
(*                 AnalisiSintattica`Private`cols], *)
(*                AnalisiSintattica`Private`loc[MousePosition[*)
(*                  "EventHandlerScaled"]]], AnalisiSintattica`Private`cursor = *)
(*               -1, AnalisiSintattica`Private`cursor = *)
(*               AnalisiSintattica`Private`loc[MousePosition[*)
(*                 "EventHandlerScaled"]]]], *)
(*           Row[Table[With[{AnalisiSintattica`Private`i$ = *)
(*                AnalisiSintattica`Private`i}, Button[*)
(*               AnalisiSintattica`Private`listaProduzioni[[*)
(*                AnalisiSintattica`Private`i$]], *)
(*               AnalisiSintattica`Private`emptyGrammar[[*)
(*                  AnalisiSintattica`Private`xy[*)
(*                    AnalisiSintattica`Private`cursor][[1]],*)
(*                  AnalisiSintattica`Private`xy[*)
(*                    AnalisiSintattica`Private`cursor][[2]]]] = *)
(*                 AnalisiSintattica`Private`listaProduzioni[[*)
(*                  AnalisiSintattica`Private`i$]]; *)
(*                If[AnalisiSintattica`Private`soluzione[[*)
(*                   AnalisiSintattica`Private`xy[*)
(*                     AnalisiSintattica`Private`cursor][[1]],*)
(*                   AnalisiSintattica`Private`xy[*)
(*                     AnalisiSintattica`Private`cursor][[2]]]] != *)
(*                  AnalisiSintattica`Private`emptyGrammar[[*)
(*                   AnalisiSintattica`Private`xy[*)
(*                     AnalisiSintattica`Private`cursor][[1]],*)
(*                   AnalisiSintattica`Private`xy[*)
(*                     AnalisiSintattica`Private`cursor][[2]]]], Beep[]]]], *)
(*             {AnalisiSintattica`Private`i, 1, Length[*)
(*               AnalisiSintattica`Private`listaProduzioni]}], Spacer[0.4]], *)
(*           Row[{Button["Clear", AnalisiSintattica`Private`emptyGrammar[[*)
(*                AnalisiSintattica`Private`xy[*)
(*                  AnalisiSintattica`Private`cursor][[1]],*)
(*                AnalisiSintattica`Private`xy[*)
(*                  AnalisiSintattica`Private`cursor][[2]]]] = " "], *)
(*             Button["Clear All", Table[*)
(*               AnalisiSintattica`Private`emptyGrammar[[*)
(*                 AnalisiSintattica`Private`i,AnalisiSintattica`Private`j]] = *)
(*                " ", {AnalisiSintattica`Private`i, 2, *)
(*                AnalisiSintattica`Private`rows}, {*)
(*                AnalisiSintattica`Private`j, 2, *)
(*                AnalisiSintattica`Private`cols}]]}, Alignment -> Center]}], *)
(*         If[AnalisiSintattica`Private`showSolution, *)
(*          Row[{Style["Soluzione tabella delle produzioni", Bold], *)
(*            AnalisiSintattica`Private`displayTableSln[*)
(*             AnalisiSintattica`Private`soluzione]}, Alignment -> Left], ""]}, *)
(*        Alignment -> Center], " "}], " "}}, Editable -> False], *)
(*  {{AnalisiSintattica`Private`soluzione, *)
(*    {{" ", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "$"}, *)
(*     {"A", "A->Bab", " ", "A->Bab", "A->Bab", "A->Bab", "A->C", "A->C", *)
(*      "A->C", " ", " ", " ", " ", " "}, {"B", "B->\[Epsilon]", " ", "B->cD", "B->d", *)
(*      "B->e", " ", " ", " ", " ", " ", " ", " ", " "}, *)
(*     {"C", " ", " ", " ", " ", " ", "C->f", "C->g", "C->h", " ", " ", " ", *)
(*      " ", "C->\[Epsilon]"}, {"D", "D->\[Epsilon]", " ", " ", " ", " ", " ", " ", " ", " ", *)
(*      "D->jik", " ", " ", " "}}}, ControlType -> None}, *)
(*  {{AnalisiSintattica`Private`emptyGrammar, *)
(*    {{" ", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "$"}, *)
(*     {"A", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "}, *)
(*     {"B", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "}, *)
(*     {"C", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "}, *)
(*     {"D", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", *)
(*      " "}}}, ControlType -> None}, *)
(*  {{AnalisiSintattica`Private`emptyCheckboxGrammar, *)
(*    {{" ", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "$"}, *)
(*     {"A", Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], *)
(*      Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], *)
(*      Checkbox[], Checkbox[]}, {"B", Checkbox[], Checkbox[], Checkbox[], *)
(*      Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], *)
(*      Checkbox[], Checkbox[], Checkbox[], Checkbox[]}, *)
(*     {"C", Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], *)
(*      Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], *)
(*      Checkbox[], Checkbox[]}, {"D", Checkbox[], Checkbox[], Checkbox[], *)
(*      Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], *)
(*      Checkbox[], Checkbox[], Checkbox[], Checkbox[]}}}, *)
(*   ControlType -> None}, {{AnalisiSintattica`Private`cursor, 0}, *)
(*   ControlType -> None}, {{AnalisiSintattica`Private`showNullable, False, *)
(*    "Mostra Nullable"}, {True, False}}, *)
(*  {{AnalisiSintattica`Private`showFirst, False, "Mostra First"}, *)
(*   {True, False}}, {{AnalisiSintattica`Private`showFollow, False, *)
(*    "Mostra Follow"}, {True, False}}, *)
(*  {{AnalisiSintattica`Private`showSolution, False, "show solution"}, *)
(*   {True, False}}, ContentSize -> {900, 900}, *)
(*  Initialization :> {AnalisiSintattica`Private`soluzione = *)
(*     {{" ", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "$"}, *)
(*      {"A", "A->Bab", " ", "A->Bab", "A->Bab", "A->Bab", "A->C", "A->C", *)
(*       "A->C", " ", " ", " ", " ", " "}, {"B", "B->\[Epsilon]", " ", "B->cD", "B->d", *)
(*       "B->e", " ", " ", " ", " ", " ", " ", " ", " "}, *)
(*      {"C", " ", " ", " ", " ", " ", "C->f", "C->g", "C->h", " ", " ", " ", *)
(*       " ", "C->\[Epsilon]"}, {"D", "D->\[Epsilon]", " ", " ", " ", " ", " ", " ", " ", " ", *)
(*       "D->jik", " ", " ", " "}}, AnalisiSintattica`Private`grammar = *)
(*     {{" ", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "$"}, *)
(*      {"A", "A->Bab", " ", "A->Bab", "A->Bab", "A->Bab", "A->C", "A->C", *)
(*       "A->C", " ", " ", " ", " ", " "}, {"B", "B->\[Epsilon]", " ", "B->cD", "B->d", *)
(*       "B->e", " ", " ", " ", " ", " ", " ", " ", " "}, *)
(*      {"C", " ", " ", " ", " ", " ", "C->f", "C->g", "C->h", " ", " ", " ", *)
(*       " ", "C->\[Epsilon]"}, {"D", "D->\[Epsilon]", " ", " ", " ", " ", " ", " ", " ", " ", *)
(*       "D->jik", " ", " ", " "}}, *)
(*    AnalisiSintattica`Private`createEmptyGrammar[*)
(*      AnalisiSintattica`Private`sln_] := *)
(*     Module[{AnalisiSintattica`Private`copy = AnalisiSintattica`Private`sln}, *)
(*      Table[If[AnalisiSintattica`Private`i > 1 && *)
(*          AnalisiSintattica`Private`j > 1, AnalisiSintattica`Private`copy[[*)
(*           AnalisiSintattica`Private`i,AnalisiSintattica`Private`j]] = " "], *)
(*        {AnalisiSintattica`Private`i, AnalisiSintattica`Private`rows}, *)
(*        {AnalisiSintattica`Private`j, AnalisiSintattica`Private`cols}]; *)
(*       AnalisiSintattica`Private`copy], AnalisiSintattica`Private`i = 5, *)
(*    AnalisiSintattica`Private`j = 3, AnalisiSintattica`Private`rows = 5, *)
(*    AnalisiSintattica`Private`cols = 14, *)
(*    AnalisiSintattica`Private`listaProduzioni = {"A->C", "A->Bab", "B->cD", *)
(*      "B->d", "B->e", "B->\[Epsilon]", "C->h", "C->g", "C->f", "C->\[Epsilon]", "D->jik", *)
(*      "D->\[Epsilon]"}, AnalisiSintattica`Private`tmp = {"A", "B", "C", "D"}, *)
(*    AnalisiSintattica`Private`nullable = {{"A", True}, {"B", True}, *)
(*      {"C", True}, {"D", True}}, AnalisiSintattica`Private`displayFirst[*)
(*      AnalisiSintattica`Private`g_] := Grid[AnalisiSintattica`Private`g, *)
(*      Frame -> All, Background -> {White, White}, ItemStyle -> {Automatic}, *)
(*      ItemSize -> {{2, {2}}}, BaseStyle -> {Bold}*Editable -> False], *)
(*    AnalisiSintattica`Private`displayFirstSln[*)
(*      AnalisiSintattica`Private`g_] := AnalisiSintattica`Private`displayFirst[*)
(*      AnalisiSintattica`Private`g], AnalisiSintattica`Private`displayFollow[*)
(*      AnalisiSintattica`Private`g_] := Grid[AnalisiSintattica`Private`g, *)
(*      Frame -> All, Background -> {White, White}, ItemStyle -> {Automatic}, *)
(*      ItemSize -> {{2, {2}}}, BaseStyle -> {Bold}*Editable -> False], *)
(*    AnalisiSintattica`Private`displayFollowSln[*)
(*      AnalisiSintattica`Private`g_] := *)
(*     AnalisiSintattica`Private`displayFollow[AnalisiSintattica`Private`g], *)
(*    AnalisiSintattica`Private`displayTable[AnalisiSintattica`Private`g_, *)
(*      AnalisiSintattica`Private`cursor_:0] := *)
(*     Module[{AnalisiSintattica`Private`backgrounds}, *)
(*      AnalisiSintattica`Private`backgrounds = *)
(*        Join[AnalisiSintattica`Private`xy[*)
(*           AnalisiSintattica`Private`cursor] -> *)
(*          If[AnalisiSintattica`Private`cursor > 0, LightGray], *)
(*         AnalisiSintattica`Private`xy[AnalisiSintattica`Private`cursor] -> *)
(*          If[AnalisiSintattica`Private`cursor > 0, *)
(*           AnalisiSintattica`Private`checkErrors[AnalisiSintattica`Private`g, *)
(*            AnalisiSintattica`Private`cursor]]]; *)
(*       Grid[AnalisiSintattica`Private`g, Frame -> *)
(*         If[MatchQ[AnalisiSintattica`Private`xy[*)
(*            AnalisiSintattica`Private`cursor], _Integer], All, *)
(*          {All, All, {AnalisiSintattica`Private`xy[*)
(*              AnalisiSintattica`Private`cursor] -> {Thick, Blue}}}], *)
(*        Background -> {White, White, AnalisiSintattica`Private`backgrounds}, *)
(*        ItemStyle -> {Automatic}, ItemSize -> {{3, {4}}}, *)
(*        BaseStyle -> {Bold}, Editable -> False]], *)
(*    AnalisiSintattica`Private`xy[AnalisiSintattica`Private`n_] := *)
(*     {AnalisiSintattica`Private`row[AnalisiSintattica`Private`n], *)
(*      AnalisiSintattica`Private`col[AnalisiSintattica`Private`n]}, *)
(*    AnalisiSintattica`Private`row[AnalisiSintattica`Private`n_] := *)
(*     Quotient[AnalisiSintattica`Private`n - 1, *)
(*       AnalisiSintattica`Private`cols] + 1, *)
(*    AnalisiSintattica`Private`col[AnalisiSintattica`Private`n_] := *)
(*     Mod[AnalisiSintattica`Private`n - 1, AnalisiSintattica`Private`cols] + *)
(*      1, AnalisiSintattica`Private`checkErrors[AnalisiSintattica`Private`g$_, *)
(*      AnalisiSintattica`Private`cursor$_] := *)
(*     If[AnalisiSintattica`Private`g$[[AnalisiSintattica`Private`xy[*)
(*          AnalisiSintattica`Private`cursor$][[1]],*)
(*        AnalisiSintattica`Private`xy[AnalisiSintattica`Private`cursor$][[*)
(*         2]]]] != " ", If[AnalisiSintattica`Private`g$[[*)
(*         AnalisiSintattica`Private`xy[AnalisiSintattica`Private`cursor$][[1]],*)
(*         AnalisiSintattica`Private`xy[AnalisiSintattica`Private`cursor$][[*)
(*          2]]]] != AnalisiSintattica`Private`soluzione[[*)
(*         AnalisiSintattica`Private`xy[AnalisiSintattica`Private`cursor$][[1]],*)
(*         AnalisiSintattica`Private`xy[AnalisiSintattica`Private`cursor$][[*)
(*          2]]]], LightRed]], AnalisiSintattica`Private`loc[*)
(*      {AnalisiSintattica`Private`x_, AnalisiSintattica`Private`y_}] := *)
(*     1 + Floor[AnalisiSintattica`Private`cols*AnalisiSintattica`Private`x] + *)
(*      AnalisiSintattica`Private`cols*Floor[(1 - AnalisiSintattica`Private`y)**)
(*         AnalisiSintattica`Private`rows], *)
(*    AnalisiSintattica`Private`displayTableSln[*)
(*      AnalisiSintattica`Private`g_] := AnalisiSintattica`Private`displayTable[*)
(*      AnalisiSintattica`Private`g, 0]}]*)


(* ::Output:: *)
(*Manipulate[Grid[{{Column[{Style["ANALISI SINTATTICA", Bold], *)
(*       Style["ESERCIZIO DI GRAMMATICA N\[Degree]:", Bold], Style["Generare gli \*)
(*insiemi Nullable, First e Follow per la seguente grammatica", Bold]}, *)
(*      Alignment -> Left]}, *)
(*    {Column[{Row[{Button["Nuova grammatica", *)
(*          (AnalisiSintattica`Private`cursor = 0; Spacer[5]; *)
(*            AnalisiSintattica`Private`showSolution = False; *)
(*            AnalisiSintattica`Private`soluzione = *)
(*             AnalisiSintattica`Private`grammar; *)
(*            AnalisiSintattica`Private`emptyGrammar = *)
(*             AnalisiSintattica`Private`createEmptyGrammar[*)
(*              AnalisiSintattica`Private`soluzione]; ) & ], *)
(*         DynamicModule[{AnalisiSintattica`Private`numero = ""}, *)
(*          Panel[Column[{Row[{Style["Genera esercizio n\[Degree]: ", Bold], *)
(*               InputField[Dynamic[AnalisiSintattica`Private`numero], *)
(*                Number]}], Dynamic[AnalisiSintattica`Private`numero]; }]]]}], *)
(*       " ", Row[{Column[{Style["Grammatica", Bold], *)
(*           Grid[List /@ AnalisiSintattica`Private`listaProduzioni, *)
(*            Frame -> All, Background -> {White, White}, ItemStyle -> *)
(*             {Automatic}, ItemSize -> {{8, {8}}}, BaseStyle -> *)
(*             {Bold}*Editable -> False]}, Alignment -> Left]}], " ", *)
(*       Row[{Column[{Style["NULLABLE", Bold], TabView[*)
(*            Table[AnalisiSintattica`Private`tmp[[*)
(*               AnalisiSintattica`Private`i]] -> PopupMenu[" ", {*)
(*                AnalisiSintattica`Private`TRUE, *)
(*                AnalisiSintattica`Private`FALSE}], *)
(*             {AnalisiSintattica`Private`i, 1, Length[*)
(*               AnalisiSintattica`Private`tmp]}]]}, Alignment -> Left], " "}], *)
(*       " ", Row[{Column[{Style["FIRST", Bold], Framed["Dato un non terminale \*)
(*(ad esempio A,B), il suo insieme First \[EGrave] composto\ndai simboli terminali \*)
(*(compreso \[Epsilon]) che possono apparire come carattere iniziale\ndi una stringa \*)
(*derivata da una sua produzione.", FrameStyle -> Directive[Thin, White], *)
(*            ImageSize -> {600, 80}], AnalisiSintattica`Private`displayFirst[*)
(*            AnalisiSintattica`Private`emptyCheckboxGrammar]}, *)
(*          Alignment -> Left]}], Row[{Column[{Style["FOLLOW", Bold], *)
(*           AnalisiSintattica`Private`displayFollow[*)
(*            AnalisiSintattica`Private`emptyCheckboxGrammar]}, *)
(*          Alignment -> Left]}], *)
(*       Row[{Column[{Style["TABELLA PRODUZIONI", Bold], EventHandler[*)
(*            Dynamic[AnalisiSintattica`Private`displayTable[*)
(*              AnalisiSintattica`Private`emptyGrammar, *)
(*              AnalisiSintattica`Private`cursor]], "MouseClicked" :> *)
(*             If[MemberQ[Range[1, AnalisiSintattica`Private`rows**)
(*                  AnalisiSintattica`Private`cols, *)
(*                 AnalisiSintattica`Private`cols], *)
(*                AnalisiSintattica`Private`loc[MousePosition[*)
(*                  "EventHandlerScaled"]]] || MemberQ[Range[1, *)
(*                 AnalisiSintattica`Private`cols], *)
(*                AnalisiSintattica`Private`loc[MousePosition[*)
(*                  "EventHandlerScaled"]]], AnalisiSintattica`Private`cursor = *)
(*               -1, AnalisiSintattica`Private`cursor = *)
(*               AnalisiSintattica`Private`loc[MousePosition[*)
(*                 "EventHandlerScaled"]]]], *)
(*           Row[Table[With[{AnalisiSintattica`Private`i$ = *)
(*                AnalisiSintattica`Private`i}, Button[*)
(*               AnalisiSintattica`Private`listaProduzioni[[*)
(*                AnalisiSintattica`Private`i$]], *)
(*               AnalisiSintattica`Private`emptyGrammar[[*)
(*                  AnalisiSintattica`Private`xy[*)
(*                    AnalisiSintattica`Private`cursor][[1]],*)
(*                  AnalisiSintattica`Private`xy[*)
(*                    AnalisiSintattica`Private`cursor][[2]]]] = *)
(*                 AnalisiSintattica`Private`listaProduzioni[[*)
(*                  AnalisiSintattica`Private`i$]]; *)
(*                If[AnalisiSintattica`Private`soluzione[[*)
(*                   AnalisiSintattica`Private`xy[*)
(*                     AnalisiSintattica`Private`cursor][[1]],*)
(*                   AnalisiSintattica`Private`xy[*)
(*                     AnalisiSintattica`Private`cursor][[2]]]] != *)
(*                  AnalisiSintattica`Private`emptyGrammar[[*)
(*                   AnalisiSintattica`Private`xy[*)
(*                     AnalisiSintattica`Private`cursor][[1]],*)
(*                   AnalisiSintattica`Private`xy[*)
(*                     AnalisiSintattica`Private`cursor][[2]]]], Beep[]]]], *)
(*             {AnalisiSintattica`Private`i, 1, Length[*)
(*               AnalisiSintattica`Private`listaProduzioni]}], Spacer[0.5]], *)
(*           Row[{Button["Clear", AnalisiSintattica`Private`emptyGrammar[[*)
(*                AnalisiSintattica`Private`xy[*)
(*                  AnalisiSintattica`Private`cursor][[1]],*)
(*                AnalisiSintattica`Private`xy[*)
(*                  AnalisiSintattica`Private`cursor][[2]]]] = " "], *)
(*             Button["Clear All", Table[*)
(*               AnalisiSintattica`Private`emptyGrammar[[*)
(*                 AnalisiSintattica`Private`i,AnalisiSintattica`Private`j]] = *)
(*                " ", {AnalisiSintattica`Private`i, 2, *)
(*                AnalisiSintattica`Private`rows}, {*)
(*                AnalisiSintattica`Private`j, 2, *)
(*                AnalisiSintattica`Private`cols}]]}]}]}], *)
(*       If[AnalisiSintattica`Private`showNullable, *)
(*        Column[{Style["Mostra Nullable", Bold], *)
(*          TabView[Table[AnalisiSintattica`Private`tmp[[*)
(*              AnalisiSintattica`Private`i]] -> *)
(*             AnalisiSintattica`Private`nullable[[AnalisiSintattica`Private`i,*)
(*              2]], {AnalisiSintattica`Private`i, 1, *)
(*             Length[AnalisiSintattica`Private`tmp]}]]}, Alignment -> Right], *)
(*        " "], If[AnalisiSintattica`Private`showFirst, *)
(*        Column[{Style["Mostra First", Bold], *)
(*          AnalisiSintattica`Private`displayFirstSln[*)
(*           AnalisiSintattica`Private`emptyCheckboxGrammar]}, *)
(*         Alignment -> Right], ""], If[AnalisiSintattica`Private`showFollow, *)
(*        Column[{Style["Mostra First", Bold], *)
(*          AnalisiSintattica`Private`displayFollowSln[*)
(*           AnalisiSintattica`Private`emptyCheckboxGrammar]}, *)
(*         Alignment -> Right], ""], If[AnalisiSintattica`Private`showSolution, *)
(*        Row[{AnalisiSintattica`Private`displayTableSln[*)
(*           AnalisiSintattica`Private`soluzione]}], ""]}, Alignment -> Left], *)
(*     " "}}, Editable -> False], {{AnalisiSintattica`Private`soluzione, *)
(*    {{" ", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "$"}, *)
(*     {"A", "A->Bab", " ", "A->Bab", "A->Bab", "A->Bab", "A->C", "A->C", *)
(*      "A->C", " ", " ", " ", " ", " "}, {"B", "B->\[Epsilon]", " ", "B->cD", "B->d", *)
(*      "B->e", " ", " ", " ", " ", " ", " ", " ", " "}, *)
(*     {"C", " ", " ", " ", " ", " ", "C->f", "C->g", "C->h", " ", " ", " ", *)
(*      " ", "C->\[Epsilon]"}, {"D", "D->\[Epsilon]", " ", " ", " ", " ", " ", " ", " ", " ", *)
(*      "D->jik", " ", " ", " "}}}, ControlType -> None}, *)
(*  {{AnalisiSintattica`Private`emptyGrammar, *)
(*    {{" ", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "$"}, *)
(*     {"A", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "}, *)
(*     {"B", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "}, *)
(*     {"C", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "}, *)
(*     {"D", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", *)
(*      " "}}}, ControlType -> None}, *)
(*  {{AnalisiSintattica`Private`emptyCheckboxGrammar, *)
(*    {{" ", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "$"}, *)
(*     {"A", Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], *)
(*      Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], *)
(*      Checkbox[], Checkbox[]}, {"B", Checkbox[], Checkbox[], Checkbox[], *)
(*      Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], *)
(*      Checkbox[], Checkbox[], Checkbox[], Checkbox[]}, *)
(*     {"C", Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], *)
(*      Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], *)
(*      Checkbox[], Checkbox[]}, {"D", Checkbox[], Checkbox[], Checkbox[], *)
(*      Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], *)
(*      Checkbox[], Checkbox[], Checkbox[], Checkbox[]}}}, *)
(*   ControlType -> None}, {{AnalisiSintattica`Private`cursor, 0}, *)
(*   ControlType -> None}, {{AnalisiSintattica`Private`showNullable, False, *)
(*    "Mostra Nullable"}, {True, False}}, *)
(*  {{AnalisiSintattica`Private`showFirst, False, "Mostra First"}, *)
(*   {True, False}}, {{AnalisiSintattica`Private`showFollow, False, *)
(*    "Mostra Follow"}, {True, False}}, *)
(*  {{AnalisiSintattica`Private`showSolution, False, "show solution"}, *)
(*   {True, False}}, ContentSize -> {900, 900}, *)
(*  Initialization :> {AnalisiSintattica`Private`soluzione = *)
(*     {{" ", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "$"}, *)
(*      {"A", "A->Bab", " ", "A->Bab", "A->Bab", "A->Bab", "A->C", "A->C", *)
(*       "A->C", " ", " ", " ", " ", " "}, {"B", "B->\[Epsilon]", " ", "B->cD", "B->d", *)
(*       "B->e", " ", " ", " ", " ", " ", " ", " ", " "}, *)
(*      {"C", " ", " ", " ", " ", " ", "C->f", "C->g", "C->h", " ", " ", " ", *)
(*       " ", "C->\[Epsilon]"}, {"D", "D->\[Epsilon]", " ", " ", " ", " ", " ", " ", " ", " ", *)
(*       "D->jik", " ", " ", " "}}, AnalisiSintattica`Private`grammar = *)
(*     {{" ", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "$"}, *)
(*      {"A", "A->Bab", " ", "A->Bab", "A->Bab", "A->Bab", "A->C", "A->C", *)
(*       "A->C", " ", " ", " ", " ", " "}, {"B", "B->\[Epsilon]", " ", "B->cD", "B->d", *)
(*       "B->e", " ", " ", " ", " ", " ", " ", " ", " "}, *)
(*      {"C", " ", " ", " ", " ", " ", "C->f", "C->g", "C->h", " ", " ", " ", *)
(*       " ", "C->\[Epsilon]"}, {"D", "D->\[Epsilon]", " ", " ", " ", " ", " ", " ", " ", " ", *)
(*       "D->jik", " ", " ", " "}}, *)
(*    AnalisiSintattica`Private`createEmptyGrammar[*)
(*      AnalisiSintattica`Private`sln_] := *)
(*     Module[{AnalisiSintattica`Private`copy = AnalisiSintattica`Private`sln}, *)
(*      Table[If[AnalisiSintattica`Private`i > 1 && *)
(*          AnalisiSintattica`Private`j > 1, AnalisiSintattica`Private`copy[[*)
(*           AnalisiSintattica`Private`i,AnalisiSintattica`Private`j]] = " "], *)
(*        {AnalisiSintattica`Private`i, AnalisiSintattica`Private`rows}, *)
(*        {AnalisiSintattica`Private`j, AnalisiSintattica`Private`cols}]; *)
(*       AnalisiSintattica`Private`copy], AnalisiSintattica`Private`i = 5, *)
(*    AnalisiSintattica`Private`j = 3, AnalisiSintattica`Private`rows = 5, *)
(*    AnalisiSintattica`Private`cols = 14, *)
(*    AnalisiSintattica`Private`listaProduzioni = {"A->C", "A->Bab", "B->cD", *)
(*      "B->d", "B->e", "B->\[Epsilon]", "C->h", "C->g", "C->f", "C->\[Epsilon]", "D->jik", *)
(*      "D->\[Epsilon]"}, AnalisiSintattica`Private`tmp = {"A", "B", "C", "D"}, *)
(*    AnalisiSintattica`Private`displayFirst[AnalisiSintattica`Private`g_] := *)
(*     Grid[AnalisiSintattica`Private`g, Frame -> All, *)
(*      Background -> {White, White}, ItemStyle -> {Automatic}, *)
(*      ItemSize -> {{2, {2}}}, BaseStyle -> {Bold}*Editable -> False], *)
(*    AnalisiSintattica`Private`displayFollow[AnalisiSintattica`Private`g_] := *)
(*     Grid[AnalisiSintattica`Private`g, Frame -> All, *)
(*      Background -> {White, White}, ItemStyle -> {Automatic}, *)
(*      ItemSize -> {{2, {2}}}, BaseStyle -> {Bold}*Editable -> False], *)
(*    AnalisiSintattica`Private`displayTable[AnalisiSintattica`Private`g_, *)
(*      AnalisiSintattica`Private`cursor_:0] := *)
(*     Grid[AnalisiSintattica`Private`g, *)
(*      Frame -> If[MatchQ[AnalisiSintattica`Private`xy[*)
(*          AnalisiSintattica`Private`cursor], _Integer], All, *)
(*        {All, All, {AnalisiSintattica`Private`xy[*)
(*            AnalisiSintattica`Private`cursor] -> {Thick, Blue}}}], *)
(*      Background -> {White, White}, ItemStyle -> {Automatic}, *)
(*      ItemSize -> {{3, {4}}}, BaseStyle -> {Bold}, Editable -> False], *)
(*    AnalisiSintattica`Private`xy[AnalisiSintattica`Private`n_] := *)
(*     {AnalisiSintattica`Private`row[AnalisiSintattica`Private`n], *)
(*      AnalisiSintattica`Private`col[AnalisiSintattica`Private`n]}, *)
(*    AnalisiSintattica`Private`row[AnalisiSintattica`Private`n_] := *)
(*     Quotient[AnalisiSintattica`Private`n - 1, *)
(*       AnalisiSintattica`Private`cols] + 1, *)
(*    AnalisiSintattica`Private`col[AnalisiSintattica`Private`n_] := *)
(*     Mod[AnalisiSintattica`Private`n - 1, AnalisiSintattica`Private`cols] + *)
(*      1, AnalisiSintattica`Private`loc[{AnalisiSintattica`Private`x_, *)
(*       AnalisiSintattica`Private`y_}] := *)
(*     1 + Floor[AnalisiSintattica`Private`cols*AnalisiSintattica`Private`x] + *)
(*      AnalisiSintattica`Private`cols*Floor[(1 - AnalisiSintattica`Private`y)**)
(*         AnalisiSintattica`Private`rows], *)
(*    AnalisiSintattica`Private`nullable = {{"A", True}, {"B", True}, *)
(*      {"C", True}, {"D", True}}, AnalisiSintattica`Private`displayFirstSln[*)
(*      AnalisiSintattica`Private`g_] := AnalisiSintattica`Private`displayFirst[*)
(*      AnalisiSintattica`Private`g], *)
(*    AnalisiSintattica`Private`displayFollowSln[*)
(*      AnalisiSintattica`Private`g_] := *)
(*     AnalisiSintattica`Private`displayFollow[AnalisiSintattica`Private`g], *)
(*    AnalisiSintattica`Private`displayTableSln[*)
(*      AnalisiSintattica`Private`g_] := AnalisiSintattica`Private`displayTable[*)
(*      AnalisiSintattica`Private`g, 0]}]*)


(* ::Output:: *)
(*Manipulate[Grid[{{Column[{Style["ANALISI SINTATTICA", Bold], *)
(*       Style["ESERCIZIO DI GRAMMATICA N\[Degree]:", Bold], Style["Generare gli \*)
(*insiemi Nullable, First e Follow per la seguente grammatica", Bold]}, *)
(*      Alignment -> Left]}, *)
(*    {Column[{Row[{Button["Nuova grammatica", *)
(*          (AnalisiSintattica`Private`cursor = 0; Spacer[5]; *)
(*            AnalisiSintattica`Private`showSolution = False; *)
(*            AnalisiSintattica`Private`soluzione = *)
(*             AnalisiSintattica`Private`grammar; *)
(*            AnalisiSintattica`Private`emptyGrammar = *)
(*             AnalisiSintattica`Private`createEmptyGrammar[*)
(*              AnalisiSintattica`Private`soluzione]; ) & ], *)
(*         DynamicModule[{AnalisiSintattica`Private`numero = ""}, *)
(*          Panel[Column[{Row[{Style["Genera esercizio n\[Degree]: ", Bold], *)
(*               InputField[Dynamic[AnalisiSintattica`Private`numero], *)
(*                Number]}], Dynamic[AnalisiSintattica`Private`numero]; }]]]}], *)
(*       " ", Row[{Column[{Style["Grammatica", Bold], *)
(*           Grid[List /@ AnalisiSintattica`Private`listaProduzioni, *)
(*            Frame -> All, Background -> {White, White}, ItemStyle -> *)
(*             {Automatic}, ItemSize -> {{8, {8}}}, BaseStyle -> *)
(*             {Bold}*Editable -> False]}, Alignment -> Left]}], " ", *)
(*       Row[{Column[{Style["NULLABLE", Bold], TabView[*)
(*            Table[AnalisiSintattica`Private`tmp[[*)
(*               AnalisiSintattica`Private`i]] -> PopupMenu[" ", {*)
(*                AnalisiSintattica`Private`TRUE, *)
(*                AnalisiSintattica`Private`FALSE}], *)
(*             {AnalisiSintattica`Private`i, 1, Length[*)
(*               AnalisiSintattica`Private`tmp]}]]}, Alignment -> Left], " "}], *)
(*       " ", Row[{Column[{Style["FIRST", Bold], Framed["Dato un non terminale \*)
(*(ad esempio A,B), il suo insieme First \[EGrave] composto\ndai simboli terminali \*)
(*(compreso \[Epsilon]) che possono apparire come carattere iniziale\ndi una stringa \*)
(*derivata da una sua produzione.", ImageSize -> {600, 80}], *)
(*           AnalisiSintattica`Private`displayFirst[*)
(*            AnalisiSintattica`Private`emptyCheckboxGrammar]}, *)
(*          Alignment -> Left]}], Row[{Column[{Style["FOLLOW", Bold], *)
(*           AnalisiSintattica`Private`displayFollow[*)
(*            AnalisiSintattica`Private`emptyCheckboxGrammar]}, *)
(*          Alignment -> Left]}], *)
(*       Row[{Column[{Style["TABELLA PRODUZIONI", Bold], EventHandler[*)
(*            Dynamic[AnalisiSintattica`Private`displayTable[*)
(*              AnalisiSintattica`Private`emptyGrammar, *)
(*              AnalisiSintattica`Private`cursor]], "MouseClicked" :> *)
(*             If[MemberQ[Range[1, AnalisiSintattica`Private`rows**)
(*                  AnalisiSintattica`Private`cols, *)
(*                 AnalisiSintattica`Private`cols], *)
(*                AnalisiSintattica`Private`loc[MousePosition[*)
(*                  "EventHandlerScaled"]]] || MemberQ[Range[1, *)
(*                 AnalisiSintattica`Private`cols], *)
(*                AnalisiSintattica`Private`loc[MousePosition[*)
(*                  "EventHandlerScaled"]]], AnalisiSintattica`Private`cursor = *)
(*               -1, AnalisiSintattica`Private`cursor = *)
(*               AnalisiSintattica`Private`loc[MousePosition[*)
(*                 "EventHandlerScaled"]]]], *)
(*           Row[Table[With[{AnalisiSintattica`Private`i$ = *)
(*                AnalisiSintattica`Private`i}, Button[*)
(*               AnalisiSintattica`Private`listaProduzioni[[*)
(*                AnalisiSintattica`Private`i$]], *)
(*               AnalisiSintattica`Private`emptyGrammar[[*)
(*                  AnalisiSintattica`Private`xy[*)
(*                    AnalisiSintattica`Private`cursor][[1]],*)
(*                  AnalisiSintattica`Private`xy[*)
(*                    AnalisiSintattica`Private`cursor][[2]]]] = *)
(*                 AnalisiSintattica`Private`listaProduzioni[[*)
(*                  AnalisiSintattica`Private`i$]]; *)
(*                If[AnalisiSintattica`Private`soluzione[[*)
(*                   AnalisiSintattica`Private`xy[*)
(*                     AnalisiSintattica`Private`cursor][[1]],*)
(*                   AnalisiSintattica`Private`xy[*)
(*                     AnalisiSintattica`Private`cursor][[2]]]] != *)
(*                  AnalisiSintattica`Private`emptyGrammar[[*)
(*                   AnalisiSintattica`Private`xy[*)
(*                     AnalisiSintattica`Private`cursor][[1]],*)
(*                   AnalisiSintattica`Private`xy[*)
(*                     AnalisiSintattica`Private`cursor][[2]]]], Beep[]]]], *)
(*             {AnalisiSintattica`Private`i, 1, Length[*)
(*               AnalisiSintattica`Private`listaProduzioni]}], Spacer[0.5]], *)
(*           Row[{Button["Clear", AnalisiSintattica`Private`emptyGrammar[[*)
(*                AnalisiSintattica`Private`xy[*)
(*                  AnalisiSintattica`Private`cursor][[1]],*)
(*                AnalisiSintattica`Private`xy[*)
(*                  AnalisiSintattica`Private`cursor][[2]]]] = " "], *)
(*             Button["Clear All", Table[*)
(*               AnalisiSintattica`Private`emptyGrammar[[*)
(*                 AnalisiSintattica`Private`i,AnalisiSintattica`Private`j]] = *)
(*                " ", {AnalisiSintattica`Private`i, 2, *)
(*                AnalisiSintattica`Private`rows}, {*)
(*                AnalisiSintattica`Private`j, 2, *)
(*                AnalisiSintattica`Private`cols}]]}]}]}], *)
(*       If[AnalisiSintattica`Private`showNullable, *)
(*        Column[{Style["Mostra Nullable", Bold], *)
(*          TabView[Table[AnalisiSintattica`Private`tmp[[*)
(*              AnalisiSintattica`Private`i]] -> *)
(*             AnalisiSintattica`Private`nullable[[AnalisiSintattica`Private`i,*)
(*              2]], {AnalisiSintattica`Private`i, 1, *)
(*             Length[AnalisiSintattica`Private`tmp]}]]}, Alignment -> Right], *)
(*        " "], If[AnalisiSintattica`Private`showFirst, *)
(*        Column[{Style["Mostra First", Bold], *)
(*          AnalisiSintattica`Private`displayFirstSln[*)
(*           AnalisiSintattica`Private`emptyCheckboxGrammar]}, *)
(*         Alignment -> Right], ""], If[AnalisiSintattica`Private`showFollow, *)
(*        Column[{Style["Mostra First", Bold], *)
(*          AnalisiSintattica`Private`displayFollowSln[*)
(*           AnalisiSintattica`Private`emptyCheckboxGrammar]}, *)
(*         Alignment -> Right], ""], If[AnalisiSintattica`Private`showSolution, *)
(*        Row[{AnalisiSintattica`Private`displayTableSln[*)
(*           AnalisiSintattica`Private`soluzione]}], ""]}, Alignment -> Left], *)
(*     " "}}, Editable -> False], {{AnalisiSintattica`Private`soluzione, *)
(*    {{" ", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "$"}, *)
(*     {"A", "A->Bab", " ", "A->Bab", "A->Bab", "A->Bab", "A->C", "A->C", *)
(*      "A->C", " ", " ", " ", " ", " "}, {"B", "B->\[Epsilon]", " ", "B->cD", "B->d", *)
(*      "B->e", " ", " ", " ", " ", " ", " ", " ", " "}, *)
(*     {"C", " ", " ", " ", " ", " ", "C->f", "C->g", "C->h", " ", " ", " ", *)
(*      " ", "C->\[Epsilon]"}, {"D", "D->\[Epsilon]", " ", " ", " ", " ", " ", " ", " ", " ", *)
(*      "D->jik", " ", " ", " "}}}, ControlType -> None}, *)
(*  {{AnalisiSintattica`Private`emptyGrammar, *)
(*    {{" ", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "$"}, *)
(*     {"A", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "}, *)
(*     {"B", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "}, *)
(*     {"C", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "}, *)
(*     {"D", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", *)
(*      " "}}}, ControlType -> None}, *)
(*  {{AnalisiSintattica`Private`emptyCheckboxGrammar, *)
(*    {{" ", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "$"}, *)
(*     {"A", Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], *)
(*      Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], *)
(*      Checkbox[], Checkbox[]}, {"B", Checkbox[], Checkbox[], Checkbox[], *)
(*      Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], *)
(*      Checkbox[], Checkbox[], Checkbox[], Checkbox[]}, *)
(*     {"C", Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], *)
(*      Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], *)
(*      Checkbox[], Checkbox[]}, {"D", Checkbox[], Checkbox[], Checkbox[], *)
(*      Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], *)
(*      Checkbox[], Checkbox[], Checkbox[], Checkbox[]}}}, *)
(*   ControlType -> None}, {{AnalisiSintattica`Private`cursor, 0}, *)
(*   ControlType -> None}, {{AnalisiSintattica`Private`showNullable, False, *)
(*    "Mostra Nullable"}, {True, False}}, *)
(*  {{AnalisiSintattica`Private`showFirst, False, "Mostra First"}, *)
(*   {True, False}}, {{AnalisiSintattica`Private`showFollow, False, *)
(*    "Mostra Follow"}, {True, False}}, *)
(*  {{AnalisiSintattica`Private`showSolution, False, "show solution"}, *)
(*   {True, False}}, ContentSize -> {900, 900}, *)
(*  Initialization :> {AnalisiSintattica`Private`soluzione = *)
(*     {{" ", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "$"}, *)
(*      {"A", "A->Bab", " ", "A->Bab", "A->Bab", "A->Bab", "A->C", "A->C", *)
(*       "A->C", " ", " ", " ", " ", " "}, {"B", "B->\[Epsilon]", " ", "B->cD", "B->d", *)
(*       "B->e", " ", " ", " ", " ", " ", " ", " ", " "}, *)
(*      {"C", " ", " ", " ", " ", " ", "C->f", "C->g", "C->h", " ", " ", " ", *)
(*       " ", "C->\[Epsilon]"}, {"D", "D->\[Epsilon]", " ", " ", " ", " ", " ", " ", " ", " ", *)
(*       "D->jik", " ", " ", " "}}, AnalisiSintattica`Private`grammar = *)
(*     {{" ", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "$"}, *)
(*      {"A", "A->Bab", " ", "A->Bab", "A->Bab", "A->Bab", "A->C", "A->C", *)
(*       "A->C", " ", " ", " ", " ", " "}, {"B", "B->\[Epsilon]", " ", "B->cD", "B->d", *)
(*       "B->e", " ", " ", " ", " ", " ", " ", " ", " "}, *)
(*      {"C", " ", " ", " ", " ", " ", "C->f", "C->g", "C->h", " ", " ", " ", *)
(*       " ", "C->\[Epsilon]"}, {"D", "D->\[Epsilon]", " ", " ", " ", " ", " ", " ", " ", " ", *)
(*       "D->jik", " ", " ", " "}}, *)
(*    AnalisiSintattica`Private`createEmptyGrammar[*)
(*      AnalisiSintattica`Private`sln_] := *)
(*     Module[{AnalisiSintattica`Private`copy = AnalisiSintattica`Private`sln}, *)
(*      Table[If[AnalisiSintattica`Private`i > 1 && *)
(*          AnalisiSintattica`Private`j > 1, AnalisiSintattica`Private`copy[[*)
(*           AnalisiSintattica`Private`i,AnalisiSintattica`Private`j]] = " "], *)
(*        {AnalisiSintattica`Private`i, AnalisiSintattica`Private`rows}, *)
(*        {AnalisiSintattica`Private`j, AnalisiSintattica`Private`cols}]; *)
(*       AnalisiSintattica`Private`copy], AnalisiSintattica`Private`i = 5, *)
(*    AnalisiSintattica`Private`j = 3, AnalisiSintattica`Private`rows = 5, *)
(*    AnalisiSintattica`Private`cols = 14, *)
(*    AnalisiSintattica`Private`listaProduzioni = {"A->C", "A->Bab", "B->cD", *)
(*      "B->d", "B->e", "B->\[Epsilon]", "C->h", "C->g", "C->f", "C->\[Epsilon]", "D->jik", *)
(*      "D->\[Epsilon]"}, AnalisiSintattica`Private`tmp = {"A", "B", "C", "D"}, *)
(*    AnalisiSintattica`Private`displayFirst[AnalisiSintattica`Private`g_] := *)
(*     Grid[AnalisiSintattica`Private`g, Frame -> All, *)
(*      Background -> {White, White}, ItemStyle -> {Automatic}, *)
(*      ItemSize -> {{2, {2}}}, BaseStyle -> {Bold}*Editable -> False], *)
(*    AnalisiSintattica`Private`displayFollow[AnalisiSintattica`Private`g_] := *)
(*     Grid[AnalisiSintattica`Private`g, Frame -> All, *)
(*      Background -> {White, White}, ItemStyle -> {Automatic}, *)
(*      ItemSize -> {{2, {2}}}, BaseStyle -> {Bold}*Editable -> False], *)
(*    AnalisiSintattica`Private`displayTable[AnalisiSintattica`Private`g_, *)
(*      AnalisiSintattica`Private`cursor_:0] := *)
(*     Grid[AnalisiSintattica`Private`g, *)
(*      Frame -> If[MatchQ[AnalisiSintattica`Private`xy[*)
(*          AnalisiSintattica`Private`cursor], _Integer], All, *)
(*        {All, All, {AnalisiSintattica`Private`xy[*)
(*            AnalisiSintattica`Private`cursor] -> {Thick, Blue}}}], *)
(*      Background -> {White, White}, ItemStyle -> {Automatic}, *)
(*      ItemSize -> {{3, {4}}}, BaseStyle -> {Bold}, Editable -> False], *)
(*    AnalisiSintattica`Private`xy[AnalisiSintattica`Private`n_] := *)
(*     {AnalisiSintattica`Private`row[AnalisiSintattica`Private`n], *)
(*      AnalisiSintattica`Private`col[AnalisiSintattica`Private`n]}, *)
(*    AnalisiSintattica`Private`row[AnalisiSintattica`Private`n_] := *)
(*     Quotient[AnalisiSintattica`Private`n - 1, *)
(*       AnalisiSintattica`Private`cols] + 1, *)
(*    AnalisiSintattica`Private`col[AnalisiSintattica`Private`n_] := *)
(*     Mod[AnalisiSintattica`Private`n - 1, AnalisiSintattica`Private`cols] + *)
(*      1, AnalisiSintattica`Private`loc[{AnalisiSintattica`Private`x_, *)
(*       AnalisiSintattica`Private`y_}] := *)
(*     1 + Floor[AnalisiSintattica`Private`cols*AnalisiSintattica`Private`x] + *)
(*      AnalisiSintattica`Private`cols*Floor[(1 - AnalisiSintattica`Private`y)**)
(*         AnalisiSintattica`Private`rows], *)
(*    AnalisiSintattica`Private`nullable = {{"A", True}, {"B", True}, *)
(*      {"C", True}, {"D", True}}, AnalisiSintattica`Private`displayFirstSln[*)
(*      AnalisiSintattica`Private`g_] := AnalisiSintattica`Private`displayFirst[*)
(*      AnalisiSintattica`Private`g], *)
(*    AnalisiSintattica`Private`displayFollowSln[*)
(*      AnalisiSintattica`Private`g_] := *)
(*     AnalisiSintattica`Private`displayFollow[AnalisiSintattica`Private`g], *)
(*    AnalisiSintattica`Private`displayTableSln[*)
(*      AnalisiSintattica`Private`g_] := AnalisiSintattica`Private`displayTable[*)
(*      AnalisiSintattica`Private`g, 0]}]*)


(* ::Output:: *)
(*Manipulate[Grid[{{Column[{Style["ANALISI SINTATTICA", Bold], *)
(*       Style["ESERCIZIO DI GRAMMATICA N\[Degree]:", Bold], Style["Generare gli \*)
(*insiemi Nullable, First e Follow per la seguente grammatica", Bold]}, *)
(*      Alignment -> Left]}, *)
(*    {Column[{Row[{Button["Nuova grammatica", *)
(*          (AnalisiSintattica`Private`cursor = 0; Spacer[5]; *)
(*            AnalisiSintattica`Private`showSolution = False; *)
(*            AnalisiSintattica`Private`soluzione = *)
(*             AnalisiSintattica`Private`grammar; *)
(*            AnalisiSintattica`Private`emptyGrammar = *)
(*             AnalisiSintattica`Private`createEmptyGrammar[*)
(*              AnalisiSintattica`Private`soluzione]; ) & ], *)
(*         DynamicModule[{AnalisiSintattica`Private`numero = ""}, *)
(*          Panel[Column[{Row[{Style["Genera esercizio n\[Degree]: ", Bold], *)
(*               InputField[Dynamic[AnalisiSintattica`Private`numero], *)
(*                Number]}], Dynamic[AnalisiSintattica`Private`numero]; }]]]}], *)
(*       " ", Row[{Column[{Style["Grammatica", Bold], *)
(*           Grid[List /@ AnalisiSintattica`Private`listaProduzioni, *)
(*            Frame -> All, Background -> {White, White}, ItemStyle -> *)
(*             {Automatic}, ItemSize -> {{8, {8}}}, BaseStyle -> *)
(*             {Bold}*Editable -> False]}, Alignment -> Left]}], " ", *)
(*       Row[{Column[{Style["NULLABLE", Bold], TabView[*)
(*            Table[AnalisiSintattica`Private`tmp[[*)
(*               AnalisiSintattica`Private`i]] -> PopupMenu[" ", {*)
(*                AnalisiSintattica`Private`TRUE, *)
(*                AnalisiSintattica`Private`FALSE}], *)
(*             {AnalisiSintattica`Private`i, 1, Length[*)
(*               AnalisiSintattica`Private`tmp]}]]}, Alignment -> Left], " "}], *)
(*       " ", Row[{Column[{Style["FIRST", Bold], Framed["Dato un non terminale \*)
(*(ad esempio A,B), il suo insieme First \[EGrave] composto\n \n\t\t\t\t\tdai simboli \*)
(*terminali (compreso \[Epsilon]) che possono apparire come carattere \*)
(*iniziale\n\n\t\t\t\t\tdi una stringa derivata da una sua produzione.", *)
(*            FrameStyle -> Directive[Black, Thin], ImageSize -> {700, 80}], *)
(*           AnalisiSintattica`Private`displayFirst[*)
(*            AnalisiSintattica`Private`emptyCheckboxGrammar]}, *)
(*          Alignment -> Left]}], Row[{Column[{Style["FOLLOW", Bold], *)
(*           AnalisiSintattica`Private`displayFollow[*)
(*            AnalisiSintattica`Private`emptyCheckboxGrammar]}, *)
(*          Alignment -> Left]}], *)
(*       Row[{Column[{Style["TABELLA PRODUZIONI", Bold], EventHandler[*)
(*            Dynamic[AnalisiSintattica`Private`displayTable[*)
(*              AnalisiSintattica`Private`emptyGrammar, *)
(*              AnalisiSintattica`Private`cursor]], "MouseClicked" :> *)
(*             If[MemberQ[Range[1, AnalisiSintattica`Private`rows**)
(*                  AnalisiSintattica`Private`cols, *)
(*                 AnalisiSintattica`Private`cols], *)
(*                AnalisiSintattica`Private`loc[MousePosition[*)
(*                  "EventHandlerScaled"]]] || MemberQ[Range[1, *)
(*                 AnalisiSintattica`Private`cols], *)
(*                AnalisiSintattica`Private`loc[MousePosition[*)
(*                  "EventHandlerScaled"]]], AnalisiSintattica`Private`cursor = *)
(*               -1, AnalisiSintattica`Private`cursor = *)
(*               AnalisiSintattica`Private`loc[MousePosition[*)
(*                 "EventHandlerScaled"]]]], *)
(*           Row[Table[With[{AnalisiSintattica`Private`i$ = *)
(*                AnalisiSintattica`Private`i}, Button[*)
(*               AnalisiSintattica`Private`listaProduzioni[[*)
(*                AnalisiSintattica`Private`i$]], *)
(*               AnalisiSintattica`Private`emptyGrammar[[*)
(*                  AnalisiSintattica`Private`xy[*)
(*                    AnalisiSintattica`Private`cursor][[1]],*)
(*                  AnalisiSintattica`Private`xy[*)
(*                    AnalisiSintattica`Private`cursor][[2]]]] = *)
(*                 AnalisiSintattica`Private`listaProduzioni[[*)
(*                  AnalisiSintattica`Private`i$]]; *)
(*                If[AnalisiSintattica`Private`soluzione[[*)
(*                   AnalisiSintattica`Private`xy[*)
(*                     AnalisiSintattica`Private`cursor][[1]],*)
(*                   AnalisiSintattica`Private`xy[*)
(*                     AnalisiSintattica`Private`cursor][[2]]]] != *)
(*                  AnalisiSintattica`Private`emptyGrammar[[*)
(*                   AnalisiSintattica`Private`xy[*)
(*                     AnalisiSintattica`Private`cursor][[1]],*)
(*                   AnalisiSintattica`Private`xy[*)
(*                     AnalisiSintattica`Private`cursor][[2]]]], Beep[]]]], *)
(*             {AnalisiSintattica`Private`i, 1, Length[*)
(*               AnalisiSintattica`Private`listaProduzioni]}], Spacer[0.5]], *)
(*           Row[{Button["Clear", AnalisiSintattica`Private`emptyGrammar[[*)
(*                AnalisiSintattica`Private`xy[*)
(*                  AnalisiSintattica`Private`cursor][[1]],*)
(*                AnalisiSintattica`Private`xy[*)
(*                  AnalisiSintattica`Private`cursor][[2]]]] = " "], *)
(*             Button["Clear All", Table[*)
(*               AnalisiSintattica`Private`emptyGrammar[[*)
(*                 AnalisiSintattica`Private`i,AnalisiSintattica`Private`j]] = *)
(*                " ", {AnalisiSintattica`Private`i, 2, *)
(*                AnalisiSintattica`Private`rows}, {*)
(*                AnalisiSintattica`Private`j, 2, *)
(*                AnalisiSintattica`Private`cols}]]}]}]}], *)
(*       If[AnalisiSintattica`Private`showNullable, *)
(*        Column[{Style["Mostra Nullable", Bold], *)
(*          TabView[Table[AnalisiSintattica`Private`tmp[[*)
(*              AnalisiSintattica`Private`i]] -> *)
(*             AnalisiSintattica`Private`nullable[[AnalisiSintattica`Private`i,*)
(*              2]], {AnalisiSintattica`Private`i, 1, *)
(*             Length[AnalisiSintattica`Private`tmp]}]]}, Alignment -> Right], *)
(*        " "], If[AnalisiSintattica`Private`showFirst, *)
(*        Column[{Style["Mostra First", Bold], *)
(*          AnalisiSintattica`Private`displayFirstSln[*)
(*           AnalisiSintattica`Private`emptyCheckboxGrammar]}, *)
(*         Alignment -> Right], ""], If[AnalisiSintattica`Private`showFollow, *)
(*        Column[{Style["Mostra First", Bold], *)
(*          AnalisiSintattica`Private`displayFollowSln[*)
(*           AnalisiSintattica`Private`emptyCheckboxGrammar]}, *)
(*         Alignment -> Right], ""], If[AnalisiSintattica`Private`showSolution, *)
(*        Row[{AnalisiSintattica`Private`displayTableSln[*)
(*           AnalisiSintattica`Private`soluzione]}], ""]}, Alignment -> Left], *)
(*     " "}}, Editable -> False], {{AnalisiSintattica`Private`soluzione, *)
(*    {{" ", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "$"}, *)
(*     {"A", "A->Bab", " ", "A->Bab", "A->Bab", "A->Bab", "A->C", "A->C", *)
(*      "A->C", " ", " ", " ", " ", " "}, {"B", "B->\[Epsilon]", " ", "B->cD", "B->d", *)
(*      "B->e", " ", " ", " ", " ", " ", " ", " ", " "}, *)
(*     {"C", " ", " ", " ", " ", " ", "C->f", "C->g", "C->h", " ", " ", " ", *)
(*      " ", "C->\[Epsilon]"}, {"D", "D->\[Epsilon]", " ", " ", " ", " ", " ", " ", " ", " ", *)
(*      "D->jik", " ", " ", " "}}}, ControlType -> None}, *)
(*  {{AnalisiSintattica`Private`emptyGrammar, *)
(*    {{" ", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "$"}, *)
(*     {"A", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "}, *)
(*     {"B", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "}, *)
(*     {"C", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "}, *)
(*     {"D", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", *)
(*      " "}}}, ControlType -> None}, *)
(*  {{AnalisiSintattica`Private`emptyCheckboxGrammar, *)
(*    {{" ", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "$"}, *)
(*     {"A", Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], *)
(*      Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], *)
(*      Checkbox[], Checkbox[]}, {"B", Checkbox[], Checkbox[], Checkbox[], *)
(*      Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], *)
(*      Checkbox[], Checkbox[], Checkbox[], Checkbox[]}, *)
(*     {"C", Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], *)
(*      Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], *)
(*      Checkbox[], Checkbox[]}, {"D", Checkbox[], Checkbox[], Checkbox[], *)
(*      Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], *)
(*      Checkbox[], Checkbox[], Checkbox[], Checkbox[]}}}, *)
(*   ControlType -> None}, {{AnalisiSintattica`Private`cursor, 0}, *)
(*   ControlType -> None}, {{AnalisiSintattica`Private`showNullable, False, *)
(*    "Mostra Nullable"}, {True, False}}, *)
(*  {{AnalisiSintattica`Private`showFirst, False, "Mostra First"}, *)
(*   {True, False}}, {{AnalisiSintattica`Private`showFollow, False, *)
(*    "Mostra Follow"}, {True, False}}, *)
(*  {{AnalisiSintattica`Private`showSolution, False, "show solution"}, *)
(*   {True, False}}, ContentSize -> {900, 900}, *)
(*  Initialization :> {AnalisiSintattica`Private`soluzione = *)
(*     {{" ", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "$"}, *)
(*      {"A", "A->Bab", " ", "A->Bab", "A->Bab", "A->Bab", "A->C", "A->C", *)
(*       "A->C", " ", " ", " ", " ", " "}, {"B", "B->\[Epsilon]", " ", "B->cD", "B->d", *)
(*       "B->e", " ", " ", " ", " ", " ", " ", " ", " "}, *)
(*      {"C", " ", " ", " ", " ", " ", "C->f", "C->g", "C->h", " ", " ", " ", *)
(*       " ", "C->\[Epsilon]"}, {"D", "D->\[Epsilon]", " ", " ", " ", " ", " ", " ", " ", " ", *)
(*       "D->jik", " ", " ", " "}}, AnalisiSintattica`Private`grammar = *)
(*     {{" ", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "$"}, *)
(*      {"A", "A->Bab", " ", "A->Bab", "A->Bab", "A->Bab", "A->C", "A->C", *)
(*       "A->C", " ", " ", " ", " ", " "}, {"B", "B->\[Epsilon]", " ", "B->cD", "B->d", *)
(*       "B->e", " ", " ", " ", " ", " ", " ", " ", " "}, *)
(*      {"C", " ", " ", " ", " ", " ", "C->f", "C->g", "C->h", " ", " ", " ", *)
(*       " ", "C->\[Epsilon]"}, {"D", "D->\[Epsilon]", " ", " ", " ", " ", " ", " ", " ", " ", *)
(*       "D->jik", " ", " ", " "}}, *)
(*    AnalisiSintattica`Private`createEmptyGrammar[*)
(*      AnalisiSintattica`Private`sln_] := *)
(*     Module[{AnalisiSintattica`Private`copy = AnalisiSintattica`Private`sln}, *)
(*      Table[If[AnalisiSintattica`Private`i > 1 && *)
(*          AnalisiSintattica`Private`j > 1, AnalisiSintattica`Private`copy[[*)
(*           AnalisiSintattica`Private`i,AnalisiSintattica`Private`j]] = " "], *)
(*        {AnalisiSintattica`Private`i, AnalisiSintattica`Private`rows}, *)
(*        {AnalisiSintattica`Private`j, AnalisiSintattica`Private`cols}]; *)
(*       AnalisiSintattica`Private`copy], AnalisiSintattica`Private`i = 5, *)
(*    AnalisiSintattica`Private`j = 3, AnalisiSintattica`Private`rows = 5, *)
(*    AnalisiSintattica`Private`cols = 14, *)
(*    AnalisiSintattica`Private`listaProduzioni = {"A->C", "A->Bab", "B->cD", *)
(*      "B->d", "B->e", "B->\[Epsilon]", "C->h", "C->g", "C->f", "C->\[Epsilon]", "D->jik", *)
(*      "D->\[Epsilon]"}, AnalisiSintattica`Private`tmp = {"A", "B", "C", "D"}, *)
(*    AnalisiSintattica`Private`displayFirst[AnalisiSintattica`Private`g_] := *)
(*     Grid[AnalisiSintattica`Private`g, Frame -> All, *)
(*      Background -> {White, White}, ItemStyle -> {Automatic}, *)
(*      ItemSize -> {{2, {2}}}, BaseStyle -> {Bold}*Editable -> False], *)
(*    AnalisiSintattica`Private`displayFollow[AnalisiSintattica`Private`g_] := *)
(*     Grid[AnalisiSintattica`Private`g, Frame -> All, *)
(*      Background -> {White, White}, ItemStyle -> {Automatic}, *)
(*      ItemSize -> {{2, {2}}}, BaseStyle -> {Bold}*Editable -> False], *)
(*    AnalisiSintattica`Private`displayTable[AnalisiSintattica`Private`g_, *)
(*      AnalisiSintattica`Private`cursor_:0] := *)
(*     Grid[AnalisiSintattica`Private`g, *)
(*      Frame -> If[MatchQ[AnalisiSintattica`Private`xy[*)
(*          AnalisiSintattica`Private`cursor], _Integer], All, *)
(*        {All, All, {AnalisiSintattica`Private`xy[*)
(*            AnalisiSintattica`Private`cursor] -> {Thick, Blue}}}], *)
(*      Background -> {White, White}, ItemStyle -> {Automatic}, *)
(*      ItemSize -> {{3, {4}}}, BaseStyle -> {Bold}, Editable -> False], *)
(*    AnalisiSintattica`Private`xy[AnalisiSintattica`Private`n_] := *)
(*     {AnalisiSintattica`Private`row[AnalisiSintattica`Private`n], *)
(*      AnalisiSintattica`Private`col[AnalisiSintattica`Private`n]}, *)
(*    AnalisiSintattica`Private`row[AnalisiSintattica`Private`n_] := *)
(*     Quotient[AnalisiSintattica`Private`n - 1, *)
(*       AnalisiSintattica`Private`cols] + 1, *)
(*    AnalisiSintattica`Private`col[AnalisiSintattica`Private`n_] := *)
(*     Mod[AnalisiSintattica`Private`n - 1, AnalisiSintattica`Private`cols] + *)
(*      1, AnalisiSintattica`Private`loc[{AnalisiSintattica`Private`x_, *)
(*       AnalisiSintattica`Private`y_}] := *)
(*     1 + Floor[AnalisiSintattica`Private`cols*AnalisiSintattica`Private`x] + *)
(*      AnalisiSintattica`Private`cols*Floor[(1 - AnalisiSintattica`Private`y)**)
(*         AnalisiSintattica`Private`rows], *)
(*    AnalisiSintattica`Private`nullable = {{"A", True}, {"B", True}, *)
(*      {"C", True}, {"D", True}}, AnalisiSintattica`Private`displayFirstSln[*)
(*      AnalisiSintattica`Private`g_] := AnalisiSintattica`Private`displayFirst[*)
(*      AnalisiSintattica`Private`g], *)
(*    AnalisiSintattica`Private`displayFollowSln[*)
(*      AnalisiSintattica`Private`g_] := *)
(*     AnalisiSintattica`Private`displayFollow[AnalisiSintattica`Private`g], *)
(*    AnalisiSintattica`Private`displayTableSln[*)
(*      AnalisiSintattica`Private`g_] := AnalisiSintattica`Private`displayTable[*)
(*      AnalisiSintattica`Private`g, 0]}]*)


(* ::Output:: *)
(*Manipulate[Grid[{{Column[{Style["ANALISI SINTATTICA", Bold], *)
(*       Style["ESERCIZIO DI GRAMMATICA N\[Degree]:", Bold], Style["Generare gli \*)
(*insiemi Nullable, First e Follow per la seguente grammatica", Bold]}, *)
(*      Alignment -> Left]}, *)
(*    {Column[{Row[{Button["Nuova grammatica", *)
(*          (AnalisiSintattica`Private`cursor = 0; Spacer[5]; *)
(*            AnalisiSintattica`Private`showSolution = False; *)
(*            AnalisiSintattica`Private`soluzione = *)
(*             AnalisiSintattica`Private`grammar; *)
(*            AnalisiSintattica`Private`emptyGrammar = *)
(*             AnalisiSintattica`Private`createEmptyGrammar[*)
(*              AnalisiSintattica`Private`soluzione]; ) & ], *)
(*         DynamicModule[{AnalisiSintattica`Private`numero = ""}, *)
(*          Panel[Column[{Row[{Style["Genera esercizio n\[Degree]: ", Bold], *)
(*               InputField[Dynamic[AnalisiSintattica`Private`numero], *)
(*                Number]}], Dynamic[AnalisiSintattica`Private`numero]; }]]]}], *)
(*       " ", Row[{Column[{Style["Grammatica", Bold], *)
(*           Grid[List /@ AnalisiSintattica`Private`listaProduzioni, *)
(*            Frame -> All, Background -> {White, White}, ItemStyle -> *)
(*             {Automatic}, ItemSize -> {{8, {8}}}, BaseStyle -> *)
(*             {Bold}*Editable -> False]}, Alignment -> Left]}], " ", *)
(*       Row[{Column[{Style["NULLABLE", Bold], TabView[*)
(*            Table[AnalisiSintattica`Private`tmp[[*)
(*               AnalisiSintattica`Private`i]] -> PopupMenu[" ", {*)
(*                AnalisiSintattica`Private`TRUE, *)
(*                AnalisiSintattica`Private`FALSE}], *)
(*             {AnalisiSintattica`Private`i, 1, Length[*)
(*               AnalisiSintattica`Private`tmp]}]]}, Alignment -> Left], " "}], *)
(*       " ", Row[{Column[{Style["FIRST", Bold], Framed["Dato un non terminale \*)
(*(ad esempio A,B), il suo insieme First \[EGrave] composto dai simboli terminali \*)
(*(compreso \[Epsilon]) che possono apparire come carattere iniziale di una stringa \*)
(*derivata da una sua produzione.", FrameStyle -> Directive[Black, Thin], *)
(*            ImageSize -> {700, 100}], AnalisiSintattica`Private`displayFirst[*)
(*            AnalisiSintattica`Private`emptyCheckboxGrammar]}, *)
(*          Alignment -> Left]}], Row[{Column[{Style["FOLLOW", Bold], *)
(*           AnalisiSintattica`Private`displayFollow[*)
(*            AnalisiSintattica`Private`emptyCheckboxGrammar]}, *)
(*          Alignment -> Left]}], *)
(*       Row[{Column[{Style["TABELLA PRODUZIONI", Bold], EventHandler[*)
(*            Dynamic[AnalisiSintattica`Private`displayTable[*)
(*              AnalisiSintattica`Private`emptyGrammar, *)
(*              AnalisiSintattica`Private`cursor]], "MouseClicked" :> *)
(*             If[MemberQ[Range[1, AnalisiSintattica`Private`rows**)
(*                  AnalisiSintattica`Private`cols, *)
(*                 AnalisiSintattica`Private`cols], *)
(*                AnalisiSintattica`Private`loc[MousePosition[*)
(*                  "EventHandlerScaled"]]] || MemberQ[Range[1, *)
(*                 AnalisiSintattica`Private`cols], *)
(*                AnalisiSintattica`Private`loc[MousePosition[*)
(*                  "EventHandlerScaled"]]], AnalisiSintattica`Private`cursor = *)
(*               -1, AnalisiSintattica`Private`cursor = *)
(*               AnalisiSintattica`Private`loc[MousePosition[*)
(*                 "EventHandlerScaled"]]]], *)
(*           Row[Table[With[{AnalisiSintattica`Private`i$ = *)
(*                AnalisiSintattica`Private`i}, Button[*)
(*               AnalisiSintattica`Private`listaProduzioni[[*)
(*                AnalisiSintattica`Private`i$]], *)
(*               AnalisiSintattica`Private`emptyGrammar[[*)
(*                  AnalisiSintattica`Private`xy[*)
(*                    AnalisiSintattica`Private`cursor][[1]],*)
(*                  AnalisiSintattica`Private`xy[*)
(*                    AnalisiSintattica`Private`cursor][[2]]]] = *)
(*                 AnalisiSintattica`Private`listaProduzioni[[*)
(*                  AnalisiSintattica`Private`i$]]; *)
(*                If[AnalisiSintattica`Private`soluzione[[*)
(*                   AnalisiSintattica`Private`xy[*)
(*                     AnalisiSintattica`Private`cursor][[1]],*)
(*                   AnalisiSintattica`Private`xy[*)
(*                     AnalisiSintattica`Private`cursor][[2]]]] != *)
(*                  AnalisiSintattica`Private`emptyGrammar[[*)
(*                   AnalisiSintattica`Private`xy[*)
(*                     AnalisiSintattica`Private`cursor][[1]],*)
(*                   AnalisiSintattica`Private`xy[*)
(*                     AnalisiSintattica`Private`cursor][[2]]]], Beep[]]]], *)
(*             {AnalisiSintattica`Private`i, 1, Length[*)
(*               AnalisiSintattica`Private`listaProduzioni]}], Spacer[0.5]], *)
(*           Row[{Button["Clear", AnalisiSintattica`Private`emptyGrammar[[*)
(*                AnalisiSintattica`Private`xy[*)
(*                  AnalisiSintattica`Private`cursor][[1]],*)
(*                AnalisiSintattica`Private`xy[*)
(*                  AnalisiSintattica`Private`cursor][[2]]]] = " "], *)
(*             Button["Clear All", Table[*)
(*               AnalisiSintattica`Private`emptyGrammar[[*)
(*                 AnalisiSintattica`Private`i,AnalisiSintattica`Private`j]] = *)
(*                " ", {AnalisiSintattica`Private`i, 2, *)
(*                AnalisiSintattica`Private`rows}, {*)
(*                AnalisiSintattica`Private`j, 2, *)
(*                AnalisiSintattica`Private`cols}]]}]}]}], *)
(*       If[AnalisiSintattica`Private`showNullable, *)
(*        Column[{Style["Mostra Nullable", Bold], *)
(*          TabView[Table[AnalisiSintattica`Private`tmp[[*)
(*              AnalisiSintattica`Private`i]] -> *)
(*             AnalisiSintattica`Private`nullable[[AnalisiSintattica`Private`i,*)
(*              2]], {AnalisiSintattica`Private`i, 1, *)
(*             Length[AnalisiSintattica`Private`tmp]}]]}, Alignment -> Right], *)
(*        " "], If[AnalisiSintattica`Private`showFirst, *)
(*        Column[{Style["Mostra First", Bold], *)
(*          AnalisiSintattica`Private`displayFirstSln[*)
(*           AnalisiSintattica`Private`emptyCheckboxGrammar]}, *)
(*         Alignment -> Right], ""], If[AnalisiSintattica`Private`showFollow, *)
(*        Column[{Style["Mostra First", Bold], *)
(*          AnalisiSintattica`Private`displayFollowSln[*)
(*           AnalisiSintattica`Private`emptyCheckboxGrammar]}, *)
(*         Alignment -> Right], ""], If[AnalisiSintattica`Private`showSolution, *)
(*        Row[{AnalisiSintattica`Private`displayTableSln[*)
(*           AnalisiSintattica`Private`soluzione]}], ""]}, Alignment -> Left], *)
(*     " "}}, Editable -> False], {{AnalisiSintattica`Private`soluzione, *)
(*    {{" ", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "$"}, *)
(*     {"A", "A->Bab", " ", "A->Bab", "A->Bab", "A->Bab", "A->C", "A->C", *)
(*      "A->C", " ", " ", " ", " ", " "}, {"B", "B->\[Epsilon]", " ", "B->cD", "B->d", *)
(*      "B->e", " ", " ", " ", " ", " ", " ", " ", " "}, *)
(*     {"C", " ", " ", " ", " ", " ", "C->f", "C->g", "C->h", " ", " ", " ", *)
(*      " ", "C->\[Epsilon]"}, {"D", "D->\[Epsilon]", " ", " ", " ", " ", " ", " ", " ", " ", *)
(*      "D->jik", " ", " ", " "}}}, ControlType -> None}, *)
(*  {{AnalisiSintattica`Private`emptyGrammar, *)
(*    {{" ", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "$"}, *)
(*     {"A", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "}, *)
(*     {"B", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "}, *)
(*     {"C", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "}, *)
(*     {"D", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", *)
(*      " "}}}, ControlType -> None}, *)
(*  {{AnalisiSintattica`Private`emptyCheckboxGrammar, *)
(*    {{" ", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "$"}, *)
(*     {"A", Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], *)
(*      Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], *)
(*      Checkbox[], Checkbox[]}, {"B", Checkbox[], Checkbox[], Checkbox[], *)
(*      Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], *)
(*      Checkbox[], Checkbox[], Checkbox[], Checkbox[]}, *)
(*     {"C", Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], *)
(*      Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], *)
(*      Checkbox[], Checkbox[]}, {"D", Checkbox[], Checkbox[], Checkbox[], *)
(*      Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], *)
(*      Checkbox[], Checkbox[], Checkbox[], Checkbox[]}}}, *)
(*   ControlType -> None}, {{AnalisiSintattica`Private`cursor, 0}, *)
(*   ControlType -> None}, {{AnalisiSintattica`Private`showNullable, False, *)
(*    "Mostra Nullable"}, {True, False}}, *)
(*  {{AnalisiSintattica`Private`showFirst, False, "Mostra First"}, *)
(*   {True, False}}, {{AnalisiSintattica`Private`showFollow, False, *)
(*    "Mostra Follow"}, {True, False}}, *)
(*  {{AnalisiSintattica`Private`showSolution, False, "show solution"}, *)
(*   {True, False}}, ContentSize -> {900, 900}, *)
(*  Initialization :> {AnalisiSintattica`Private`soluzione = *)
(*     {{" ", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "$"}, *)
(*      {"A", "A->Bab", " ", "A->Bab", "A->Bab", "A->Bab", "A->C", "A->C", *)
(*       "A->C", " ", " ", " ", " ", " "}, {"B", "B->\[Epsilon]", " ", "B->cD", "B->d", *)
(*       "B->e", " ", " ", " ", " ", " ", " ", " ", " "}, *)
(*      {"C", " ", " ", " ", " ", " ", "C->f", "C->g", "C->h", " ", " ", " ", *)
(*       " ", "C->\[Epsilon]"}, {"D", "D->\[Epsilon]", " ", " ", " ", " ", " ", " ", " ", " ", *)
(*       "D->jik", " ", " ", " "}}, AnalisiSintattica`Private`grammar = *)
(*     {{" ", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "$"}, *)
(*      {"A", "A->Bab", " ", "A->Bab", "A->Bab", "A->Bab", "A->C", "A->C", *)
(*       "A->C", " ", " ", " ", " ", " "}, {"B", "B->\[Epsilon]", " ", "B->cD", "B->d", *)
(*       "B->e", " ", " ", " ", " ", " ", " ", " ", " "}, *)
(*      {"C", " ", " ", " ", " ", " ", "C->f", "C->g", "C->h", " ", " ", " ", *)
(*       " ", "C->\[Epsilon]"}, {"D", "D->\[Epsilon]", " ", " ", " ", " ", " ", " ", " ", " ", *)
(*       "D->jik", " ", " ", " "}}, *)
(*    AnalisiSintattica`Private`createEmptyGrammar[*)
(*      AnalisiSintattica`Private`sln_] := *)
(*     Module[{AnalisiSintattica`Private`copy = AnalisiSintattica`Private`sln}, *)
(*      Table[If[AnalisiSintattica`Private`i > 1 && *)
(*          AnalisiSintattica`Private`j > 1, AnalisiSintattica`Private`copy[[*)
(*           AnalisiSintattica`Private`i,AnalisiSintattica`Private`j]] = " "], *)
(*        {AnalisiSintattica`Private`i, AnalisiSintattica`Private`rows}, *)
(*        {AnalisiSintattica`Private`j, AnalisiSintattica`Private`cols}]; *)
(*       AnalisiSintattica`Private`copy], AnalisiSintattica`Private`i = 5, *)
(*    AnalisiSintattica`Private`j = 3, AnalisiSintattica`Private`rows = 5, *)
(*    AnalisiSintattica`Private`cols = 14, *)
(*    AnalisiSintattica`Private`listaProduzioni = {"A->C", "A->Bab", "B->cD", *)
(*      "B->d", "B->e", "B->\[Epsilon]", "C->h", "C->g", "C->f", "C->\[Epsilon]", "D->jik", *)
(*      "D->\[Epsilon]"}, AnalisiSintattica`Private`tmp = {"A", "B", "C", "D"}, *)
(*    AnalisiSintattica`Private`displayFirst[AnalisiSintattica`Private`g_] := *)
(*     Grid[AnalisiSintattica`Private`g, Frame -> All, *)
(*      Background -> {White, White}, ItemStyle -> {Automatic}, *)
(*      ItemSize -> {{2, {2}}}, BaseStyle -> {Bold}*Editable -> False], *)
(*    AnalisiSintattica`Private`displayFollow[AnalisiSintattica`Private`g_] := *)
(*     Grid[AnalisiSintattica`Private`g, Frame -> All, *)
(*      Background -> {White, White}, ItemStyle -> {Automatic}, *)
(*      ItemSize -> {{2, {2}}}, BaseStyle -> {Bold}*Editable -> False], *)
(*    AnalisiSintattica`Private`displayTable[AnalisiSintattica`Private`g_, *)
(*      AnalisiSintattica`Private`cursor_:0] := *)
(*     Grid[AnalisiSintattica`Private`g, *)
(*      Frame -> If[MatchQ[AnalisiSintattica`Private`xy[*)
(*          AnalisiSintattica`Private`cursor], _Integer], All, *)
(*        {All, All, {AnalisiSintattica`Private`xy[*)
(*            AnalisiSintattica`Private`cursor] -> {Thick, Blue}}}], *)
(*      Background -> {White, White}, ItemStyle -> {Automatic}, *)
(*      ItemSize -> {{3, {4}}}, BaseStyle -> {Bold}, Editable -> False], *)
(*    AnalisiSintattica`Private`xy[AnalisiSintattica`Private`n_] := *)
(*     {AnalisiSintattica`Private`row[AnalisiSintattica`Private`n], *)
(*      AnalisiSintattica`Private`col[AnalisiSintattica`Private`n]}, *)
(*    AnalisiSintattica`Private`row[AnalisiSintattica`Private`n_] := *)
(*     Quotient[AnalisiSintattica`Private`n - 1, *)
(*       AnalisiSintattica`Private`cols] + 1, *)
(*    AnalisiSintattica`Private`col[AnalisiSintattica`Private`n_] := *)
(*     Mod[AnalisiSintattica`Private`n - 1, AnalisiSintattica`Private`cols] + *)
(*      1, AnalisiSintattica`Private`loc[{AnalisiSintattica`Private`x_, *)
(*       AnalisiSintattica`Private`y_}] := *)
(*     1 + Floor[AnalisiSintattica`Private`cols*AnalisiSintattica`Private`x] + *)
(*      AnalisiSintattica`Private`cols*Floor[(1 - AnalisiSintattica`Private`y)**)
(*         AnalisiSintattica`Private`rows], *)
(*    AnalisiSintattica`Private`nullable = {{"A", True}, {"B", True}, *)
(*      {"C", True}, {"D", True}}, AnalisiSintattica`Private`displayFirstSln[*)
(*      AnalisiSintattica`Private`g_] := AnalisiSintattica`Private`displayFirst[*)
(*      AnalisiSintattica`Private`g], *)
(*    AnalisiSintattica`Private`displayFollowSln[*)
(*      AnalisiSintattica`Private`g_] := *)
(*     AnalisiSintattica`Private`displayFollow[AnalisiSintattica`Private`g], *)
(*    AnalisiSintattica`Private`displayTableSln[*)
(*      AnalisiSintattica`Private`g_] := AnalisiSintattica`Private`displayTable[*)
(*      AnalisiSintattica`Private`g, 0]}]*)


(* ::Output:: *)
(*Manipulate[Grid[{{Column[{Style["ANALISI SINTATTICA", Bold], *)
(*       Style["ESERCIZIO DI GRAMMATICA N\[Degree]:", Bold], Style["Generare gli \*)
(*insiemi Nullable, First e Follow per la seguente grammatica", Bold]}, *)
(*      Alignment -> Left]}, *)
(*    {Column[{Row[{Button["Nuova grammatica", *)
(*          (AnalisiSintattica`Private`cursor = 0; Spacer[5]; *)
(*            AnalisiSintattica`Private`showSolution = False; *)
(*            AnalisiSintattica`Private`soluzione = *)
(*             AnalisiSintattica`Private`grammar; *)
(*            AnalisiSintattica`Private`emptyGrammar = *)
(*             AnalisiSintattica`Private`createEmptyGrammar[*)
(*              AnalisiSintattica`Private`soluzione]; ) & ], *)
(*         DynamicModule[{AnalisiSintattica`Private`numero = ""}, *)
(*          Panel[Column[{Row[{Style["Genera esercizio n\[Degree]: ", Bold], *)
(*               InputField[Dynamic[AnalisiSintattica`Private`numero], *)
(*                Number]}], Dynamic[AnalisiSintattica`Private`numero]; }]]]}], *)
(*       " ", Row[{Column[{Style["Grammatica", Bold], *)
(*           Grid[List /@ AnalisiSintattica`Private`listaProduzioni, *)
(*            Frame -> All, Background -> {White, White}, ItemStyle -> *)
(*             {Automatic}, ItemSize -> {{8, {8}}}, BaseStyle -> *)
(*             {Bold}*Editable -> False]}, Alignment -> Left]}], " ", *)
(*       Row[{Column[{Style["NULLABLE", Bold], TabView[*)
(*            Table[AnalisiSintattica`Private`tmp[[*)
(*               AnalisiSintattica`Private`i]] -> PopupMenu[" ", {*)
(*                AnalisiSintattica`Private`TRUE, *)
(*                AnalisiSintattica`Private`FALSE}], *)
(*             {AnalisiSintattica`Private`i, 1, Length[*)
(*               AnalisiSintattica`Private`tmp]}]]}, Alignment -> Left], " "}], *)
(*       " ", Row[{Column[{Style["FIRST", Bold], Framed["Dato un non terminale \*)
(*(ad esempio A,B), il suo insieme First \[EGrave] composto dai simboli terminali \*)
(*(compreso \[Epsilon]) che possono apparire come carattere iniziale di una stringa \*)
(*derivata da una sua produzione.", FrameStyle -> Directive[Black, Thin], *)
(*            ImageSize -> {700, 50}], AnalisiSintattica`Private`displayFirst[*)
(*            AnalisiSintattica`Private`emptyCheckboxGrammar]}, *)
(*          Alignment -> Left]}], Row[{Column[{Style["FOLLOW", Bold], *)
(*           AnalisiSintattica`Private`displayFollow[*)
(*            AnalisiSintattica`Private`emptyCheckboxGrammar]}, *)
(*          Alignment -> Left]}], *)
(*       Row[{Column[{Style["TABELLA PRODUZIONI", Bold], EventHandler[*)
(*            Dynamic[AnalisiSintattica`Private`displayTable[*)
(*              AnalisiSintattica`Private`emptyGrammar, *)
(*              AnalisiSintattica`Private`cursor]], "MouseClicked" :> *)
(*             If[MemberQ[Range[1, AnalisiSintattica`Private`rows**)
(*                  AnalisiSintattica`Private`cols, *)
(*                 AnalisiSintattica`Private`cols], *)
(*                AnalisiSintattica`Private`loc[MousePosition[*)
(*                  "EventHandlerScaled"]]] || MemberQ[Range[1, *)
(*                 AnalisiSintattica`Private`cols], *)
(*                AnalisiSintattica`Private`loc[MousePosition[*)
(*                  "EventHandlerScaled"]]], AnalisiSintattica`Private`cursor = *)
(*               -1, AnalisiSintattica`Private`cursor = *)
(*               AnalisiSintattica`Private`loc[MousePosition[*)
(*                 "EventHandlerScaled"]]]], *)
(*           Row[Table[With[{AnalisiSintattica`Private`i$ = *)
(*                AnalisiSintattica`Private`i}, Button[*)
(*               AnalisiSintattica`Private`listaProduzioni[[*)
(*                AnalisiSintattica`Private`i$]], *)
(*               AnalisiSintattica`Private`emptyGrammar[[*)
(*                  AnalisiSintattica`Private`xy[*)
(*                    AnalisiSintattica`Private`cursor][[1]],*)
(*                  AnalisiSintattica`Private`xy[*)
(*                    AnalisiSintattica`Private`cursor][[2]]]] = *)
(*                 AnalisiSintattica`Private`listaProduzioni[[*)
(*                  AnalisiSintattica`Private`i$]]; *)
(*                If[AnalisiSintattica`Private`soluzione[[*)
(*                   AnalisiSintattica`Private`xy[*)
(*                     AnalisiSintattica`Private`cursor][[1]],*)
(*                   AnalisiSintattica`Private`xy[*)
(*                     AnalisiSintattica`Private`cursor][[2]]]] != *)
(*                  AnalisiSintattica`Private`emptyGrammar[[*)
(*                   AnalisiSintattica`Private`xy[*)
(*                     AnalisiSintattica`Private`cursor][[1]],*)
(*                   AnalisiSintattica`Private`xy[*)
(*                     AnalisiSintattica`Private`cursor][[2]]]], Beep[]]]], *)
(*             {AnalisiSintattica`Private`i, 1, Length[*)
(*               AnalisiSintattica`Private`listaProduzioni]}], Spacer[0.5]], *)
(*           Row[{Button["Clear", AnalisiSintattica`Private`emptyGrammar[[*)
(*                AnalisiSintattica`Private`xy[*)
(*                  AnalisiSintattica`Private`cursor][[1]],*)
(*                AnalisiSintattica`Private`xy[*)
(*                  AnalisiSintattica`Private`cursor][[2]]]] = " "], *)
(*             Button["Clear All", Table[*)
(*               AnalisiSintattica`Private`emptyGrammar[[*)
(*                 AnalisiSintattica`Private`i,AnalisiSintattica`Private`j]] = *)
(*                " ", {AnalisiSintattica`Private`i, 2, *)
(*                AnalisiSintattica`Private`rows}, {*)
(*                AnalisiSintattica`Private`j, 2, *)
(*                AnalisiSintattica`Private`cols}]]}]}]}], *)
(*       If[AnalisiSintattica`Private`showNullable, *)
(*        Column[{Style["Mostra Nullable", Bold], *)
(*          TabView[Table[AnalisiSintattica`Private`tmp[[*)
(*              AnalisiSintattica`Private`i]] -> *)
(*             AnalisiSintattica`Private`nullable[[AnalisiSintattica`Private`i,*)
(*              2]], {AnalisiSintattica`Private`i, 1, *)
(*             Length[AnalisiSintattica`Private`tmp]}]]}, Alignment -> Right], *)
(*        " "], If[AnalisiSintattica`Private`showFirst, *)
(*        Column[{Style["Mostra First", Bold], *)
(*          AnalisiSintattica`Private`displayFirstSln[*)
(*           AnalisiSintattica`Private`emptyCheckboxGrammar]}, *)
(*         Alignment -> Right], ""], If[AnalisiSintattica`Private`showFollow, *)
(*        Column[{Style["Mostra First", Bold], *)
(*          AnalisiSintattica`Private`displayFollowSln[*)
(*           AnalisiSintattica`Private`emptyCheckboxGrammar]}, *)
(*         Alignment -> Right], ""], If[AnalisiSintattica`Private`showSolution, *)
(*        Row[{AnalisiSintattica`Private`displayTableSln[*)
(*           AnalisiSintattica`Private`soluzione]}], ""]}, Alignment -> Left], *)
(*     " "}}, Editable -> False], {{AnalisiSintattica`Private`soluzione, *)
(*    {{" ", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "$"}, *)
(*     {"A", "A->Bab", " ", "A->Bab", "A->Bab", "A->Bab", "A->C", "A->C", *)
(*      "A->C", " ", " ", " ", " ", " "}, {"B", "B->\[Epsilon]", " ", "B->cD", "B->d", *)
(*      "B->e", " ", " ", " ", " ", " ", " ", " ", " "}, *)
(*     {"C", " ", " ", " ", " ", " ", "C->f", "C->g", "C->h", " ", " ", " ", *)
(*      " ", "C->\[Epsilon]"}, {"D", "D->\[Epsilon]", " ", " ", " ", " ", " ", " ", " ", " ", *)
(*      "D->jik", " ", " ", " "}}}, ControlType -> None}, *)
(*  {{AnalisiSintattica`Private`emptyGrammar, *)
(*    {{" ", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "$"}, *)
(*     {"A", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "}, *)
(*     {"B", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "}, *)
(*     {"C", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "}, *)
(*     {"D", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", *)
(*      " "}}}, ControlType -> None}, *)
(*  {{AnalisiSintattica`Private`emptyCheckboxGrammar, *)
(*    {{" ", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "$"}, *)
(*     {"A", Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], *)
(*      Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], *)
(*      Checkbox[], Checkbox[]}, {"B", Checkbox[], Checkbox[], Checkbox[], *)
(*      Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], *)
(*      Checkbox[], Checkbox[], Checkbox[], Checkbox[]}, *)
(*     {"C", Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], *)
(*      Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], *)
(*      Checkbox[], Checkbox[]}, {"D", Checkbox[], Checkbox[], Checkbox[], *)
(*      Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], *)
(*      Checkbox[], Checkbox[], Checkbox[], Checkbox[]}}}, *)
(*   ControlType -> None}, {{AnalisiSintattica`Private`cursor, 0}, *)
(*   ControlType -> None}, {{AnalisiSintattica`Private`showNullable, False, *)
(*    "Mostra Nullable"}, {True, False}}, *)
(*  {{AnalisiSintattica`Private`showFirst, False, "Mostra First"}, *)
(*   {True, False}}, {{AnalisiSintattica`Private`showFollow, False, *)
(*    "Mostra Follow"}, {True, False}}, *)
(*  {{AnalisiSintattica`Private`showSolution, False, "show solution"}, *)
(*   {True, False}}, ContentSize -> {900, 900}, *)
(*  Initialization :> {AnalisiSintattica`Private`soluzione = *)
(*     {{" ", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "$"}, *)
(*      {"A", "A->Bab", " ", "A->Bab", "A->Bab", "A->Bab", "A->C", "A->C", *)
(*       "A->C", " ", " ", " ", " ", " "}, {"B", "B->\[Epsilon]", " ", "B->cD", "B->d", *)
(*       "B->e", " ", " ", " ", " ", " ", " ", " ", " "}, *)
(*      {"C", " ", " ", " ", " ", " ", "C->f", "C->g", "C->h", " ", " ", " ", *)
(*       " ", "C->\[Epsilon]"}, {"D", "D->\[Epsilon]", " ", " ", " ", " ", " ", " ", " ", " ", *)
(*       "D->jik", " ", " ", " "}}, AnalisiSintattica`Private`grammar = *)
(*     {{" ", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "$"}, *)
(*      {"A", "A->Bab", " ", "A->Bab", "A->Bab", "A->Bab", "A->C", "A->C", *)
(*       "A->C", " ", " ", " ", " ", " "}, {"B", "B->\[Epsilon]", " ", "B->cD", "B->d", *)
(*       "B->e", " ", " ", " ", " ", " ", " ", " ", " "}, *)
(*      {"C", " ", " ", " ", " ", " ", "C->f", "C->g", "C->h", " ", " ", " ", *)
(*       " ", "C->\[Epsilon]"}, {"D", "D->\[Epsilon]", " ", " ", " ", " ", " ", " ", " ", " ", *)
(*       "D->jik", " ", " ", " "}}, *)
(*    AnalisiSintattica`Private`createEmptyGrammar[*)
(*      AnalisiSintattica`Private`sln_] := *)
(*     Module[{AnalisiSintattica`Private`copy = AnalisiSintattica`Private`sln}, *)
(*      Table[If[AnalisiSintattica`Private`i > 1 && *)
(*          AnalisiSintattica`Private`j > 1, AnalisiSintattica`Private`copy[[*)
(*           AnalisiSintattica`Private`i,AnalisiSintattica`Private`j]] = " "], *)
(*        {AnalisiSintattica`Private`i, AnalisiSintattica`Private`rows}, *)
(*        {AnalisiSintattica`Private`j, AnalisiSintattica`Private`cols}]; *)
(*       AnalisiSintattica`Private`copy], AnalisiSintattica`Private`i = 5, *)
(*    AnalisiSintattica`Private`j = 3, AnalisiSintattica`Private`rows = 5, *)
(*    AnalisiSintattica`Private`cols = 14, *)
(*    AnalisiSintattica`Private`listaProduzioni = {"A->C", "A->Bab", "B->cD", *)
(*      "B->d", "B->e", "B->\[Epsilon]", "C->h", "C->g", "C->f", "C->\[Epsilon]", "D->jik", *)
(*      "D->\[Epsilon]"}, AnalisiSintattica`Private`tmp = {"A", "B", "C", "D"}, *)
(*    AnalisiSintattica`Private`displayFirst[AnalisiSintattica`Private`g_] := *)
(*     Grid[AnalisiSintattica`Private`g, Frame -> All, *)
(*      Background -> {White, White}, ItemStyle -> {Automatic}, *)
(*      ItemSize -> {{2, {2}}}, BaseStyle -> {Bold}*Editable -> False], *)
(*    AnalisiSintattica`Private`displayFollow[AnalisiSintattica`Private`g_] := *)
(*     Grid[AnalisiSintattica`Private`g, Frame -> All, *)
(*      Background -> {White, White}, ItemStyle -> {Automatic}, *)
(*      ItemSize -> {{2, {2}}}, BaseStyle -> {Bold}*Editable -> False], *)
(*    AnalisiSintattica`Private`displayTable[AnalisiSintattica`Private`g_, *)
(*      AnalisiSintattica`Private`cursor_:0] := *)
(*     Grid[AnalisiSintattica`Private`g, *)
(*      Frame -> If[MatchQ[AnalisiSintattica`Private`xy[*)
(*          AnalisiSintattica`Private`cursor], _Integer], All, *)
(*        {All, All, {AnalisiSintattica`Private`xy[*)
(*            AnalisiSintattica`Private`cursor] -> {Thick, Blue}}}], *)
(*      Background -> {White, White}, ItemStyle -> {Automatic}, *)
(*      ItemSize -> {{3, {4}}}, BaseStyle -> {Bold}, Editable -> False], *)
(*    AnalisiSintattica`Private`xy[AnalisiSintattica`Private`n_] := *)
(*     {AnalisiSintattica`Private`row[AnalisiSintattica`Private`n], *)
(*      AnalisiSintattica`Private`col[AnalisiSintattica`Private`n]}, *)
(*    AnalisiSintattica`Private`row[AnalisiSintattica`Private`n_] := *)
(*     Quotient[AnalisiSintattica`Private`n - 1, *)
(*       AnalisiSintattica`Private`cols] + 1, *)
(*    AnalisiSintattica`Private`col[AnalisiSintattica`Private`n_] := *)
(*     Mod[AnalisiSintattica`Private`n - 1, AnalisiSintattica`Private`cols] + *)
(*      1, AnalisiSintattica`Private`loc[{AnalisiSintattica`Private`x_, *)
(*       AnalisiSintattica`Private`y_}] := *)
(*     1 + Floor[AnalisiSintattica`Private`cols*AnalisiSintattica`Private`x] + *)
(*      AnalisiSintattica`Private`cols*Floor[(1 - AnalisiSintattica`Private`y)**)
(*         AnalisiSintattica`Private`rows], *)
(*    AnalisiSintattica`Private`nullable = {{"A", True}, {"B", True}, *)
(*      {"C", True}, {"D", True}}, AnalisiSintattica`Private`displayFirstSln[*)
(*      AnalisiSintattica`Private`g_] := AnalisiSintattica`Private`displayFirst[*)
(*      AnalisiSintattica`Private`g], *)
(*    AnalisiSintattica`Private`displayFollowSln[*)
(*      AnalisiSintattica`Private`g_] := *)
(*     AnalisiSintattica`Private`displayFollow[AnalisiSintattica`Private`g], *)
(*    AnalisiSintattica`Private`displayTableSln[*)
(*      AnalisiSintattica`Private`g_] := AnalisiSintattica`Private`displayTable[*)
(*      AnalisiSintattica`Private`g, 0]}]*)


(* ::Output:: *)
(*Manipulate[Grid[{{Column[{Style["ANALISI SINTATTICA", Bold], *)
(*       Style["ESERCIZIO DI GRAMMATICA N\[Degree]:", Bold], Style["Generare gli \*)
(*insiemi Nullable, First e Follow per la seguente grammatica", Bold]}, *)
(*      Alignment -> Left]}, *)
(*    {Column[{Row[{Button["Nuova grammatica", *)
(*          (AnalisiSintattica`Private`cursor = 0; Spacer[5]; *)
(*            AnalisiSintattica`Private`showSolution = False; *)
(*            AnalisiSintattica`Private`soluzione = *)
(*             AnalisiSintattica`Private`grammar; *)
(*            AnalisiSintattica`Private`emptyGrammar = *)
(*             AnalisiSintattica`Private`createEmptyGrammar[*)
(*              AnalisiSintattica`Private`soluzione]; ) & ], *)
(*         DynamicModule[{AnalisiSintattica`Private`numero = ""}, *)
(*          Panel[Column[{Row[{Style["Genera esercizio n\[Degree]: ", Bold], *)
(*               InputField[Dynamic[AnalisiSintattica`Private`numero], *)
(*                Number]}], Dynamic[AnalisiSintattica`Private`numero]; }]]]}], *)
(*       " ", Row[{Column[{Style["Grammatica", Bold], *)
(*           Grid[List /@ AnalisiSintattica`Private`listaProduzioni, *)
(*            Frame -> All, Background -> {White, White}, ItemStyle -> *)
(*             {Automatic}, ItemSize -> {{8, {8}}}, BaseStyle -> *)
(*             {Bold}*Editable -> False]}, Alignment -> Left]}], " ", *)
(*       Row[{Column[{Style["NULLABLE", Bold], TabView[*)
(*            Table[AnalisiSintattica`Private`tmp[[*)
(*               AnalisiSintattica`Private`i]] -> PopupMenu[" ", {*)
(*                AnalisiSintattica`Private`TRUE, *)
(*                AnalisiSintattica`Private`FALSE}], *)
(*             {AnalisiSintattica`Private`i, 1, Length[*)
(*               AnalisiSintattica`Private`tmp]}]]}, Alignment -> Left], " "}], *)
(*       " ", Row[{Column[{Style["FIRST", Bold], Framed["Dato un non terminale \*)
(*(ad esempio A,B), il suo insieme First \[EGrave] composto dai simboli terminali \*)
(*(compreso \[Epsilon]) che possono apparire come carattere iniziale di una stringa \*)
(*derivata da una sua produzione.", FrameStyle -> Directive[Black, Thin], *)
(*            ImageSize -> {400, 100}], AnalisiSintattica`Private`displayFirst[*)
(*            AnalisiSintattica`Private`emptyCheckboxGrammar]}, *)
(*          Alignment -> Left]}], Row[{Column[{Style["FOLLOW", Bold], *)
(*           AnalisiSintattica`Private`displayFollow[*)
(*            AnalisiSintattica`Private`emptyCheckboxGrammar]}, *)
(*          Alignment -> Left]}], *)
(*       Row[{Column[{Style["TABELLA PRODUZIONI", Bold], EventHandler[*)
(*            Dynamic[AnalisiSintattica`Private`displayTable[*)
(*              AnalisiSintattica`Private`emptyGrammar, *)
(*              AnalisiSintattica`Private`cursor]], "MouseClicked" :> *)
(*             If[MemberQ[Range[1, AnalisiSintattica`Private`rows**)
(*                  AnalisiSintattica`Private`cols, *)
(*                 AnalisiSintattica`Private`cols], *)
(*                AnalisiSintattica`Private`loc[MousePosition[*)
(*                  "EventHandlerScaled"]]] || MemberQ[Range[1, *)
(*                 AnalisiSintattica`Private`cols], *)
(*                AnalisiSintattica`Private`loc[MousePosition[*)
(*                  "EventHandlerScaled"]]], AnalisiSintattica`Private`cursor = *)
(*               -1, AnalisiSintattica`Private`cursor = *)
(*               AnalisiSintattica`Private`loc[MousePosition[*)
(*                 "EventHandlerScaled"]]]], *)
(*           Row[Table[With[{AnalisiSintattica`Private`i$ = *)
(*                AnalisiSintattica`Private`i}, Button[*)
(*               AnalisiSintattica`Private`listaProduzioni[[*)
(*                AnalisiSintattica`Private`i$]], *)
(*               AnalisiSintattica`Private`emptyGrammar[[*)
(*                  AnalisiSintattica`Private`xy[*)
(*                    AnalisiSintattica`Private`cursor][[1]],*)
(*                  AnalisiSintattica`Private`xy[*)
(*                    AnalisiSintattica`Private`cursor][[2]]]] = *)
(*                 AnalisiSintattica`Private`listaProduzioni[[*)
(*                  AnalisiSintattica`Private`i$]]; *)
(*                If[AnalisiSintattica`Private`soluzione[[*)
(*                   AnalisiSintattica`Private`xy[*)
(*                     AnalisiSintattica`Private`cursor][[1]],*)
(*                   AnalisiSintattica`Private`xy[*)
(*                     AnalisiSintattica`Private`cursor][[2]]]] != *)
(*                  AnalisiSintattica`Private`emptyGrammar[[*)
(*                   AnalisiSintattica`Private`xy[*)
(*                     AnalisiSintattica`Private`cursor][[1]],*)
(*                   AnalisiSintattica`Private`xy[*)
(*                     AnalisiSintattica`Private`cursor][[2]]]], Beep[]]]], *)
(*             {AnalisiSintattica`Private`i, 1, Length[*)
(*               AnalisiSintattica`Private`listaProduzioni]}], Spacer[0.5]], *)
(*           Row[{Button["Clear", AnalisiSintattica`Private`emptyGrammar[[*)
(*                AnalisiSintattica`Private`xy[*)
(*                  AnalisiSintattica`Private`cursor][[1]],*)
(*                AnalisiSintattica`Private`xy[*)
(*                  AnalisiSintattica`Private`cursor][[2]]]] = " "], *)
(*             Button["Clear All", Table[*)
(*               AnalisiSintattica`Private`emptyGrammar[[*)
(*                 AnalisiSintattica`Private`i,AnalisiSintattica`Private`j]] = *)
(*                " ", {AnalisiSintattica`Private`i, 2, *)
(*                AnalisiSintattica`Private`rows}, {*)
(*                AnalisiSintattica`Private`j, 2, *)
(*                AnalisiSintattica`Private`cols}]]}]}]}], *)
(*       If[AnalisiSintattica`Private`showNullable, *)
(*        Column[{Style["Mostra Nullable", Bold], *)
(*          TabView[Table[AnalisiSintattica`Private`tmp[[*)
(*              AnalisiSintattica`Private`i]] -> *)
(*             AnalisiSintattica`Private`nullable[[AnalisiSintattica`Private`i,*)
(*              2]], {AnalisiSintattica`Private`i, 1, *)
(*             Length[AnalisiSintattica`Private`tmp]}]]}, Alignment -> Right], *)
(*        " "], If[AnalisiSintattica`Private`showFirst, *)
(*        Column[{Style["Mostra First", Bold], *)
(*          AnalisiSintattica`Private`displayFirstSln[*)
(*           AnalisiSintattica`Private`emptyCheckboxGrammar]}, *)
(*         Alignment -> Right], ""], If[AnalisiSintattica`Private`showFollow, *)
(*        Column[{Style["Mostra First", Bold], *)
(*          AnalisiSintattica`Private`displayFollowSln[*)
(*           AnalisiSintattica`Private`emptyCheckboxGrammar]}, *)
(*         Alignment -> Right], ""], If[AnalisiSintattica`Private`showSolution, *)
(*        Row[{AnalisiSintattica`Private`displayTableSln[*)
(*           AnalisiSintattica`Private`soluzione]}], ""]}, Alignment -> Left], *)
(*     " "}}, Editable -> False], {{AnalisiSintattica`Private`soluzione, *)
(*    {{" ", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "$"}, *)
(*     {"A", "A->Bab", " ", "A->Bab", "A->Bab", "A->Bab", "A->C", "A->C", *)
(*      "A->C", " ", " ", " ", " ", " "}, {"B", "B->\[Epsilon]", " ", "B->cD", "B->d", *)
(*      "B->e", " ", " ", " ", " ", " ", " ", " ", " "}, *)
(*     {"C", " ", " ", " ", " ", " ", "C->f", "C->g", "C->h", " ", " ", " ", *)
(*      " ", "C->\[Epsilon]"}, {"D", "D->\[Epsilon]", " ", " ", " ", " ", " ", " ", " ", " ", *)
(*      "D->jik", " ", " ", " "}}}, ControlType -> None}, *)
(*  {{AnalisiSintattica`Private`emptyGrammar, *)
(*    {{" ", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "$"}, *)
(*     {"A", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "}, *)
(*     {"B", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "}, *)
(*     {"C", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "}, *)
(*     {"D", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", *)
(*      " "}}}, ControlType -> None}, *)
(*  {{AnalisiSintattica`Private`emptyCheckboxGrammar, *)
(*    {{" ", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "$"}, *)
(*     {"A", Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], *)
(*      Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], *)
(*      Checkbox[], Checkbox[]}, {"B", Checkbox[], Checkbox[], Checkbox[], *)
(*      Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], *)
(*      Checkbox[], Checkbox[], Checkbox[], Checkbox[]}, *)
(*     {"C", Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], *)
(*      Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], *)
(*      Checkbox[], Checkbox[]}, {"D", Checkbox[], Checkbox[], Checkbox[], *)
(*      Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], *)
(*      Checkbox[], Checkbox[], Checkbox[], Checkbox[]}}}, *)
(*   ControlType -> None}, {{AnalisiSintattica`Private`cursor, 0}, *)
(*   ControlType -> None}, {{AnalisiSintattica`Private`showNullable, False, *)
(*    "Mostra Nullable"}, {True, False}}, *)
(*  {{AnalisiSintattica`Private`showFirst, False, "Mostra First"}, *)
(*   {True, False}}, {{AnalisiSintattica`Private`showFollow, False, *)
(*    "Mostra Follow"}, {True, False}}, *)
(*  {{AnalisiSintattica`Private`showSolution, False, "show solution"}, *)
(*   {True, False}}, ContentSize -> {900, 900}, *)
(*  Initialization :> {AnalisiSintattica`Private`soluzione = *)
(*     {{" ", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "$"}, *)
(*      {"A", "A->Bab", " ", "A->Bab", "A->Bab", "A->Bab", "A->C", "A->C", *)
(*       "A->C", " ", " ", " ", " ", " "}, {"B", "B->\[Epsilon]", " ", "B->cD", "B->d", *)
(*       "B->e", " ", " ", " ", " ", " ", " ", " ", " "}, *)
(*      {"C", " ", " ", " ", " ", " ", "C->f", "C->g", "C->h", " ", " ", " ", *)
(*       " ", "C->\[Epsilon]"}, {"D", "D->\[Epsilon]", " ", " ", " ", " ", " ", " ", " ", " ", *)
(*       "D->jik", " ", " ", " "}}, AnalisiSintattica`Private`grammar = *)
(*     {{" ", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "$"}, *)
(*      {"A", "A->Bab", " ", "A->Bab", "A->Bab", "A->Bab", "A->C", "A->C", *)
(*       "A->C", " ", " ", " ", " ", " "}, {"B", "B->\[Epsilon]", " ", "B->cD", "B->d", *)
(*       "B->e", " ", " ", " ", " ", " ", " ", " ", " "}, *)
(*      {"C", " ", " ", " ", " ", " ", "C->f", "C->g", "C->h", " ", " ", " ", *)
(*       " ", "C->\[Epsilon]"}, {"D", "D->\[Epsilon]", " ", " ", " ", " ", " ", " ", " ", " ", *)
(*       "D->jik", " ", " ", " "}}, *)
(*    AnalisiSintattica`Private`createEmptyGrammar[*)
(*      AnalisiSintattica`Private`sln_] := *)
(*     Module[{AnalisiSintattica`Private`copy = AnalisiSintattica`Private`sln}, *)
(*      Table[If[AnalisiSintattica`Private`i > 1 && *)
(*          AnalisiSintattica`Private`j > 1, AnalisiSintattica`Private`copy[[*)
(*           AnalisiSintattica`Private`i,AnalisiSintattica`Private`j]] = " "], *)
(*        {AnalisiSintattica`Private`i, AnalisiSintattica`Private`rows}, *)
(*        {AnalisiSintattica`Private`j, AnalisiSintattica`Private`cols}]; *)
(*       AnalisiSintattica`Private`copy], AnalisiSintattica`Private`i = 5, *)
(*    AnalisiSintattica`Private`j = 3, AnalisiSintattica`Private`rows = 5, *)
(*    AnalisiSintattica`Private`cols = 14, *)
(*    AnalisiSintattica`Private`listaProduzioni = {"A->C", "A->Bab", "B->cD", *)
(*      "B->d", "B->e", "B->\[Epsilon]", "C->h", "C->g", "C->f", "C->\[Epsilon]", "D->jik", *)
(*      "D->\[Epsilon]"}, AnalisiSintattica`Private`tmp = {"A", "B", "C", "D"}, *)
(*    AnalisiSintattica`Private`displayFirst[AnalisiSintattica`Private`g_] := *)
(*     Grid[AnalisiSintattica`Private`g, Frame -> All, *)
(*      Background -> {White, White}, ItemStyle -> {Automatic}, *)
(*      ItemSize -> {{2, {2}}}, BaseStyle -> {Bold}*Editable -> False], *)
(*    AnalisiSintattica`Private`displayFollow[AnalisiSintattica`Private`g_] := *)
(*     Grid[AnalisiSintattica`Private`g, Frame -> All, *)
(*      Background -> {White, White}, ItemStyle -> {Automatic}, *)
(*      ItemSize -> {{2, {2}}}, BaseStyle -> {Bold}*Editable -> False], *)
(*    AnalisiSintattica`Private`displayTable[AnalisiSintattica`Private`g_, *)
(*      AnalisiSintattica`Private`cursor_:0] := *)
(*     Grid[AnalisiSintattica`Private`g, *)
(*      Frame -> If[MatchQ[AnalisiSintattica`Private`xy[*)
(*          AnalisiSintattica`Private`cursor], _Integer], All, *)
(*        {All, All, {AnalisiSintattica`Private`xy[*)
(*            AnalisiSintattica`Private`cursor] -> {Thick, Blue}}}], *)
(*      Background -> {White, White}, ItemStyle -> {Automatic}, *)
(*      ItemSize -> {{3, {4}}}, BaseStyle -> {Bold}, Editable -> False], *)
(*    AnalisiSintattica`Private`xy[AnalisiSintattica`Private`n_] := *)
(*     {AnalisiSintattica`Private`row[AnalisiSintattica`Private`n], *)
(*      AnalisiSintattica`Private`col[AnalisiSintattica`Private`n]}, *)
(*    AnalisiSintattica`Private`row[AnalisiSintattica`Private`n_] := *)
(*     Quotient[AnalisiSintattica`Private`n - 1, *)
(*       AnalisiSintattica`Private`cols] + 1, *)
(*    AnalisiSintattica`Private`col[AnalisiSintattica`Private`n_] := *)
(*     Mod[AnalisiSintattica`Private`n - 1, AnalisiSintattica`Private`cols] + *)
(*      1, AnalisiSintattica`Private`loc[{AnalisiSintattica`Private`x_, *)
(*       AnalisiSintattica`Private`y_}] := *)
(*     1 + Floor[AnalisiSintattica`Private`cols*AnalisiSintattica`Private`x] + *)
(*      AnalisiSintattica`Private`cols*Floor[(1 - AnalisiSintattica`Private`y)**)
(*         AnalisiSintattica`Private`rows], *)
(*    AnalisiSintattica`Private`nullable = {{"A", True}, {"B", True}, *)
(*      {"C", True}, {"D", True}}, AnalisiSintattica`Private`displayFirstSln[*)
(*      AnalisiSintattica`Private`g_] := AnalisiSintattica`Private`displayFirst[*)
(*      AnalisiSintattica`Private`g], *)
(*    AnalisiSintattica`Private`displayFollowSln[*)
(*      AnalisiSintattica`Private`g_] := *)
(*     AnalisiSintattica`Private`displayFollow[AnalisiSintattica`Private`g], *)
(*    AnalisiSintattica`Private`displayTableSln[*)
(*      AnalisiSintattica`Private`g_] := AnalisiSintattica`Private`displayTable[*)
(*      AnalisiSintattica`Private`g, 0]}]*)


(* ::Output:: *)
(*Manipulate[Grid[{{Column[{Style["ANALISI SINTATTICA", Bold], *)
(*       Style["ESERCIZIO DI GRAMMATICA N\[Degree]:", Bold], Style["Generare gli \*)
(*insiemi Nullable, First e Follow per la seguente grammatica", Bold]}, *)
(*      Alignment -> Left]}, *)
(*    {Column[{Row[{Button["Nuova grammatica", *)
(*          (AnalisiSintattica`Private`cursor = 0; Spacer[5]; *)
(*            AnalisiSintattica`Private`showSolution = False; *)
(*            AnalisiSintattica`Private`soluzione = *)
(*             AnalisiSintattica`Private`grammar; *)
(*            AnalisiSintattica`Private`emptyGrammar = *)
(*             AnalisiSintattica`Private`createEmptyGrammar[*)
(*              AnalisiSintattica`Private`soluzione]; ) & ], *)
(*         DynamicModule[{AnalisiSintattica`Private`numero = ""}, *)
(*          Panel[Column[{Row[{Style["Genera esercizio n\[Degree]: ", Bold], *)
(*               InputField[Dynamic[AnalisiSintattica`Private`numero], *)
(*                Number]}], Dynamic[AnalisiSintattica`Private`numero]; }]]]}], *)
(*       " ", Row[{Column[{Style["Grammatica", Bold], *)
(*           Grid[List /@ AnalisiSintattica`Private`listaProduzioni, *)
(*            Frame -> All, Background -> {White, White}, ItemStyle -> *)
(*             {Automatic}, ItemSize -> {{8, {8}}}, BaseStyle -> *)
(*             {Bold}*Editable -> False]}, Alignment -> Left]}], " ", *)
(*       Row[{Column[{Style["NULLABLE", Bold], TabView[*)
(*            Table[AnalisiSintattica`Private`tmp[[*)
(*               AnalisiSintattica`Private`i]] -> PopupMenu[" ", {*)
(*                AnalisiSintattica`Private`TRUE, *)
(*                AnalisiSintattica`Private`FALSE}], *)
(*             {AnalisiSintattica`Private`i, 1, Length[*)
(*               AnalisiSintattica`Private`tmp]}]]}, Alignment -> Left], " "}], *)
(*       " ", Row[{Column[{Style["FIRST", Bold], Framed["Dato un non terminale \*)
(*(ad esempio A,B), il suo insieme First \[EGrave] composto dai simboli terminali \*)
(*(compreso \[Epsilon]) che possono apparire come carattere iniziale di una stringa \*)
(*derivata da una sua produzione.", FrameStyle -> Directive[Black, Thin], *)
(*            ImageSize -> {200, 100}], AnalisiSintattica`Private`displayFirst[*)
(*            AnalisiSintattica`Private`emptyCheckboxGrammar]}, *)
(*          Alignment -> Left]}], Row[{Column[{Style["FOLLOW", Bold], *)
(*           AnalisiSintattica`Private`displayFollow[*)
(*            AnalisiSintattica`Private`emptyCheckboxGrammar]}, *)
(*          Alignment -> Left]}], *)
(*       Row[{Column[{Style["TABELLA PRODUZIONI", Bold], EventHandler[*)
(*            Dynamic[AnalisiSintattica`Private`displayTable[*)
(*              AnalisiSintattica`Private`emptyGrammar, *)
(*              AnalisiSintattica`Private`cursor]], "MouseClicked" :> *)
(*             If[MemberQ[Range[1, AnalisiSintattica`Private`rows**)
(*                  AnalisiSintattica`Private`cols, *)
(*                 AnalisiSintattica`Private`cols], *)
(*                AnalisiSintattica`Private`loc[MousePosition[*)
(*                  "EventHandlerScaled"]]] || MemberQ[Range[1, *)
(*                 AnalisiSintattica`Private`cols], *)
(*                AnalisiSintattica`Private`loc[MousePosition[*)
(*                  "EventHandlerScaled"]]], AnalisiSintattica`Private`cursor = *)
(*               -1, AnalisiSintattica`Private`cursor = *)
(*               AnalisiSintattica`Private`loc[MousePosition[*)
(*                 "EventHandlerScaled"]]]], *)
(*           Row[Table[With[{AnalisiSintattica`Private`i$ = *)
(*                AnalisiSintattica`Private`i}, Button[*)
(*               AnalisiSintattica`Private`listaProduzioni[[*)
(*                AnalisiSintattica`Private`i$]], *)
(*               AnalisiSintattica`Private`emptyGrammar[[*)
(*                  AnalisiSintattica`Private`xy[*)
(*                    AnalisiSintattica`Private`cursor][[1]],*)
(*                  AnalisiSintattica`Private`xy[*)
(*                    AnalisiSintattica`Private`cursor][[2]]]] = *)
(*                 AnalisiSintattica`Private`listaProduzioni[[*)
(*                  AnalisiSintattica`Private`i$]]; *)
(*                If[AnalisiSintattica`Private`soluzione[[*)
(*                   AnalisiSintattica`Private`xy[*)
(*                     AnalisiSintattica`Private`cursor][[1]],*)
(*                   AnalisiSintattica`Private`xy[*)
(*                     AnalisiSintattica`Private`cursor][[2]]]] != *)
(*                  AnalisiSintattica`Private`emptyGrammar[[*)
(*                   AnalisiSintattica`Private`xy[*)
(*                     AnalisiSintattica`Private`cursor][[1]],*)
(*                   AnalisiSintattica`Private`xy[*)
(*                     AnalisiSintattica`Private`cursor][[2]]]], Beep[]]]], *)
(*             {AnalisiSintattica`Private`i, 1, Length[*)
(*               AnalisiSintattica`Private`listaProduzioni]}], Spacer[0.5]], *)
(*           Row[{Button["Clear", AnalisiSintattica`Private`emptyGrammar[[*)
(*                AnalisiSintattica`Private`xy[*)
(*                  AnalisiSintattica`Private`cursor][[1]],*)
(*                AnalisiSintattica`Private`xy[*)
(*                  AnalisiSintattica`Private`cursor][[2]]]] = " "], *)
(*             Button["Clear All", Table[*)
(*               AnalisiSintattica`Private`emptyGrammar[[*)
(*                 AnalisiSintattica`Private`i,AnalisiSintattica`Private`j]] = *)
(*                " ", {AnalisiSintattica`Private`i, 2, *)
(*                AnalisiSintattica`Private`rows}, {*)
(*                AnalisiSintattica`Private`j, 2, *)
(*                AnalisiSintattica`Private`cols}]]}]}]}], *)
(*       If[AnalisiSintattica`Private`showNullable, *)
(*        Column[{Style["Mostra Nullable", Bold], *)
(*          TabView[Table[AnalisiSintattica`Private`tmp[[*)
(*              AnalisiSintattica`Private`i]] -> *)
(*             AnalisiSintattica`Private`nullable[[AnalisiSintattica`Private`i,*)
(*              2]], {AnalisiSintattica`Private`i, 1, *)
(*             Length[AnalisiSintattica`Private`tmp]}]]}, Alignment -> Right], *)
(*        " "], If[AnalisiSintattica`Private`showFirst, *)
(*        Column[{Style["Mostra First", Bold], *)
(*          AnalisiSintattica`Private`displayFirstSln[*)
(*           AnalisiSintattica`Private`emptyCheckboxGrammar]}, *)
(*         Alignment -> Right], ""], If[AnalisiSintattica`Private`showFollow, *)
(*        Column[{Style["Mostra First", Bold], *)
(*          AnalisiSintattica`Private`displayFollowSln[*)
(*           AnalisiSintattica`Private`emptyCheckboxGrammar]}, *)
(*         Alignment -> Right], ""], If[AnalisiSintattica`Private`showSolution, *)
(*        Row[{AnalisiSintattica`Private`displayTableSln[*)
(*           AnalisiSintattica`Private`soluzione]}], ""]}, Alignment -> Left], *)
(*     " "}}, Editable -> False], {{AnalisiSintattica`Private`soluzione, *)
(*    {{" ", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "$"}, *)
(*     {"A", "A->Bab", " ", "A->Bab", "A->Bab", "A->Bab", "A->C", "A->C", *)
(*      "A->C", " ", " ", " ", " ", " "}, {"B", "B->\[Epsilon]", " ", "B->cD", "B->d", *)
(*      "B->e", " ", " ", " ", " ", " ", " ", " ", " "}, *)
(*     {"C", " ", " ", " ", " ", " ", "C->f", "C->g", "C->h", " ", " ", " ", *)
(*      " ", "C->\[Epsilon]"}, {"D", "D->\[Epsilon]", " ", " ", " ", " ", " ", " ", " ", " ", *)
(*      "D->jik", " ", " ", " "}}}, ControlType -> None}, *)
(*  {{AnalisiSintattica`Private`emptyGrammar, *)
(*    {{" ", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "$"}, *)
(*     {"A", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "}, *)
(*     {"B", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "}, *)
(*     {"C", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "}, *)
(*     {"D", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", *)
(*      " "}}}, ControlType -> None}, *)
(*  {{AnalisiSintattica`Private`emptyCheckboxGrammar, *)
(*    {{" ", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "$"}, *)
(*     {"A", Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], *)
(*      Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], *)
(*      Checkbox[], Checkbox[]}, {"B", Checkbox[], Checkbox[], Checkbox[], *)
(*      Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], *)
(*      Checkbox[], Checkbox[], Checkbox[], Checkbox[]}, *)
(*     {"C", Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], *)
(*      Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], *)
(*      Checkbox[], Checkbox[]}, {"D", Checkbox[], Checkbox[], Checkbox[], *)
(*      Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], *)
(*      Checkbox[], Checkbox[], Checkbox[], Checkbox[]}}}, *)
(*   ControlType -> None}, {{AnalisiSintattica`Private`cursor, 0}, *)
(*   ControlType -> None}, {{AnalisiSintattica`Private`showNullable, False, *)
(*    "Mostra Nullable"}, {True, False}}, *)
(*  {{AnalisiSintattica`Private`showFirst, False, "Mostra First"}, *)
(*   {True, False}}, {{AnalisiSintattica`Private`showFollow, False, *)
(*    "Mostra Follow"}, {True, False}}, *)
(*  {{AnalisiSintattica`Private`showSolution, False, "show solution"}, *)
(*   {True, False}}, ContentSize -> {900, 900}, *)
(*  Initialization :> {AnalisiSintattica`Private`soluzione = *)
(*     {{" ", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "$"}, *)
(*      {"A", "A->Bab", " ", "A->Bab", "A->Bab", "A->Bab", "A->C", "A->C", *)
(*       "A->C", " ", " ", " ", " ", " "}, {"B", "B->\[Epsilon]", " ", "B->cD", "B->d", *)
(*       "B->e", " ", " ", " ", " ", " ", " ", " ", " "}, *)
(*      {"C", " ", " ", " ", " ", " ", "C->f", "C->g", "C->h", " ", " ", " ", *)
(*       " ", "C->\[Epsilon]"}, {"D", "D->\[Epsilon]", " ", " ", " ", " ", " ", " ", " ", " ", *)
(*       "D->jik", " ", " ", " "}}, AnalisiSintattica`Private`grammar = *)
(*     {{" ", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "$"}, *)
(*      {"A", "A->Bab", " ", "A->Bab", "A->Bab", "A->Bab", "A->C", "A->C", *)
(*       "A->C", " ", " ", " ", " ", " "}, {"B", "B->\[Epsilon]", " ", "B->cD", "B->d", *)
(*       "B->e", " ", " ", " ", " ", " ", " ", " ", " "}, *)
(*      {"C", " ", " ", " ", " ", " ", "C->f", "C->g", "C->h", " ", " ", " ", *)
(*       " ", "C->\[Epsilon]"}, {"D", "D->\[Epsilon]", " ", " ", " ", " ", " ", " ", " ", " ", *)
(*       "D->jik", " ", " ", " "}}, *)
(*    AnalisiSintattica`Private`createEmptyGrammar[*)
(*      AnalisiSintattica`Private`sln_] := *)
(*     Module[{AnalisiSintattica`Private`copy = AnalisiSintattica`Private`sln}, *)
(*      Table[If[AnalisiSintattica`Private`i > 1 && *)
(*          AnalisiSintattica`Private`j > 1, AnalisiSintattica`Private`copy[[*)
(*           AnalisiSintattica`Private`i,AnalisiSintattica`Private`j]] = " "], *)
(*        {AnalisiSintattica`Private`i, AnalisiSintattica`Private`rows}, *)
(*        {AnalisiSintattica`Private`j, AnalisiSintattica`Private`cols}]; *)
(*       AnalisiSintattica`Private`copy], AnalisiSintattica`Private`i = 5, *)
(*    AnalisiSintattica`Private`j = 3, AnalisiSintattica`Private`rows = 5, *)
(*    AnalisiSintattica`Private`cols = 14, *)
(*    AnalisiSintattica`Private`listaProduzioni = {"A->C", "A->Bab", "B->cD", *)
(*      "B->d", "B->e", "B->\[Epsilon]", "C->h", "C->g", "C->f", "C->\[Epsilon]", "D->jik", *)
(*      "D->\[Epsilon]"}, AnalisiSintattica`Private`tmp = {"A", "B", "C", "D"}, *)
(*    AnalisiSintattica`Private`displayFirst[AnalisiSintattica`Private`g_] := *)
(*     Grid[AnalisiSintattica`Private`g, Frame -> All, *)
(*      Background -> {White, White}, ItemStyle -> {Automatic}, *)
(*      ItemSize -> {{2, {2}}}, BaseStyle -> {Bold}*Editable -> False], *)
(*    AnalisiSintattica`Private`displayFollow[AnalisiSintattica`Private`g_] := *)
(*     Grid[AnalisiSintattica`Private`g, Frame -> All, *)
(*      Background -> {White, White}, ItemStyle -> {Automatic}, *)
(*      ItemSize -> {{2, {2}}}, BaseStyle -> {Bold}*Editable -> False], *)
(*    AnalisiSintattica`Private`displayTable[AnalisiSintattica`Private`g_, *)
(*      AnalisiSintattica`Private`cursor_:0] := *)
(*     Grid[AnalisiSintattica`Private`g, *)
(*      Frame -> If[MatchQ[AnalisiSintattica`Private`xy[*)
(*          AnalisiSintattica`Private`cursor], _Integer], All, *)
(*        {All, All, {AnalisiSintattica`Private`xy[*)
(*            AnalisiSintattica`Private`cursor] -> {Thick, Blue}}}], *)
(*      Background -> {White, White}, ItemStyle -> {Automatic}, *)
(*      ItemSize -> {{3, {4}}}, BaseStyle -> {Bold}, Editable -> False], *)
(*    AnalisiSintattica`Private`xy[AnalisiSintattica`Private`n_] := *)
(*     {AnalisiSintattica`Private`row[AnalisiSintattica`Private`n], *)
(*      AnalisiSintattica`Private`col[AnalisiSintattica`Private`n]}, *)
(*    AnalisiSintattica`Private`row[AnalisiSintattica`Private`n_] := *)
(*     Quotient[AnalisiSintattica`Private`n - 1, *)
(*       AnalisiSintattica`Private`cols] + 1, *)
(*    AnalisiSintattica`Private`col[AnalisiSintattica`Private`n_] := *)
(*     Mod[AnalisiSintattica`Private`n - 1, AnalisiSintattica`Private`cols] + *)
(*      1, AnalisiSintattica`Private`loc[{AnalisiSintattica`Private`x_, *)
(*       AnalisiSintattica`Private`y_}] := *)
(*     1 + Floor[AnalisiSintattica`Private`cols*AnalisiSintattica`Private`x] + *)
(*      AnalisiSintattica`Private`cols*Floor[(1 - AnalisiSintattica`Private`y)**)
(*         AnalisiSintattica`Private`rows], *)
(*    AnalisiSintattica`Private`nullable = {{"A", True}, {"B", True}, *)
(*      {"C", True}, {"D", True}}, AnalisiSintattica`Private`displayFirstSln[*)
(*      AnalisiSintattica`Private`g_] := AnalisiSintattica`Private`displayFirst[*)
(*      AnalisiSintattica`Private`g], *)
(*    AnalisiSintattica`Private`displayFollowSln[*)
(*      AnalisiSintattica`Private`g_] := *)
(*     AnalisiSintattica`Private`displayFollow[AnalisiSintattica`Private`g], *)
(*    AnalisiSintattica`Private`displayTableSln[*)
(*      AnalisiSintattica`Private`g_] := AnalisiSintattica`Private`displayTable[*)
(*      AnalisiSintattica`Private`g, 0]}]*)


(* ::Output:: *)
(*Manipulate[Grid[{{Column[{Style["ANALISI SINTATTICA", Bold], *)
(*       Style["ESERCIZIO DI GRAMMATICA N\[Degree]:", Bold], Style["Generare gli \*)
(*insiemi Nullable, First e Follow per la seguente grammatica", Bold]}, *)
(*      Alignment -> Left]}, *)
(*    {Column[{Row[{Button["Nuova grammatica", *)
(*          (AnalisiSintattica`Private`cursor = 0; Spacer[5]; *)
(*            AnalisiSintattica`Private`showSolution = False; *)
(*            AnalisiSintattica`Private`soluzione = *)
(*             AnalisiSintattica`Private`grammar; *)
(*            AnalisiSintattica`Private`emptyGrammar = *)
(*             AnalisiSintattica`Private`createEmptyGrammar[*)
(*              AnalisiSintattica`Private`soluzione]; ) & ], *)
(*         DynamicModule[{AnalisiSintattica`Private`numero = ""}, *)
(*          Panel[Column[{Row[{Style["Genera esercizio n\[Degree]: ", Bold], *)
(*               InputField[Dynamic[AnalisiSintattica`Private`numero], *)
(*                Number]}], Dynamic[AnalisiSintattica`Private`numero]; }]]]}], *)
(*       " ", Row[{Column[{Style["Grammatica", Bold], *)
(*           Grid[List /@ AnalisiSintattica`Private`listaProduzioni, *)
(*            Frame -> All, Background -> {White, White}, ItemStyle -> *)
(*             {Automatic}, ItemSize -> {{8, {8}}}, BaseStyle -> *)
(*             {Bold}*Editable -> False]}, Alignment -> Left]}], " ", *)
(*       Row[{Column[{Style["NULLABLE", Bold], TabView[*)
(*            Table[AnalisiSintattica`Private`tmp[[*)
(*               AnalisiSintattica`Private`i]] -> PopupMenu[" ", {*)
(*                AnalisiSintattica`Private`TRUE, *)
(*                AnalisiSintattica`Private`FALSE}], *)
(*             {AnalisiSintattica`Private`i, 1, Length[*)
(*               AnalisiSintattica`Private`tmp]}]]}, Alignment -> Left], " "}], *)
(*       " ", Row[{Column[{Style["FIRST", Bold], Framed["Dato un non terminale \*)
(*(ad esempio A,B), il suo insieme First \[EGrave] composto dai simboli terminali \*)
(*(compreso \[Epsilon]) che possono apparire come carattere iniziale di una stringa \*)
(*derivata da una sua produzione.", FrameStyle -> Directive[Red, Thick]], *)
(*           AnalisiSintattica`Private`displayFirst[*)
(*            AnalisiSintattica`Private`emptyCheckboxGrammar]}, *)
(*          Alignment -> Left]}], Row[{Column[{Style["FOLLOW", Bold], *)
(*           AnalisiSintattica`Private`displayFollow[*)
(*            AnalisiSintattica`Private`emptyCheckboxGrammar]}, *)
(*          Alignment -> Left]}], *)
(*       Row[{Column[{Style["TABELLA PRODUZIONI", Bold], EventHandler[*)
(*            Dynamic[AnalisiSintattica`Private`displayTable[*)
(*              AnalisiSintattica`Private`emptyGrammar, *)
(*              AnalisiSintattica`Private`cursor]], "MouseClicked" :> *)
(*             If[MemberQ[Range[1, AnalisiSintattica`Private`rows**)
(*                  AnalisiSintattica`Private`cols, *)
(*                 AnalisiSintattica`Private`cols], *)
(*                AnalisiSintattica`Private`loc[MousePosition[*)
(*                  "EventHandlerScaled"]]] || MemberQ[Range[1, *)
(*                 AnalisiSintattica`Private`cols], *)
(*                AnalisiSintattica`Private`loc[MousePosition[*)
(*                  "EventHandlerScaled"]]], AnalisiSintattica`Private`cursor = *)
(*               -1, AnalisiSintattica`Private`cursor = *)
(*               AnalisiSintattica`Private`loc[MousePosition[*)
(*                 "EventHandlerScaled"]]]], *)
(*           Row[Table[With[{AnalisiSintattica`Private`i$ = *)
(*                AnalisiSintattica`Private`i}, Button[*)
(*               AnalisiSintattica`Private`listaProduzioni[[*)
(*                AnalisiSintattica`Private`i$]], *)
(*               AnalisiSintattica`Private`emptyGrammar[[*)
(*                  AnalisiSintattica`Private`xy[*)
(*                    AnalisiSintattica`Private`cursor][[1]],*)
(*                  AnalisiSintattica`Private`xy[*)
(*                    AnalisiSintattica`Private`cursor][[2]]]] = *)
(*                 AnalisiSintattica`Private`listaProduzioni[[*)
(*                  AnalisiSintattica`Private`i$]]; *)
(*                If[AnalisiSintattica`Private`soluzione[[*)
(*                   AnalisiSintattica`Private`xy[*)
(*                     AnalisiSintattica`Private`cursor][[1]],*)
(*                   AnalisiSintattica`Private`xy[*)
(*                     AnalisiSintattica`Private`cursor][[2]]]] != *)
(*                  AnalisiSintattica`Private`emptyGrammar[[*)
(*                   AnalisiSintattica`Private`xy[*)
(*                     AnalisiSintattica`Private`cursor][[1]],*)
(*                   AnalisiSintattica`Private`xy[*)
(*                     AnalisiSintattica`Private`cursor][[2]]]], Beep[]]]], *)
(*             {AnalisiSintattica`Private`i, 1, Length[*)
(*               AnalisiSintattica`Private`listaProduzioni]}], Spacer[0.5]], *)
(*           Row[{Button["Clear", AnalisiSintattica`Private`emptyGrammar[[*)
(*                AnalisiSintattica`Private`xy[*)
(*                  AnalisiSintattica`Private`cursor][[1]],*)
(*                AnalisiSintattica`Private`xy[*)
(*                  AnalisiSintattica`Private`cursor][[2]]]] = " "], *)
(*             Button["Clear All", Table[*)
(*               AnalisiSintattica`Private`emptyGrammar[[*)
(*                 AnalisiSintattica`Private`i,AnalisiSintattica`Private`j]] = *)
(*                " ", {AnalisiSintattica`Private`i, 2, *)
(*                AnalisiSintattica`Private`rows}, {*)
(*                AnalisiSintattica`Private`j, 2, *)
(*                AnalisiSintattica`Private`cols}]]}]}]}], *)
(*       If[AnalisiSintattica`Private`showNullable, *)
(*        Column[{Style["Mostra Nullable", Bold], *)
(*          TabView[Table[AnalisiSintattica`Private`tmp[[*)
(*              AnalisiSintattica`Private`i]] -> *)
(*             AnalisiSintattica`Private`nullable[[AnalisiSintattica`Private`i,*)
(*              2]], {AnalisiSintattica`Private`i, 1, *)
(*             Length[AnalisiSintattica`Private`tmp]}]]}, Alignment -> Right], *)
(*        " "], If[AnalisiSintattica`Private`showFirst, *)
(*        Column[{Style["Mostra First", Bold], *)
(*          AnalisiSintattica`Private`displayFirstSln[*)
(*           AnalisiSintattica`Private`emptyCheckboxGrammar]}, *)
(*         Alignment -> Right], ""], If[AnalisiSintattica`Private`showFollow, *)
(*        Column[{Style["Mostra First", Bold], *)
(*          AnalisiSintattica`Private`displayFollowSln[*)
(*           AnalisiSintattica`Private`emptyCheckboxGrammar]}, *)
(*         Alignment -> Right], ""], If[AnalisiSintattica`Private`showSolution, *)
(*        Row[{AnalisiSintattica`Private`displayTableSln[*)
(*           AnalisiSintattica`Private`soluzione]}], ""]}, Alignment -> Left], *)
(*     " "}}, Editable -> False], {{AnalisiSintattica`Private`soluzione, *)
(*    {{" ", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "$"}, *)
(*     {"A", "A->Bab", " ", "A->Bab", "A->Bab", "A->Bab", "A->C", "A->C", *)
(*      "A->C", " ", " ", " ", " ", " "}, {"B", "B->\[Epsilon]", " ", "B->cD", "B->d", *)
(*      "B->e", " ", " ", " ", " ", " ", " ", " ", " "}, *)
(*     {"C", " ", " ", " ", " ", " ", "C->f", "C->g", "C->h", " ", " ", " ", *)
(*      " ", "C->\[Epsilon]"}, {"D", "D->\[Epsilon]", " ", " ", " ", " ", " ", " ", " ", " ", *)
(*      "D->jik", " ", " ", " "}}}, ControlType -> None}, *)
(*  {{AnalisiSintattica`Private`emptyGrammar, *)
(*    {{" ", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "$"}, *)
(*     {"A", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "}, *)
(*     {"B", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "}, *)
(*     {"C", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "}, *)
(*     {"D", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", *)
(*      " "}}}, ControlType -> None}, *)
(*  {{AnalisiSintattica`Private`emptyCheckboxGrammar, *)
(*    {{" ", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "$"}, *)
(*     {"A", Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], *)
(*      Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], *)
(*      Checkbox[], Checkbox[]}, {"B", Checkbox[], Checkbox[], Checkbox[], *)
(*      Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], *)
(*      Checkbox[], Checkbox[], Checkbox[], Checkbox[]}, *)
(*     {"C", Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], *)
(*      Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], *)
(*      Checkbox[], Checkbox[]}, {"D", Checkbox[], Checkbox[], Checkbox[], *)
(*      Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], *)
(*      Checkbox[], Checkbox[], Checkbox[], Checkbox[]}}}, *)
(*   ControlType -> None}, {{AnalisiSintattica`Private`cursor, 0}, *)
(*   ControlType -> None}, {{AnalisiSintattica`Private`showNullable, False, *)
(*    "Mostra Nullable"}, {True, False}}, *)
(*  {{AnalisiSintattica`Private`showFirst, False, "Mostra First"}, *)
(*   {True, False}}, {{AnalisiSintattica`Private`showFollow, False, *)
(*    "Mostra Follow"}, {True, False}}, *)
(*  {{AnalisiSintattica`Private`showSolution, False, "show solution"}, *)
(*   {True, False}}, ContentSize -> {900, 900}, *)
(*  Initialization :> {AnalisiSintattica`Private`soluzione = *)
(*     {{" ", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "$"}, *)
(*      {"A", "A->Bab", " ", "A->Bab", "A->Bab", "A->Bab", "A->C", "A->C", *)
(*       "A->C", " ", " ", " ", " ", " "}, {"B", "B->\[Epsilon]", " ", "B->cD", "B->d", *)
(*       "B->e", " ", " ", " ", " ", " ", " ", " ", " "}, *)
(*      {"C", " ", " ", " ", " ", " ", "C->f", "C->g", "C->h", " ", " ", " ", *)
(*       " ", "C->\[Epsilon]"}, {"D", "D->\[Epsilon]", " ", " ", " ", " ", " ", " ", " ", " ", *)
(*       "D->jik", " ", " ", " "}}, AnalisiSintattica`Private`grammar = *)
(*     {{" ", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "$"}, *)
(*      {"A", "A->Bab", " ", "A->Bab", "A->Bab", "A->Bab", "A->C", "A->C", *)
(*       "A->C", " ", " ", " ", " ", " "}, {"B", "B->\[Epsilon]", " ", "B->cD", "B->d", *)
(*       "B->e", " ", " ", " ", " ", " ", " ", " ", " "}, *)
(*      {"C", " ", " ", " ", " ", " ", "C->f", "C->g", "C->h", " ", " ", " ", *)
(*       " ", "C->\[Epsilon]"}, {"D", "D->\[Epsilon]", " ", " ", " ", " ", " ", " ", " ", " ", *)
(*       "D->jik", " ", " ", " "}}, *)
(*    AnalisiSintattica`Private`createEmptyGrammar[*)
(*      AnalisiSintattica`Private`sln_] := *)
(*     Module[{AnalisiSintattica`Private`copy = AnalisiSintattica`Private`sln}, *)
(*      Table[If[AnalisiSintattica`Private`i > 1 && *)
(*          AnalisiSintattica`Private`j > 1, AnalisiSintattica`Private`copy[[*)
(*           AnalisiSintattica`Private`i,AnalisiSintattica`Private`j]] = " "], *)
(*        {AnalisiSintattica`Private`i, AnalisiSintattica`Private`rows}, *)
(*        {AnalisiSintattica`Private`j, AnalisiSintattica`Private`cols}]; *)
(*       AnalisiSintattica`Private`copy], AnalisiSintattica`Private`i = 5, *)
(*    AnalisiSintattica`Private`j = 3, AnalisiSintattica`Private`rows = 5, *)
(*    AnalisiSintattica`Private`cols = 14, *)
(*    AnalisiSintattica`Private`listaProduzioni = {"A->C", "A->Bab", "B->cD", *)
(*      "B->d", "B->e", "B->\[Epsilon]", "C->h", "C->g", "C->f", "C->\[Epsilon]", "D->jik", *)
(*      "D->\[Epsilon]"}, AnalisiSintattica`Private`tmp = {"A", "B", "C", "D"}, *)
(*    AnalisiSintattica`Private`displayFirst[AnalisiSintattica`Private`g_] := *)
(*     Grid[AnalisiSintattica`Private`g, Frame -> All, *)
(*      Background -> {White, White}, ItemStyle -> {Automatic}, *)
(*      ItemSize -> {{2, {2}}}, BaseStyle -> {Bold}*Editable -> False], *)
(*    AnalisiSintattica`Private`displayFollow[AnalisiSintattica`Private`g_] := *)
(*     Grid[AnalisiSintattica`Private`g, Frame -> All, *)
(*      Background -> {White, White}, ItemStyle -> {Automatic}, *)
(*      ItemSize -> {{2, {2}}}, BaseStyle -> {Bold}*Editable -> False], *)
(*    AnalisiSintattica`Private`displayTable[AnalisiSintattica`Private`g_, *)
(*      AnalisiSintattica`Private`cursor_:0] := *)
(*     Grid[AnalisiSintattica`Private`g, *)
(*      Frame -> If[MatchQ[AnalisiSintattica`Private`xy[*)
(*          AnalisiSintattica`Private`cursor], _Integer], All, *)
(*        {All, All, {AnalisiSintattica`Private`xy[*)
(*            AnalisiSintattica`Private`cursor] -> {Thick, Blue}}}], *)
(*      Background -> {White, White}, ItemStyle -> {Automatic}, *)
(*      ItemSize -> {{3, {4}}}, BaseStyle -> {Bold}, Editable -> False], *)
(*    AnalisiSintattica`Private`xy[AnalisiSintattica`Private`n_] := *)
(*     {AnalisiSintattica`Private`row[AnalisiSintattica`Private`n], *)
(*      AnalisiSintattica`Private`col[AnalisiSintattica`Private`n]}, *)
(*    AnalisiSintattica`Private`row[AnalisiSintattica`Private`n_] := *)
(*     Quotient[AnalisiSintattica`Private`n - 1, *)
(*       AnalisiSintattica`Private`cols] + 1, *)
(*    AnalisiSintattica`Private`col[AnalisiSintattica`Private`n_] := *)
(*     Mod[AnalisiSintattica`Private`n - 1, AnalisiSintattica`Private`cols] + *)
(*      1, AnalisiSintattica`Private`loc[{AnalisiSintattica`Private`x_, *)
(*       AnalisiSintattica`Private`y_}] := *)
(*     1 + Floor[AnalisiSintattica`Private`cols*AnalisiSintattica`Private`x] + *)
(*      AnalisiSintattica`Private`cols*Floor[(1 - AnalisiSintattica`Private`y)**)
(*         AnalisiSintattica`Private`rows], *)
(*    AnalisiSintattica`Private`nullable = {{"A", True}, {"B", True}, *)
(*      {"C", True}, {"D", True}}, AnalisiSintattica`Private`displayFirstSln[*)
(*      AnalisiSintattica`Private`g_] := AnalisiSintattica`Private`displayFirst[*)
(*      AnalisiSintattica`Private`g], *)
(*    AnalisiSintattica`Private`displayFollowSln[*)
(*      AnalisiSintattica`Private`g_] := *)
(*     AnalisiSintattica`Private`displayFollow[AnalisiSintattica`Private`g], *)
(*    AnalisiSintattica`Private`displayTableSln[*)
(*      AnalisiSintattica`Private`g_] := AnalisiSintattica`Private`displayTable[*)
(*      AnalisiSintattica`Private`g, 0]}]*)


(* ::Output:: *)
(*Manipulate[Grid[{{Column[{Style["ANALISI SINTATTICA", Bold], *)
(*       Style["ESERCIZIO DI GRAMMATICA N\[Degree]:", Bold], Style["Generare gli \*)
(*insiemi Nullable, First e Follow per la seguente grammatica", Bold]}, *)
(*      Alignment -> Left]}, *)
(*    {Column[{Row[{Button["Nuova grammatica", *)
(*          (AnalisiSintattica`Private`cursor = 0; Spacer[5]; *)
(*            AnalisiSintattica`Private`showSolution = False; *)
(*            AnalisiSintattica`Private`soluzione = *)
(*             AnalisiSintattica`Private`grammar; *)
(*            AnalisiSintattica`Private`emptyGrammar = *)
(*             AnalisiSintattica`Private`createEmptyGrammar[*)
(*              AnalisiSintattica`Private`soluzione]; ) & ], *)
(*         DynamicModule[{AnalisiSintattica`Private`numero = ""}, *)
(*          Panel[Column[{Row[{Style["Genera esercizio n\[Degree]: ", Bold], *)
(*               InputField[Dynamic[AnalisiSintattica`Private`numero], *)
(*                Number]}], Dynamic[AnalisiSintattica`Private`numero]; }]]]}], *)
(*       " ", Row[{Column[{Style["Grammatica", Bold], *)
(*           Grid[List /@ AnalisiSintattica`Private`listaProduzioni, *)
(*            Frame -> All, Background -> {White, White}, ItemStyle -> *)
(*             {Automatic}, ItemSize -> {{8, {8}}}, BaseStyle -> *)
(*             {Bold}*Editable -> False]}, Alignment -> Left]}], " ", *)
(*       Row[{Column[{Style["NULLABLE", Bold], TabView[*)
(*            Table[AnalisiSintattica`Private`tmp[[*)
(*               AnalisiSintattica`Private`i]] -> PopupMenu[" ", {*)
(*                AnalisiSintattica`Private`TRUE, *)
(*                AnalisiSintattica`Private`FALSE}], *)
(*             {AnalisiSintattica`Private`i, 1, Length[*)
(*               AnalisiSintattica`Private`tmp]}]]}, Alignment -> Left], " "}], *)
(*       " ", Row[{Column[{Style["FIRST", Bold], CellPrint["Dato un non \*)
(*terminale (ad esempio A,B), il suo insieme First \[EGrave] composto dai simboli \*)
(*terminali (compreso \[Epsilon]) che possono apparire come carattere iniziale di una \*)
(*stringa derivata da una sua produzione."], *)
(*           AnalisiSintattica`Private`displayFirst[*)
(*            AnalisiSintattica`Private`emptyCheckboxGrammar]}, *)
(*          Alignment -> Left]}], Row[{Column[{Style["FOLLOW", Bold], *)
(*           AnalisiSintattica`Private`displayFollow[*)
(*            AnalisiSintattica`Private`emptyCheckboxGrammar]}, *)
(*          Alignment -> Left]}], *)
(*       Row[{Column[{Style["TABELLA PRODUZIONI", Bold], EventHandler[*)
(*            Dynamic[AnalisiSintattica`Private`displayTable[*)
(*              AnalisiSintattica`Private`emptyGrammar, *)
(*              AnalisiSintattica`Private`cursor]], "MouseClicked" :> *)
(*             If[MemberQ[Range[1, AnalisiSintattica`Private`rows**)
(*                  AnalisiSintattica`Private`cols, *)
(*                 AnalisiSintattica`Private`cols], *)
(*                AnalisiSintattica`Private`loc[MousePosition[*)
(*                  "EventHandlerScaled"]]] || MemberQ[Range[1, *)
(*                 AnalisiSintattica`Private`cols], *)
(*                AnalisiSintattica`Private`loc[MousePosition[*)
(*                  "EventHandlerScaled"]]], AnalisiSintattica`Private`cursor = *)
(*               -1, AnalisiSintattica`Private`cursor = *)
(*               AnalisiSintattica`Private`loc[MousePosition[*)
(*                 "EventHandlerScaled"]]]], *)
(*           Row[Table[With[{AnalisiSintattica`Private`i$ = *)
(*                AnalisiSintattica`Private`i}, Button[*)
(*               AnalisiSintattica`Private`listaProduzioni[[*)
(*                AnalisiSintattica`Private`i$]], *)
(*               AnalisiSintattica`Private`emptyGrammar[[*)
(*                  AnalisiSintattica`Private`xy[*)
(*                    AnalisiSintattica`Private`cursor][[1]],*)
(*                  AnalisiSintattica`Private`xy[*)
(*                    AnalisiSintattica`Private`cursor][[2]]]] = *)
(*                 AnalisiSintattica`Private`listaProduzioni[[*)
(*                  AnalisiSintattica`Private`i$]]; *)
(*                If[AnalisiSintattica`Private`soluzione[[*)
(*                   AnalisiSintattica`Private`xy[*)
(*                     AnalisiSintattica`Private`cursor][[1]],*)
(*                   AnalisiSintattica`Private`xy[*)
(*                     AnalisiSintattica`Private`cursor][[2]]]] != *)
(*                  AnalisiSintattica`Private`emptyGrammar[[*)
(*                   AnalisiSintattica`Private`xy[*)
(*                     AnalisiSintattica`Private`cursor][[1]],*)
(*                   AnalisiSintattica`Private`xy[*)
(*                     AnalisiSintattica`Private`cursor][[2]]]], Beep[]]]], *)
(*             {AnalisiSintattica`Private`i, 1, Length[*)
(*               AnalisiSintattica`Private`listaProduzioni]}], Spacer[0.5]], *)
(*           Row[{Button["Clear", AnalisiSintattica`Private`emptyGrammar[[*)
(*                AnalisiSintattica`Private`xy[*)
(*                  AnalisiSintattica`Private`cursor][[1]],*)
(*                AnalisiSintattica`Private`xy[*)
(*                  AnalisiSintattica`Private`cursor][[2]]]] = " "], *)
(*             Button["Clear All", Table[*)
(*               AnalisiSintattica`Private`emptyGrammar[[*)
(*                 AnalisiSintattica`Private`i,AnalisiSintattica`Private`j]] = *)
(*                " ", {AnalisiSintattica`Private`i, 2, *)
(*                AnalisiSintattica`Private`rows}, {*)
(*                AnalisiSintattica`Private`j, 2, *)
(*                AnalisiSintattica`Private`cols}]]}]}]}], *)
(*       If[AnalisiSintattica`Private`showNullable, *)
(*        Column[{Style["Mostra Nullable", Bold], *)
(*          TabView[Table[AnalisiSintattica`Private`tmp[[*)
(*              AnalisiSintattica`Private`i]] -> *)
(*             AnalisiSintattica`Private`nullable[[AnalisiSintattica`Private`i,*)
(*              2]], {AnalisiSintattica`Private`i, 1, *)
(*             Length[AnalisiSintattica`Private`tmp]}]]}, Alignment -> Right], *)
(*        " "], If[AnalisiSintattica`Private`showFirst, *)
(*        Column[{Style["Mostra First", Bold], *)
(*          AnalisiSintattica`Private`displayFirstSln[*)
(*           AnalisiSintattica`Private`emptyCheckboxGrammar]}, *)
(*         Alignment -> Right], ""], If[AnalisiSintattica`Private`showFollow, *)
(*        Column[{Style["Mostra First", Bold], *)
(*          AnalisiSintattica`Private`displayFollowSln[*)
(*           AnalisiSintattica`Private`emptyCheckboxGrammar]}, *)
(*         Alignment -> Right], ""], If[AnalisiSintattica`Private`showSolution, *)
(*        Row[{AnalisiSintattica`Private`displayTableSln[*)
(*           AnalisiSintattica`Private`soluzione]}], ""]}, Alignment -> Left], *)
(*     " "}}, Editable -> False], {{AnalisiSintattica`Private`soluzione, *)
(*    {{" ", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "$"}, *)
(*     {"A", "A->Bab", " ", "A->Bab", "A->Bab", "A->Bab", "A->C", "A->C", *)
(*      "A->C", " ", " ", " ", " ", " "}, {"B", "B->\[Epsilon]", " ", "B->cD", "B->d", *)
(*      "B->e", " ", " ", " ", " ", " ", " ", " ", " "}, *)
(*     {"C", " ", " ", " ", " ", " ", "C->f", "C->g", "C->h", " ", " ", " ", *)
(*      " ", "C->\[Epsilon]"}, {"D", "D->\[Epsilon]", " ", " ", " ", " ", " ", " ", " ", " ", *)
(*      "D->jik", " ", " ", " "}}}, ControlType -> None}, *)
(*  {{AnalisiSintattica`Private`emptyGrammar, *)
(*    {{" ", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "$"}, *)
(*     {"A", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "}, *)
(*     {"B", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "}, *)
(*     {"C", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "}, *)
(*     {"D", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", *)
(*      " "}}}, ControlType -> None}, *)
(*  {{AnalisiSintattica`Private`emptyCheckboxGrammar, *)
(*    {{" ", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "$"}, *)
(*     {"A", Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], *)
(*      Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], *)
(*      Checkbox[], Checkbox[]}, {"B", Checkbox[], Checkbox[], Checkbox[], *)
(*      Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], *)
(*      Checkbox[], Checkbox[], Checkbox[], Checkbox[]}, *)
(*     {"C", Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], *)
(*      Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], *)
(*      Checkbox[], Checkbox[]}, {"D", Checkbox[], Checkbox[], Checkbox[], *)
(*      Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], *)
(*      Checkbox[], Checkbox[], Checkbox[], Checkbox[]}}}, *)
(*   ControlType -> None}, {{AnalisiSintattica`Private`cursor, 0}, *)
(*   ControlType -> None}, {{AnalisiSintattica`Private`showNullable, False, *)
(*    "Mostra Nullable"}, {True, False}}, *)
(*  {{AnalisiSintattica`Private`showFirst, False, "Mostra First"}, *)
(*   {True, False}}, {{AnalisiSintattica`Private`showFollow, False, *)
(*    "Mostra Follow"}, {True, False}}, *)
(*  {{AnalisiSintattica`Private`showSolution, False, "show solution"}, *)
(*   {True, False}}, ContentSize -> {900, 900}, *)
(*  Initialization :> {AnalisiSintattica`Private`soluzione = *)
(*     {{" ", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "$"}, *)
(*      {"A", "A->Bab", " ", "A->Bab", "A->Bab", "A->Bab", "A->C", "A->C", *)
(*       "A->C", " ", " ", " ", " ", " "}, {"B", "B->\[Epsilon]", " ", "B->cD", "B->d", *)
(*       "B->e", " ", " ", " ", " ", " ", " ", " ", " "}, *)
(*      {"C", " ", " ", " ", " ", " ", "C->f", "C->g", "C->h", " ", " ", " ", *)
(*       " ", "C->\[Epsilon]"}, {"D", "D->\[Epsilon]", " ", " ", " ", " ", " ", " ", " ", " ", *)
(*       "D->jik", " ", " ", " "}}, AnalisiSintattica`Private`grammar = *)
(*     {{" ", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "$"}, *)
(*      {"A", "A->Bab", " ", "A->Bab", "A->Bab", "A->Bab", "A->C", "A->C", *)
(*       "A->C", " ", " ", " ", " ", " "}, {"B", "B->\[Epsilon]", " ", "B->cD", "B->d", *)
(*       "B->e", " ", " ", " ", " ", " ", " ", " ", " "}, *)
(*      {"C", " ", " ", " ", " ", " ", "C->f", "C->g", "C->h", " ", " ", " ", *)
(*       " ", "C->\[Epsilon]"}, {"D", "D->\[Epsilon]", " ", " ", " ", " ", " ", " ", " ", " ", *)
(*       "D->jik", " ", " ", " "}}, *)
(*    AnalisiSintattica`Private`createEmptyGrammar[*)
(*      AnalisiSintattica`Private`sln_] := *)
(*     Module[{AnalisiSintattica`Private`copy = AnalisiSintattica`Private`sln}, *)
(*      Table[If[AnalisiSintattica`Private`i > 1 && *)
(*          AnalisiSintattica`Private`j > 1, AnalisiSintattica`Private`copy[[*)
(*           AnalisiSintattica`Private`i,AnalisiSintattica`Private`j]] = " "], *)
(*        {AnalisiSintattica`Private`i, AnalisiSintattica`Private`rows}, *)
(*        {AnalisiSintattica`Private`j, AnalisiSintattica`Private`cols}]; *)
(*       AnalisiSintattica`Private`copy], AnalisiSintattica`Private`i = 5, *)
(*    AnalisiSintattica`Private`j = 3, AnalisiSintattica`Private`rows = 5, *)
(*    AnalisiSintattica`Private`cols = 14, *)
(*    AnalisiSintattica`Private`listaProduzioni = {"A->C", "A->Bab", "B->cD", *)
(*      "B->d", "B->e", "B->\[Epsilon]", "C->h", "C->g", "C->f", "C->\[Epsilon]", "D->jik", *)
(*      "D->\[Epsilon]"}, AnalisiSintattica`Private`tmp = {"A", "B", "C", "D"}, *)
(*    AnalisiSintattica`Private`displayFirst[AnalisiSintattica`Private`g_] := *)
(*     Grid[AnalisiSintattica`Private`g, Frame -> All, *)
(*      Background -> {White, White}, ItemStyle -> {Automatic}, *)
(*      ItemSize -> {{2, {2}}}, BaseStyle -> {Bold}*Editable -> False], *)
(*    AnalisiSintattica`Private`displayFollow[AnalisiSintattica`Private`g_] := *)
(*     Grid[AnalisiSintattica`Private`g, Frame -> All, *)
(*      Background -> {White, White}, ItemStyle -> {Automatic}, *)
(*      ItemSize -> {{2, {2}}}, BaseStyle -> {Bold}*Editable -> False], *)
(*    AnalisiSintattica`Private`displayTable[AnalisiSintattica`Private`g_, *)
(*      AnalisiSintattica`Private`cursor_:0] := *)
(*     Grid[AnalisiSintattica`Private`g, *)
(*      Frame -> If[MatchQ[AnalisiSintattica`Private`xy[*)
(*          AnalisiSintattica`Private`cursor], _Integer], All, *)
(*        {All, All, {AnalisiSintattica`Private`xy[*)
(*            AnalisiSintattica`Private`cursor] -> {Thick, Blue}}}], *)
(*      Background -> {White, White}, ItemStyle -> {Automatic}, *)
(*      ItemSize -> {{3, {4}}}, BaseStyle -> {Bold}, Editable -> False], *)
(*    AnalisiSintattica`Private`xy[AnalisiSintattica`Private`n_] := *)
(*     {AnalisiSintattica`Private`row[AnalisiSintattica`Private`n], *)
(*      AnalisiSintattica`Private`col[AnalisiSintattica`Private`n]}, *)
(*    AnalisiSintattica`Private`row[AnalisiSintattica`Private`n_] := *)
(*     Quotient[AnalisiSintattica`Private`n - 1, *)
(*       AnalisiSintattica`Private`cols] + 1, *)
(*    AnalisiSintattica`Private`col[AnalisiSintattica`Private`n_] := *)
(*     Mod[AnalisiSintattica`Private`n - 1, AnalisiSintattica`Private`cols] + *)
(*      1, AnalisiSintattica`Private`loc[{AnalisiSintattica`Private`x_, *)
(*       AnalisiSintattica`Private`y_}] := *)
(*     1 + Floor[AnalisiSintattica`Private`cols*AnalisiSintattica`Private`x] + *)
(*      AnalisiSintattica`Private`cols*Floor[(1 - AnalisiSintattica`Private`y)**)
(*         AnalisiSintattica`Private`rows], *)
(*    AnalisiSintattica`Private`nullable = {{"A", True}, {"B", True}, *)
(*      {"C", True}, {"D", True}}, AnalisiSintattica`Private`displayFirstSln[*)
(*      AnalisiSintattica`Private`g_] := AnalisiSintattica`Private`displayFirst[*)
(*      AnalisiSintattica`Private`g], *)
(*    AnalisiSintattica`Private`displayFollowSln[*)
(*      AnalisiSintattica`Private`g_] := *)
(*     AnalisiSintattica`Private`displayFollow[AnalisiSintattica`Private`g], *)
(*    AnalisiSintattica`Private`displayTableSln[*)
(*      AnalisiSintattica`Private`g_] := AnalisiSintattica`Private`displayTable[*)
(*      AnalisiSintattica`Private`g, 0]}]*)


(* ::Output:: *)
(*Manipulate[Grid[{{Column[{Style["ANALISI SINTATTICA", Bold], *)
(*       Style["ESERCIZIO DI GRAMMATICA N\[Degree]:", Bold], Style["Generare gli \*)
(*insiemi Nullable, First e Follow per la seguente grammatica", Bold]}, *)
(*      Alignment -> Left]}, *)
(*    {Column[{Row[{Button["Nuova grammatica", *)
(*          (AnalisiSintattica`Private`cursor = 0; Spacer[5]; *)
(*            AnalisiSintattica`Private`showSolution = False; *)
(*            AnalisiSintattica`Private`soluzione = *)
(*             AnalisiSintattica`Private`grammar; *)
(*            AnalisiSintattica`Private`emptyGrammar = *)
(*             AnalisiSintattica`Private`createEmptyGrammar[*)
(*              AnalisiSintattica`Private`soluzione]; ) & ], *)
(*         DynamicModule[{AnalisiSintattica`Private`numero = ""}, *)
(*          Panel[Column[{Row[{Style["Genera esercizio n\[Degree]: ", Bold], *)
(*               InputField[Dynamic[AnalisiSintattica`Private`numero], *)
(*                Number]}], Dynamic[AnalisiSintattica`Private`numero]; }]]]}], *)
(*       " ", Row[{Column[{Style["Grammatica", Bold], *)
(*           Grid[List /@ AnalisiSintattica`Private`listaProduzioni, *)
(*            Frame -> All, Background -> {White, White}, ItemStyle -> *)
(*             {Automatic}, ItemSize -> {{8, {8}}}, BaseStyle -> *)
(*             {Bold}*Editable -> False]}, Alignment -> Left]}], " ", *)
(*       Row[{Column[{Style["NULLABLE", Bold], TabView[*)
(*            Table[AnalisiSintattica`Private`tmp[[*)
(*               AnalisiSintattica`Private`i]] -> PopupMenu[" ", {*)
(*                AnalisiSintattica`Private`TRUE, *)
(*                AnalisiSintattica`Private`FALSE}], *)
(*             {AnalisiSintattica`Private`i, 1, Length[*)
(*               AnalisiSintattica`Private`tmp]}]]}, Alignment -> Left], " "}], *)
(*       " ", Row[{Column[{Style["FIRST", Bold], Cell["Dato un non terminale \*)
(*(ad esempio A,B), il suo insieme First \[EGrave] composto dai simboli terminali \*)
(*(compreso \[Epsilon]) che possono apparire come carattere iniziale di una stringa \*)
(*derivata da una sua produzione.", "Text"], *)
(*           AnalisiSintattica`Private`displayFirst[*)
(*            AnalisiSintattica`Private`emptyCheckboxGrammar]}, *)
(*          Alignment -> Left]}], Row[{Column[{Style["FOLLOW", Bold], *)
(*           AnalisiSintattica`Private`displayFollow[*)
(*            AnalisiSintattica`Private`emptyCheckboxGrammar]}, *)
(*          Alignment -> Left]}], *)
(*       Row[{Column[{Style["TABELLA PRODUZIONI", Bold], EventHandler[*)
(*            Dynamic[AnalisiSintattica`Private`displayTable[*)
(*              AnalisiSintattica`Private`emptyGrammar, *)
(*              AnalisiSintattica`Private`cursor]], "MouseClicked" :> *)
(*             If[MemberQ[Range[1, AnalisiSintattica`Private`rows**)
(*                  AnalisiSintattica`Private`cols, *)
(*                 AnalisiSintattica`Private`cols], *)
(*                AnalisiSintattica`Private`loc[MousePosition[*)
(*                  "EventHandlerScaled"]]] || MemberQ[Range[1, *)
(*                 AnalisiSintattica`Private`cols], *)
(*                AnalisiSintattica`Private`loc[MousePosition[*)
(*                  "EventHandlerScaled"]]], AnalisiSintattica`Private`cursor = *)
(*               -1, AnalisiSintattica`Private`cursor = *)
(*               AnalisiSintattica`Private`loc[MousePosition[*)
(*                 "EventHandlerScaled"]]]], *)
(*           Row[Table[With[{AnalisiSintattica`Private`i$ = *)
(*                AnalisiSintattica`Private`i}, Button[*)
(*               AnalisiSintattica`Private`listaProduzioni[[*)
(*                AnalisiSintattica`Private`i$]], *)
(*               AnalisiSintattica`Private`emptyGrammar[[*)
(*                  AnalisiSintattica`Private`xy[*)
(*                    AnalisiSintattica`Private`cursor][[1]],*)
(*                  AnalisiSintattica`Private`xy[*)
(*                    AnalisiSintattica`Private`cursor][[2]]]] = *)
(*                 AnalisiSintattica`Private`listaProduzioni[[*)
(*                  AnalisiSintattica`Private`i$]]; *)
(*                If[AnalisiSintattica`Private`soluzione[[*)
(*                   AnalisiSintattica`Private`xy[*)
(*                     AnalisiSintattica`Private`cursor][[1]],*)
(*                   AnalisiSintattica`Private`xy[*)
(*                     AnalisiSintattica`Private`cursor][[2]]]] != *)
(*                  AnalisiSintattica`Private`emptyGrammar[[*)
(*                   AnalisiSintattica`Private`xy[*)
(*                     AnalisiSintattica`Private`cursor][[1]],*)
(*                   AnalisiSintattica`Private`xy[*)
(*                     AnalisiSintattica`Private`cursor][[2]]]], Beep[]]]], *)
(*             {AnalisiSintattica`Private`i, 1, Length[*)
(*               AnalisiSintattica`Private`listaProduzioni]}], Spacer[0.5]], *)
(*           Row[{Button["Clear", AnalisiSintattica`Private`emptyGrammar[[*)
(*                AnalisiSintattica`Private`xy[*)
(*                  AnalisiSintattica`Private`cursor][[1]],*)
(*                AnalisiSintattica`Private`xy[*)
(*                  AnalisiSintattica`Private`cursor][[2]]]] = " "], *)
(*             Button["Clear All", Table[*)
(*               AnalisiSintattica`Private`emptyGrammar[[*)
(*                 AnalisiSintattica`Private`i,AnalisiSintattica`Private`j]] = *)
(*                " ", {AnalisiSintattica`Private`i, 2, *)
(*                AnalisiSintattica`Private`rows}, {*)
(*                AnalisiSintattica`Private`j, 2, *)
(*                AnalisiSintattica`Private`cols}]]}]}]}], *)
(*       If[AnalisiSintattica`Private`showNullable, *)
(*        Column[{Style["Mostra Nullable", Bold], *)
(*          TabView[Table[AnalisiSintattica`Private`tmp[[*)
(*              AnalisiSintattica`Private`i]] -> *)
(*             AnalisiSintattica`Private`nullable[[AnalisiSintattica`Private`i,*)
(*              2]], {AnalisiSintattica`Private`i, 1, *)
(*             Length[AnalisiSintattica`Private`tmp]}]]}, Alignment -> Right], *)
(*        " "], If[AnalisiSintattica`Private`showFirst, *)
(*        Column[{Style["Mostra First", Bold], *)
(*          AnalisiSintattica`Private`displayFirstSln[*)
(*           AnalisiSintattica`Private`emptyCheckboxGrammar]}, *)
(*         Alignment -> Right], ""], If[AnalisiSintattica`Private`showFollow, *)
(*        Column[{Style["Mostra First", Bold], *)
(*          AnalisiSintattica`Private`displayFollowSln[*)
(*           AnalisiSintattica`Private`emptyCheckboxGrammar]}, *)
(*         Alignment -> Right], ""], If[AnalisiSintattica`Private`showSolution, *)
(*        Row[{AnalisiSintattica`Private`displayTableSln[*)
(*           AnalisiSintattica`Private`soluzione]}], ""]}, Alignment -> Left], *)
(*     " "}}, Editable -> False], {{AnalisiSintattica`Private`soluzione, *)
(*    {{" ", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "$"}, *)
(*     {"A", "A->Bab", " ", "A->Bab", "A->Bab", "A->Bab", "A->C", "A->C", *)
(*      "A->C", " ", " ", " ", " ", " "}, {"B", "B->\[Epsilon]", " ", "B->cD", "B->d", *)
(*      "B->e", " ", " ", " ", " ", " ", " ", " ", " "}, *)
(*     {"C", " ", " ", " ", " ", " ", "C->f", "C->g", "C->h", " ", " ", " ", *)
(*      " ", "C->\[Epsilon]"}, {"D", "D->\[Epsilon]", " ", " ", " ", " ", " ", " ", " ", " ", *)
(*      "D->jik", " ", " ", " "}}}, ControlType -> None}, *)
(*  {{AnalisiSintattica`Private`emptyGrammar, *)
(*    {{" ", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "$"}, *)
(*     {"A", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "}, *)
(*     {"B", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "}, *)
(*     {"C", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "}, *)
(*     {"D", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", *)
(*      " "}}}, ControlType -> None}, *)
(*  {{AnalisiSintattica`Private`emptyCheckboxGrammar, *)
(*    {{" ", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "$"}, *)
(*     {"A", Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], *)
(*      Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], *)
(*      Checkbox[], Checkbox[]}, {"B", Checkbox[], Checkbox[], Checkbox[], *)
(*      Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], *)
(*      Checkbox[], Checkbox[], Checkbox[], Checkbox[]}, *)
(*     {"C", Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], *)
(*      Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], *)
(*      Checkbox[], Checkbox[]}, {"D", Checkbox[], Checkbox[], Checkbox[], *)
(*      Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], *)
(*      Checkbox[], Checkbox[], Checkbox[], Checkbox[]}}}, *)
(*   ControlType -> None}, {{AnalisiSintattica`Private`cursor, 0}, *)
(*   ControlType -> None}, {{AnalisiSintattica`Private`showNullable, False, *)
(*    "Mostra Nullable"}, {True, False}}, *)
(*  {{AnalisiSintattica`Private`showFirst, False, "Mostra First"}, *)
(*   {True, False}}, {{AnalisiSintattica`Private`showFollow, False, *)
(*    "Mostra Follow"}, {True, False}}, *)
(*  {{AnalisiSintattica`Private`showSolution, False, "show solution"}, *)
(*   {True, False}}, ContentSize -> {900, 900}, *)
(*  Initialization :> {AnalisiSintattica`Private`soluzione = *)
(*     {{" ", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "$"}, *)
(*      {"A", "A->Bab", " ", "A->Bab", "A->Bab", "A->Bab", "A->C", "A->C", *)
(*       "A->C", " ", " ", " ", " ", " "}, {"B", "B->\[Epsilon]", " ", "B->cD", "B->d", *)
(*       "B->e", " ", " ", " ", " ", " ", " ", " ", " "}, *)
(*      {"C", " ", " ", " ", " ", " ", "C->f", "C->g", "C->h", " ", " ", " ", *)
(*       " ", "C->\[Epsilon]"}, {"D", "D->\[Epsilon]", " ", " ", " ", " ", " ", " ", " ", " ", *)
(*       "D->jik", " ", " ", " "}}, AnalisiSintattica`Private`grammar = *)
(*     {{" ", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "$"}, *)
(*      {"A", "A->Bab", " ", "A->Bab", "A->Bab", "A->Bab", "A->C", "A->C", *)
(*       "A->C", " ", " ", " ", " ", " "}, {"B", "B->\[Epsilon]", " ", "B->cD", "B->d", *)
(*       "B->e", " ", " ", " ", " ", " ", " ", " ", " "}, *)
(*      {"C", " ", " ", " ", " ", " ", "C->f", "C->g", "C->h", " ", " ", " ", *)
(*       " ", "C->\[Epsilon]"}, {"D", "D->\[Epsilon]", " ", " ", " ", " ", " ", " ", " ", " ", *)
(*       "D->jik", " ", " ", " "}}, *)
(*    AnalisiSintattica`Private`createEmptyGrammar[*)
(*      AnalisiSintattica`Private`sln_] := *)
(*     Module[{AnalisiSintattica`Private`copy = AnalisiSintattica`Private`sln}, *)
(*      Table[If[AnalisiSintattica`Private`i > 1 && *)
(*          AnalisiSintattica`Private`j > 1, AnalisiSintattica`Private`copy[[*)
(*           AnalisiSintattica`Private`i,AnalisiSintattica`Private`j]] = " "], *)
(*        {AnalisiSintattica`Private`i, AnalisiSintattica`Private`rows}, *)
(*        {AnalisiSintattica`Private`j, AnalisiSintattica`Private`cols}]; *)
(*       AnalisiSintattica`Private`copy], AnalisiSintattica`Private`i = 5, *)
(*    AnalisiSintattica`Private`j = 3, AnalisiSintattica`Private`rows = 5, *)
(*    AnalisiSintattica`Private`cols = 14, *)
(*    AnalisiSintattica`Private`listaProduzioni = {"A->C", "A->Bab", "B->cD", *)
(*      "B->d", "B->e", "B->\[Epsilon]", "C->h", "C->g", "C->f", "C->\[Epsilon]", "D->jik", *)
(*      "D->\[Epsilon]"}, AnalisiSintattica`Private`tmp = {"A", "B", "C", "D"}, *)
(*    AnalisiSintattica`Private`displayFirst[AnalisiSintattica`Private`g_] := *)
(*     Grid[AnalisiSintattica`Private`g, Frame -> All, *)
(*      Background -> {White, White}, ItemStyle -> {Automatic}, *)
(*      ItemSize -> {{2, {2}}}, BaseStyle -> {Bold}*Editable -> False], *)
(*    AnalisiSintattica`Private`displayFollow[AnalisiSintattica`Private`g_] := *)
(*     Grid[AnalisiSintattica`Private`g, Frame -> All, *)
(*      Background -> {White, White}, ItemStyle -> {Automatic}, *)
(*      ItemSize -> {{2, {2}}}, BaseStyle -> {Bold}*Editable -> False], *)
(*    AnalisiSintattica`Private`displayTable[AnalisiSintattica`Private`g_, *)
(*      AnalisiSintattica`Private`cursor_:0] := *)
(*     Grid[AnalisiSintattica`Private`g, *)
(*      Frame -> If[MatchQ[AnalisiSintattica`Private`xy[*)
(*          AnalisiSintattica`Private`cursor], _Integer], All, *)
(*        {All, All, {AnalisiSintattica`Private`xy[*)
(*            AnalisiSintattica`Private`cursor] -> {Thick, Blue}}}], *)
(*      Background -> {White, White}, ItemStyle -> {Automatic}, *)
(*      ItemSize -> {{3, {4}}}, BaseStyle -> {Bold}, Editable -> False], *)
(*    AnalisiSintattica`Private`xy[AnalisiSintattica`Private`n_] := *)
(*     {AnalisiSintattica`Private`row[AnalisiSintattica`Private`n], *)
(*      AnalisiSintattica`Private`col[AnalisiSintattica`Private`n]}, *)
(*    AnalisiSintattica`Private`row[AnalisiSintattica`Private`n_] := *)
(*     Quotient[AnalisiSintattica`Private`n - 1, *)
(*       AnalisiSintattica`Private`cols] + 1, *)
(*    AnalisiSintattica`Private`col[AnalisiSintattica`Private`n_] := *)
(*     Mod[AnalisiSintattica`Private`n - 1, AnalisiSintattica`Private`cols] + *)
(*      1, AnalisiSintattica`Private`loc[{AnalisiSintattica`Private`x_, *)
(*       AnalisiSintattica`Private`y_}] := *)
(*     1 + Floor[AnalisiSintattica`Private`cols*AnalisiSintattica`Private`x] + *)
(*      AnalisiSintattica`Private`cols*Floor[(1 - AnalisiSintattica`Private`y)**)
(*         AnalisiSintattica`Private`rows], *)
(*    AnalisiSintattica`Private`nullable = {{"A", True}, {"B", True}, *)
(*      {"C", True}, {"D", True}}, AnalisiSintattica`Private`displayFirstSln[*)
(*      AnalisiSintattica`Private`g_] := AnalisiSintattica`Private`displayFirst[*)
(*      AnalisiSintattica`Private`g], *)
(*    AnalisiSintattica`Private`displayFollowSln[*)
(*      AnalisiSintattica`Private`g_] := *)
(*     AnalisiSintattica`Private`displayFollow[AnalisiSintattica`Private`g], *)
(*    AnalisiSintattica`Private`displayTableSln[*)
(*      AnalisiSintattica`Private`g_] := AnalisiSintattica`Private`displayTable[*)
(*      AnalisiSintattica`Private`g, 0]}]*)


(* ::Output:: *)
(*Manipulate[Grid[{{Column[{Style["ANALISI SINTATTICA", Bold], *)
(*       Style["ESERCIZIO DI GRAMMATICA N\[Degree]:", Bold], Style["Generare gli \*)
(*insiemi Nullable, First e Follow per la seguente grammatica", Bold]}, *)
(*      Alignment -> Left]}, *)
(*    {Column[{Row[{Button["Nuova grammatica", *)
(*          (AnalisiSintattica`Private`cursor = 0; Spacer[5]; *)
(*            AnalisiSintattica`Private`showSolution = False; *)
(*            AnalisiSintattica`Private`soluzione = *)
(*             AnalisiSintattica`Private`grammar; *)
(*            AnalisiSintattica`Private`emptyGrammar = *)
(*             AnalisiSintattica`Private`createEmptyGrammar[*)
(*              AnalisiSintattica`Private`soluzione]; ) & ], *)
(*         DynamicModule[{AnalisiSintattica`Private`numero = ""}, *)
(*          Panel[Column[{Row[{Style["Genera esercizio n\[Degree]: ", Bold], *)
(*               InputField[Dynamic[AnalisiSintattica`Private`numero], *)
(*                Number]}], Dynamic[AnalisiSintattica`Private`numero]; }]]]}], *)
(*       " ", Row[{Column[{Style["Grammatica", Bold], *)
(*           Grid[List /@ AnalisiSintattica`Private`listaProduzioni, *)
(*            Frame -> All, Background -> {White, White}, ItemStyle -> *)
(*             {Automatic}, ItemSize -> {{8, {8}}}, BaseStyle -> *)
(*             {Bold}*Editable -> False]}, Alignment -> Left]}], " ", *)
(*       Row[{Column[{Style["NULLABLE", Bold], TabView[*)
(*            Table[AnalisiSintattica`Private`tmp[[*)
(*               AnalisiSintattica`Private`i]] -> PopupMenu[" ", {*)
(*                AnalisiSintattica`Private`TRUE, *)
(*                AnalisiSintattica`Private`FALSE}], *)
(*             {AnalisiSintattica`Private`i, 1, Length[*)
(*               AnalisiSintattica`Private`tmp]}]]}, Alignment -> Left], " "}], *)
(*       " ", Row[{Column[{Style["FIRST", Bold], CellPrint[Cell["Dato un non \*)
(*terminale (ad esempio A,B), il suo insieme First \[EGrave] composto dai simboli \*)
(*terminali (compreso \[Epsilon]) che possono apparire come carattere iniziale di una \*)
(*stringa derivata da una sua produzione.", "Text"]], *)
(*           AnalisiSintattica`Private`displayFirst[*)
(*            AnalisiSintattica`Private`emptyCheckboxGrammar]}, *)
(*          Alignment -> Left]}], Row[{Column[{Style["FOLLOW", Bold], *)
(*           AnalisiSintattica`Private`displayFollow[*)
(*            AnalisiSintattica`Private`emptyCheckboxGrammar]}, *)
(*          Alignment -> Left]}], *)
(*       Row[{Column[{Style["TABELLA PRODUZIONI", Bold], EventHandler[*)
(*            Dynamic[AnalisiSintattica`Private`displayTable[*)
(*              AnalisiSintattica`Private`emptyGrammar, *)
(*              AnalisiSintattica`Private`cursor]], "MouseClicked" :> *)
(*             If[MemberQ[Range[1, AnalisiSintattica`Private`rows**)
(*                  AnalisiSintattica`Private`cols, *)
(*                 AnalisiSintattica`Private`cols], *)
(*                AnalisiSintattica`Private`loc[MousePosition[*)
(*                  "EventHandlerScaled"]]] || MemberQ[Range[1, *)
(*                 AnalisiSintattica`Private`cols], *)
(*                AnalisiSintattica`Private`loc[MousePosition[*)
(*                  "EventHandlerScaled"]]], AnalisiSintattica`Private`cursor = *)
(*               -1, AnalisiSintattica`Private`cursor = *)
(*               AnalisiSintattica`Private`loc[MousePosition[*)
(*                 "EventHandlerScaled"]]]], *)
(*           Row[Table[With[{AnalisiSintattica`Private`i$ = *)
(*                AnalisiSintattica`Private`i}, Button[*)
(*               AnalisiSintattica`Private`listaProduzioni[[*)
(*                AnalisiSintattica`Private`i$]], *)
(*               AnalisiSintattica`Private`emptyGrammar[[*)
(*                  AnalisiSintattica`Private`xy[*)
(*                    AnalisiSintattica`Private`cursor][[1]],*)
(*                  AnalisiSintattica`Private`xy[*)
(*                    AnalisiSintattica`Private`cursor][[2]]]] = *)
(*                 AnalisiSintattica`Private`listaProduzioni[[*)
(*                  AnalisiSintattica`Private`i$]]; *)
(*                If[AnalisiSintattica`Private`soluzione[[*)
(*                   AnalisiSintattica`Private`xy[*)
(*                     AnalisiSintattica`Private`cursor][[1]],*)
(*                   AnalisiSintattica`Private`xy[*)
(*                     AnalisiSintattica`Private`cursor][[2]]]] != *)
(*                  AnalisiSintattica`Private`emptyGrammar[[*)
(*                   AnalisiSintattica`Private`xy[*)
(*                     AnalisiSintattica`Private`cursor][[1]],*)
(*                   AnalisiSintattica`Private`xy[*)
(*                     AnalisiSintattica`Private`cursor][[2]]]], Beep[]]]], *)
(*             {AnalisiSintattica`Private`i, 1, Length[*)
(*               AnalisiSintattica`Private`listaProduzioni]}], Spacer[0.5]], *)
(*           Row[{Button["Clear", AnalisiSintattica`Private`emptyGrammar[[*)
(*                AnalisiSintattica`Private`xy[*)
(*                  AnalisiSintattica`Private`cursor][[1]],*)
(*                AnalisiSintattica`Private`xy[*)
(*                  AnalisiSintattica`Private`cursor][[2]]]] = " "], *)
(*             Button["Clear All", Table[*)
(*               AnalisiSintattica`Private`emptyGrammar[[*)
(*                 AnalisiSintattica`Private`i,AnalisiSintattica`Private`j]] = *)
(*                " ", {AnalisiSintattica`Private`i, 2, *)
(*                AnalisiSintattica`Private`rows}, {*)
(*                AnalisiSintattica`Private`j, 2, *)
(*                AnalisiSintattica`Private`cols}]]}]}]}], *)
(*       If[AnalisiSintattica`Private`showNullable, *)
(*        Column[{Style["Mostra Nullable", Bold], *)
(*          TabView[Table[AnalisiSintattica`Private`tmp[[*)
(*              AnalisiSintattica`Private`i]] -> *)
(*             AnalisiSintattica`Private`nullable[[AnalisiSintattica`Private`i,*)
(*              2]], {AnalisiSintattica`Private`i, 1, *)
(*             Length[AnalisiSintattica`Private`tmp]}]]}, Alignment -> Right], *)
(*        " "], If[AnalisiSintattica`Private`showFirst, *)
(*        Column[{Style["Mostra First", Bold], *)
(*          AnalisiSintattica`Private`displayFirstSln[*)
(*           AnalisiSintattica`Private`emptyCheckboxGrammar]}, *)
(*         Alignment -> Right], ""], If[AnalisiSintattica`Private`showFollow, *)
(*        Column[{Style["Mostra First", Bold], *)
(*          AnalisiSintattica`Private`displayFollowSln[*)
(*           AnalisiSintattica`Private`emptyCheckboxGrammar]}, *)
(*         Alignment -> Right], ""], If[AnalisiSintattica`Private`showSolution, *)
(*        Row[{AnalisiSintattica`Private`displayTableSln[*)
(*           AnalisiSintattica`Private`soluzione]}], ""]}, Alignment -> Left], *)
(*     " "}}, Editable -> False], {{AnalisiSintattica`Private`soluzione, *)
(*    {{" ", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "$"}, *)
(*     {"A", "A->Bab", " ", "A->Bab", "A->Bab", "A->Bab", "A->C", "A->C", *)
(*      "A->C", " ", " ", " ", " ", " "}, {"B", "B->\[Epsilon]", " ", "B->cD", "B->d", *)
(*      "B->e", " ", " ", " ", " ", " ", " ", " ", " "}, *)
(*     {"C", " ", " ", " ", " ", " ", "C->f", "C->g", "C->h", " ", " ", " ", *)
(*      " ", "C->\[Epsilon]"}, {"D", "D->\[Epsilon]", " ", " ", " ", " ", " ", " ", " ", " ", *)
(*      "D->jik", " ", " ", " "}}}, ControlType -> None}, *)
(*  {{AnalisiSintattica`Private`emptyGrammar, *)
(*    {{" ", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "$"}, *)
(*     {"A", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "}, *)
(*     {"B", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "}, *)
(*     {"C", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "}, *)
(*     {"D", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", *)
(*      " "}}}, ControlType -> None}, *)
(*  {{AnalisiSintattica`Private`emptyCheckboxGrammar, *)
(*    {{" ", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "$"}, *)
(*     {"A", Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], *)
(*      Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], *)
(*      Checkbox[], Checkbox[]}, {"B", Checkbox[], Checkbox[], Checkbox[], *)
(*      Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], *)
(*      Checkbox[], Checkbox[], Checkbox[], Checkbox[]}, *)
(*     {"C", Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], *)
(*      Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], *)
(*      Checkbox[], Checkbox[]}, {"D", Checkbox[], Checkbox[], Checkbox[], *)
(*      Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], *)
(*      Checkbox[], Checkbox[], Checkbox[], Checkbox[]}}}, *)
(*   ControlType -> None}, {{AnalisiSintattica`Private`cursor, 0}, *)
(*   ControlType -> None}, {{AnalisiSintattica`Private`showNullable, False, *)
(*    "Mostra Nullable"}, {True, False}}, *)
(*  {{AnalisiSintattica`Private`showFirst, False, "Mostra First"}, *)
(*   {True, False}}, {{AnalisiSintattica`Private`showFollow, False, *)
(*    "Mostra Follow"}, {True, False}}, *)
(*  {{AnalisiSintattica`Private`showSolution, False, "show solution"}, *)
(*   {True, False}}, ContentSize -> {900, 900}, *)
(*  Initialization :> {AnalisiSintattica`Private`soluzione = *)
(*     {{" ", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "$"}, *)
(*      {"A", "A->Bab", " ", "A->Bab", "A->Bab", "A->Bab", "A->C", "A->C", *)
(*       "A->C", " ", " ", " ", " ", " "}, {"B", "B->\[Epsilon]", " ", "B->cD", "B->d", *)
(*       "B->e", " ", " ", " ", " ", " ", " ", " ", " "}, *)
(*      {"C", " ", " ", " ", " ", " ", "C->f", "C->g", "C->h", " ", " ", " ", *)
(*       " ", "C->\[Epsilon]"}, {"D", "D->\[Epsilon]", " ", " ", " ", " ", " ", " ", " ", " ", *)
(*       "D->jik", " ", " ", " "}}, AnalisiSintattica`Private`grammar = *)
(*     {{" ", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "$"}, *)
(*      {"A", "A->Bab", " ", "A->Bab", "A->Bab", "A->Bab", "A->C", "A->C", *)
(*       "A->C", " ", " ", " ", " ", " "}, {"B", "B->\[Epsilon]", " ", "B->cD", "B->d", *)
(*       "B->e", " ", " ", " ", " ", " ", " ", " ", " "}, *)
(*      {"C", " ", " ", " ", " ", " ", "C->f", "C->g", "C->h", " ", " ", " ", *)
(*       " ", "C->\[Epsilon]"}, {"D", "D->\[Epsilon]", " ", " ", " ", " ", " ", " ", " ", " ", *)
(*       "D->jik", " ", " ", " "}}, *)
(*    AnalisiSintattica`Private`createEmptyGrammar[*)
(*      AnalisiSintattica`Private`sln_] := *)
(*     Module[{AnalisiSintattica`Private`copy = AnalisiSintattica`Private`sln}, *)
(*      Table[If[AnalisiSintattica`Private`i > 1 && *)
(*          AnalisiSintattica`Private`j > 1, AnalisiSintattica`Private`copy[[*)
(*           AnalisiSintattica`Private`i,AnalisiSintattica`Private`j]] = " "], *)
(*        {AnalisiSintattica`Private`i, AnalisiSintattica`Private`rows}, *)
(*        {AnalisiSintattica`Private`j, AnalisiSintattica`Private`cols}]; *)
(*       AnalisiSintattica`Private`copy], AnalisiSintattica`Private`i = 5, *)
(*    AnalisiSintattica`Private`j = 3, AnalisiSintattica`Private`rows = 5, *)
(*    AnalisiSintattica`Private`cols = 14, *)
(*    AnalisiSintattica`Private`listaProduzioni = {"A->C", "A->Bab", "B->cD", *)
(*      "B->d", "B->e", "B->\[Epsilon]", "C->h", "C->g", "C->f", "C->\[Epsilon]", "D->jik", *)
(*      "D->\[Epsilon]"}, AnalisiSintattica`Private`tmp = {"A", "B", "C", "D"}, *)
(*    AnalisiSintattica`Private`displayFirst[AnalisiSintattica`Private`g_] := *)
(*     Grid[AnalisiSintattica`Private`g, Frame -> All, *)
(*      Background -> {White, White}, ItemStyle -> {Automatic}, *)
(*      ItemSize -> {{2, {2}}}, BaseStyle -> {Bold}*Editable -> False], *)
(*    AnalisiSintattica`Private`displayFollow[AnalisiSintattica`Private`g_] := *)
(*     Grid[AnalisiSintattica`Private`g, Frame -> All, *)
(*      Background -> {White, White}, ItemStyle -> {Automatic}, *)
(*      ItemSize -> {{2, {2}}}, BaseStyle -> {Bold}*Editable -> False], *)
(*    AnalisiSintattica`Private`displayTable[AnalisiSintattica`Private`g_, *)
(*      AnalisiSintattica`Private`cursor_:0] := *)
(*     Grid[AnalisiSintattica`Private`g, *)
(*      Frame -> If[MatchQ[AnalisiSintattica`Private`xy[*)
(*          AnalisiSintattica`Private`cursor], _Integer], All, *)
(*        {All, All, {AnalisiSintattica`Private`xy[*)
(*            AnalisiSintattica`Private`cursor] -> {Thick, Blue}}}], *)
(*      Background -> {White, White}, ItemStyle -> {Automatic}, *)
(*      ItemSize -> {{3, {4}}}, BaseStyle -> {Bold}, Editable -> False], *)
(*    AnalisiSintattica`Private`xy[AnalisiSintattica`Private`n_] := *)
(*     {AnalisiSintattica`Private`row[AnalisiSintattica`Private`n], *)
(*      AnalisiSintattica`Private`col[AnalisiSintattica`Private`n]}, *)
(*    AnalisiSintattica`Private`row[AnalisiSintattica`Private`n_] := *)
(*     Quotient[AnalisiSintattica`Private`n - 1, *)
(*       AnalisiSintattica`Private`cols] + 1, *)
(*    AnalisiSintattica`Private`col[AnalisiSintattica`Private`n_] := *)
(*     Mod[AnalisiSintattica`Private`n - 1, AnalisiSintattica`Private`cols] + *)
(*      1, AnalisiSintattica`Private`loc[{AnalisiSintattica`Private`x_, *)
(*       AnalisiSintattica`Private`y_}] := *)
(*     1 + Floor[AnalisiSintattica`Private`cols*AnalisiSintattica`Private`x] + *)
(*      AnalisiSintattica`Private`cols*Floor[(1 - AnalisiSintattica`Private`y)**)
(*         AnalisiSintattica`Private`rows], *)
(*    AnalisiSintattica`Private`nullable = {{"A", True}, {"B", True}, *)
(*      {"C", True}, {"D", True}}, AnalisiSintattica`Private`displayFirstSln[*)
(*      AnalisiSintattica`Private`g_] := AnalisiSintattica`Private`displayFirst[*)
(*      AnalisiSintattica`Private`g], *)
(*    AnalisiSintattica`Private`displayFollowSln[*)
(*      AnalisiSintattica`Private`g_] := *)
(*     AnalisiSintattica`Private`displayFollow[AnalisiSintattica`Private`g], *)
(*    AnalisiSintattica`Private`displayTableSln[*)
(*      AnalisiSintattica`Private`g_] := AnalisiSintattica`Private`displayTable[*)
(*      AnalisiSintattica`Private`g, 0]}]*)


(* ::Output:: *)
(*Manipulate[Grid[{{Column[{Style["ANALISI SINTATTICA", Bold], *)
(*       Style["ESERCIZIO DI GRAMMATICA N\[Degree]:", Bold], Style["Generare gli \*)
(*insiemi Nullable, First e Follow per la seguente grammatica", Bold]}, *)
(*      Alignment -> Left]}, *)
(*    {Column[{Row[{Button["Nuova grammatica", *)
(*          (AnalisiSintattica`Private`cursor = 0; Spacer[5]; *)
(*            AnalisiSintattica`Private`showSolution = False; *)
(*            AnalisiSintattica`Private`soluzione = *)
(*             AnalisiSintattica`Private`grammar; *)
(*            AnalisiSintattica`Private`emptyGrammar = *)
(*             AnalisiSintattica`Private`createEmptyGrammar[*)
(*              AnalisiSintattica`Private`soluzione]; ) & ], *)
(*         DynamicModule[{AnalisiSintattica`Private`numero = ""}, *)
(*          Panel[Column[{Row[{Style["Genera esercizio n\[Degree]: ", Bold], *)
(*               InputField[Dynamic[AnalisiSintattica`Private`numero], *)
(*                Number]}], Dynamic[AnalisiSintattica`Private`numero]; }]]]}], *)
(*       " ", Row[{Column[{Style["Grammatica", Bold], *)
(*           Grid[List /@ AnalisiSintattica`Private`listaProduzioni, *)
(*            Frame -> All, Background -> {White, White}, ItemStyle -> *)
(*             {Automatic}, ItemSize -> {{8, {8}}}, BaseStyle -> *)
(*             {Bold}*Editable -> False]}, Alignment -> Left]}], " ", *)
(*       Row[{Column[{Style["NULLABLE", Bold], TabView[*)
(*            Table[AnalisiSintattica`Private`tmp[[*)
(*               AnalisiSintattica`Private`i]] -> PopupMenu[" ", {*)
(*                AnalisiSintattica`Private`TRUE, *)
(*                AnalisiSintattica`Private`FALSE}], *)
(*             {AnalisiSintattica`Private`i, 1, Length[*)
(*               AnalisiSintattica`Private`tmp]}]]}, Alignment -> Left], " "}], *)
(*       " ", Row[{Column[{Style["FIRST", Bold], Style["Dato un non terminale, \*)
(*il suo insieme First \[EGrave] composto dai simboli terminali (compreso \[Epsilon]) che \*)
(*possono apparire come caratteri iniziali di una stringa derivata da una sua \*)
(*produzione."], Framed["Dato un non terminale, il suo insieme First \[EGrave] composto \*)
(*dai simboli terminali (compreso \[Epsilon]) che possono apparire come caratteri \*)
(*iniziali di una stringa derivata da una sua produzione.", FrameStyle -> *)
(*             Directive[Black, Thick]], AnalisiSintattica`Private`displayFirst[*)
(*            AnalisiSintattica`Private`emptyCheckboxGrammar]}, *)
(*          Alignment -> Left]}], Row[{Column[{Style["FOLLOW", Bold], *)
(*           AnalisiSintattica`Private`displayFollow[*)
(*            AnalisiSintattica`Private`emptyCheckboxGrammar]}, *)
(*          Alignment -> Left]}], *)
(*       Row[{Column[{Style["TABELLA PRODUZIONI", Bold], EventHandler[*)
(*            Dynamic[AnalisiSintattica`Private`displayTable[*)
(*              AnalisiSintattica`Private`emptyGrammar, *)
(*              AnalisiSintattica`Private`cursor]], "MouseClicked" :> *)
(*             If[MemberQ[Range[1, AnalisiSintattica`Private`rows**)
(*                  AnalisiSintattica`Private`cols, *)
(*                 AnalisiSintattica`Private`cols], *)
(*                AnalisiSintattica`Private`loc[MousePosition[*)
(*                  "EventHandlerScaled"]]] || MemberQ[Range[1, *)
(*                 AnalisiSintattica`Private`cols], *)
(*                AnalisiSintattica`Private`loc[MousePosition[*)
(*                  "EventHandlerScaled"]]], AnalisiSintattica`Private`cursor = *)
(*               -1, AnalisiSintattica`Private`cursor = *)
(*               AnalisiSintattica`Private`loc[MousePosition[*)
(*                 "EventHandlerScaled"]]]], *)
(*           Row[Table[With[{AnalisiSintattica`Private`i$ = *)
(*                AnalisiSintattica`Private`i}, Button[*)
(*               AnalisiSintattica`Private`listaProduzioni[[*)
(*                AnalisiSintattica`Private`i$]], *)
(*               AnalisiSintattica`Private`emptyGrammar[[*)
(*                  AnalisiSintattica`Private`xy[*)
(*                    AnalisiSintattica`Private`cursor][[1]],*)
(*                  AnalisiSintattica`Private`xy[*)
(*                    AnalisiSintattica`Private`cursor][[2]]]] = *)
(*                 AnalisiSintattica`Private`listaProduzioni[[*)
(*                  AnalisiSintattica`Private`i$]]; *)
(*                If[AnalisiSintattica`Private`soluzione[[*)
(*                   AnalisiSintattica`Private`xy[*)
(*                     AnalisiSintattica`Private`cursor][[1]],*)
(*                   AnalisiSintattica`Private`xy[*)
(*                     AnalisiSintattica`Private`cursor][[2]]]] != *)
(*                  AnalisiSintattica`Private`emptyGrammar[[*)
(*                   AnalisiSintattica`Private`xy[*)
(*                     AnalisiSintattica`Private`cursor][[1]],*)
(*                   AnalisiSintattica`Private`xy[*)
(*                     AnalisiSintattica`Private`cursor][[2]]]], Beep[]]]], *)
(*             {AnalisiSintattica`Private`i, 1, Length[*)
(*               AnalisiSintattica`Private`listaProduzioni]}], Spacer[0.5]], *)
(*           Row[{Button["Clear", AnalisiSintattica`Private`emptyGrammar[[*)
(*                AnalisiSintattica`Private`xy[*)
(*                  AnalisiSintattica`Private`cursor][[1]],*)
(*                AnalisiSintattica`Private`xy[*)
(*                  AnalisiSintattica`Private`cursor][[2]]]] = " "], *)
(*             Button["Clear All", Table[*)
(*               AnalisiSintattica`Private`emptyGrammar[[*)
(*                 AnalisiSintattica`Private`i,AnalisiSintattica`Private`j]] = *)
(*                " ", {AnalisiSintattica`Private`i, 2, *)
(*                AnalisiSintattica`Private`rows}, {*)
(*                AnalisiSintattica`Private`j, 2, *)
(*                AnalisiSintattica`Private`cols}]]}]}]}], *)
(*       If[AnalisiSintattica`Private`showNullable, *)
(*        Column[{Style["Mostra Nullable", Bold], *)
(*          TabView[Table[AnalisiSintattica`Private`tmp[[*)
(*              AnalisiSintattica`Private`i]] -> *)
(*             AnalisiSintattica`Private`nullable[[AnalisiSintattica`Private`i,*)
(*              2]], {AnalisiSintattica`Private`i, 1, *)
(*             Length[AnalisiSintattica`Private`tmp]}]]}, Alignment -> Right], *)
(*        " "], If[AnalisiSintattica`Private`showFirst, *)
(*        Column[{Style["Mostra First", Bold], *)
(*          AnalisiSintattica`Private`displayFirstSln[*)
(*           AnalisiSintattica`Private`emptyCheckboxGrammar]}, *)
(*         Alignment -> Right], ""], If[AnalisiSintattica`Private`showFollow, *)
(*        Column[{Style["Mostra First", Bold], *)
(*          AnalisiSintattica`Private`displayFollowSln[*)
(*           AnalisiSintattica`Private`emptyCheckboxGrammar]}, *)
(*         Alignment -> Right], ""], If[AnalisiSintattica`Private`showSolution, *)
(*        Row[{AnalisiSintattica`Private`displayTableSln[*)
(*           AnalisiSintattica`Private`soluzione]}], ""]}, Alignment -> Left], *)
(*     " "}}, Editable -> False], {{AnalisiSintattica`Private`soluzione, *)
(*    {{" ", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "$"}, *)
(*     {"A", "A->Bab", " ", "A->Bab", "A->Bab", "A->Bab", "A->C", "A->C", *)
(*      "A->C", " ", " ", " ", " ", " "}, {"B", "B->\[Epsilon]", " ", "B->cD", "B->d", *)
(*      "B->e", " ", " ", " ", " ", " ", " ", " ", " "}, *)
(*     {"C", " ", " ", " ", " ", " ", "C->f", "C->g", "C->h", " ", " ", " ", *)
(*      " ", "C->\[Epsilon]"}, {"D", "D->\[Epsilon]", " ", " ", " ", " ", " ", " ", " ", " ", *)
(*      "D->jik", " ", " ", " "}}}, ControlType -> None}, *)
(*  {{AnalisiSintattica`Private`emptyGrammar, *)
(*    {{" ", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "$"}, *)
(*     {"A", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "}, *)
(*     {"B", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "}, *)
(*     {"C", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "}, *)
(*     {"D", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", *)
(*      " "}}}, ControlType -> None}, *)
(*  {{AnalisiSintattica`Private`emptyCheckboxGrammar, *)
(*    {{" ", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "$"}, *)
(*     {"A", Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], *)
(*      Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], *)
(*      Checkbox[], Checkbox[]}, {"B", Checkbox[], Checkbox[], Checkbox[], *)
(*      Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], *)
(*      Checkbox[], Checkbox[], Checkbox[], Checkbox[]}, *)
(*     {"C", Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], *)
(*      Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], *)
(*      Checkbox[], Checkbox[]}, {"D", Checkbox[], Checkbox[], Checkbox[], *)
(*      Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], *)
(*      Checkbox[], Checkbox[], Checkbox[], Checkbox[]}}}, *)
(*   ControlType -> None}, {{AnalisiSintattica`Private`cursor, 0}, *)
(*   ControlType -> None}, {{AnalisiSintattica`Private`showNullable, False, *)
(*    "Mostra Nullable"}, {True, False}}, *)
(*  {{AnalisiSintattica`Private`showFirst, False, "Mostra First"}, *)
(*   {True, False}}, {{AnalisiSintattica`Private`showFollow, False, *)
(*    "Mostra Follow"}, {True, False}}, *)
(*  {{AnalisiSintattica`Private`showSolution, False, "show solution"}, *)
(*   {True, False}}, ContentSize -> {900, 900}, *)
(*  Initialization :> {AnalisiSintattica`Private`soluzione = *)
(*     {{" ", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "$"}, *)
(*      {"A", "A->Bab", " ", "A->Bab", "A->Bab", "A->Bab", "A->C", "A->C", *)
(*       "A->C", " ", " ", " ", " ", " "}, {"B", "B->\[Epsilon]", " ", "B->cD", "B->d", *)
(*       "B->e", " ", " ", " ", " ", " ", " ", " ", " "}, *)
(*      {"C", " ", " ", " ", " ", " ", "C->f", "C->g", "C->h", " ", " ", " ", *)
(*       " ", "C->\[Epsilon]"}, {"D", "D->\[Epsilon]", " ", " ", " ", " ", " ", " ", " ", " ", *)
(*       "D->jik", " ", " ", " "}}, AnalisiSintattica`Private`grammar = *)
(*     {{" ", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "$"}, *)
(*      {"A", "A->Bab", " ", "A->Bab", "A->Bab", "A->Bab", "A->C", "A->C", *)
(*       "A->C", " ", " ", " ", " ", " "}, {"B", "B->\[Epsilon]", " ", "B->cD", "B->d", *)
(*       "B->e", " ", " ", " ", " ", " ", " ", " ", " "}, *)
(*      {"C", " ", " ", " ", " ", " ", "C->f", "C->g", "C->h", " ", " ", " ", *)
(*       " ", "C->\[Epsilon]"}, {"D", "D->\[Epsilon]", " ", " ", " ", " ", " ", " ", " ", " ", *)
(*       "D->jik", " ", " ", " "}}, *)
(*    AnalisiSintattica`Private`createEmptyGrammar[*)
(*      AnalisiSintattica`Private`sln_] := *)
(*     Module[{AnalisiSintattica`Private`copy = AnalisiSintattica`Private`sln}, *)
(*      Table[If[AnalisiSintattica`Private`i > 1 && *)
(*          AnalisiSintattica`Private`j > 1, AnalisiSintattica`Private`copy[[*)
(*           AnalisiSintattica`Private`i,AnalisiSintattica`Private`j]] = " "], *)
(*        {AnalisiSintattica`Private`i, AnalisiSintattica`Private`rows}, *)
(*        {AnalisiSintattica`Private`j, AnalisiSintattica`Private`cols}]; *)
(*       AnalisiSintattica`Private`copy], AnalisiSintattica`Private`i = 5, *)
(*    AnalisiSintattica`Private`j = 3, AnalisiSintattica`Private`rows = 5, *)
(*    AnalisiSintattica`Private`cols = 14, *)
(*    AnalisiSintattica`Private`listaProduzioni = {"A->C", "A->Bab", "B->cD", *)
(*      "B->d", "B->e", "B->\[Epsilon]", "C->h", "C->g", "C->f", "C->\[Epsilon]", "D->jik", *)
(*      "D->\[Epsilon]"}, AnalisiSintattica`Private`tmp = {"A", "B", "C", "D"}, *)
(*    AnalisiSintattica`Private`displayFirst[AnalisiSintattica`Private`g_] := *)
(*     Grid[AnalisiSintattica`Private`g, Frame -> All, *)
(*      Background -> {White, White}, ItemStyle -> {Automatic}, *)
(*      ItemSize -> {{2, {2}}}, BaseStyle -> {Bold}*Editable -> False], *)
(*    AnalisiSintattica`Private`displayFollow[AnalisiSintattica`Private`g_] := *)
(*     Grid[AnalisiSintattica`Private`g, Frame -> All, *)
(*      Background -> {White, White}, ItemStyle -> {Automatic}, *)
(*      ItemSize -> {{2, {2}}}, BaseStyle -> {Bold}*Editable -> False], *)
(*    AnalisiSintattica`Private`displayTable[AnalisiSintattica`Private`g_, *)
(*      AnalisiSintattica`Private`cursor_:0] := *)
(*     Grid[AnalisiSintattica`Private`g, *)
(*      Frame -> If[MatchQ[AnalisiSintattica`Private`xy[*)
(*          AnalisiSintattica`Private`cursor], _Integer], All, *)
(*        {All, All, {AnalisiSintattica`Private`xy[*)
(*            AnalisiSintattica`Private`cursor] -> {Thick, Blue}}}], *)
(*      Background -> {White, White}, ItemStyle -> {Automatic}, *)
(*      ItemSize -> {{3, {4}}}, BaseStyle -> {Bold}, Editable -> False], *)
(*    AnalisiSintattica`Private`xy[AnalisiSintattica`Private`n_] := *)
(*     {AnalisiSintattica`Private`row[AnalisiSintattica`Private`n], *)
(*      AnalisiSintattica`Private`col[AnalisiSintattica`Private`n]}, *)
(*    AnalisiSintattica`Private`row[AnalisiSintattica`Private`n_] := *)
(*     Quotient[AnalisiSintattica`Private`n - 1, *)
(*       AnalisiSintattica`Private`cols] + 1, *)
(*    AnalisiSintattica`Private`col[AnalisiSintattica`Private`n_] := *)
(*     Mod[AnalisiSintattica`Private`n - 1, AnalisiSintattica`Private`cols] + *)
(*      1, AnalisiSintattica`Private`loc[{AnalisiSintattica`Private`x_, *)
(*       AnalisiSintattica`Private`y_}] := *)
(*     1 + Floor[AnalisiSintattica`Private`cols*AnalisiSintattica`Private`x] + *)
(*      AnalisiSintattica`Private`cols*Floor[(1 - AnalisiSintattica`Private`y)**)
(*         AnalisiSintattica`Private`rows], *)
(*    AnalisiSintattica`Private`nullable = {{"A", True}, {"B", True}, *)
(*      {"C", True}, {"D", True}}, AnalisiSintattica`Private`displayFirstSln[*)
(*      AnalisiSintattica`Private`g_] := AnalisiSintattica`Private`displayFirst[*)
(*      AnalisiSintattica`Private`g], *)
(*    AnalisiSintattica`Private`displayFollowSln[*)
(*      AnalisiSintattica`Private`g_] := *)
(*     AnalisiSintattica`Private`displayFollow[AnalisiSintattica`Private`g], *)
(*    AnalisiSintattica`Private`displayTableSln[*)
(*      AnalisiSintattica`Private`g_] := AnalisiSintattica`Private`displayTable[*)
(*      AnalisiSintattica`Private`g, 0]}]*)


(* ::Output:: *)
(*Manipulate[Grid[{{Column[{Style["ANALISI SINTATTICA", Bold], *)
(*       Style["ESERCIZIO DI GRAMMATICA N\[Degree]:", Bold], Style["Generare gli \*)
(*insiemi Nullable, First e Follow per la seguente grammatica", Bold]}, *)
(*      Alignment -> Left]}, *)
(*    {Column[{Row[{Button["Nuova grammatica", *)
(*          (AnalisiSintattica`Private`cursor = 0; Spacer[5]; *)
(*            AnalisiSintattica`Private`showSolution = False; *)
(*            AnalisiSintattica`Private`soluzione = *)
(*             AnalisiSintattica`Private`grammar; *)
(*            AnalisiSintattica`Private`emptyGrammar = *)
(*             AnalisiSintattica`Private`createEmptyGrammar[*)
(*              AnalisiSintattica`Private`soluzione]; ) & ], *)
(*         DynamicModule[{AnalisiSintattica`Private`numero = ""}, *)
(*          Panel[Column[{Row[{Style["Genera esercizio n\[Degree]: ", Bold], *)
(*               InputField[Dynamic[AnalisiSintattica`Private`numero], *)
(*                Number]}], Dynamic[AnalisiSintattica`Private`numero]; }]]]}], *)
(*       " ", Row[{Column[{Style["Grammatica", Bold], *)
(*           Grid[List /@ AnalisiSintattica`Private`listaProduzioni, *)
(*            Frame -> All, Background -> {White, White}, ItemStyle -> *)
(*             {Automatic}, ItemSize -> {{8, {8}}}, BaseStyle -> *)
(*             {Bold}*Editable -> False]}, Alignment -> Left]}], " ", *)
(*       Row[{Column[{Style["NULLABLE", Bold], TabView[*)
(*            Table[AnalisiSintattica`Private`tmp[[*)
(*               AnalisiSintattica`Private`i]] -> PopupMenu[" ", {*)
(*                AnalisiSintattica`Private`TRUE, *)
(*                AnalisiSintattica`Private`FALSE}], *)
(*             {AnalisiSintattica`Private`i, 1, Length[*)
(*               AnalisiSintattica`Private`tmp]}]]}, Alignment -> Left], " "}], *)
(*       " ", Row[{Column[{Style["FIRST", Bold], Style["Dato un non terminale, \*)
(*il suo insieme First \[EGrave] composto dai simboli terminali (compreso \[Epsilon]) che \*)
(*possono apparire come caratteri iniziali di una stringa derivata da una sua \*)
(*produzione."], Framed["Your Text", FrameStyle -> Directive[Red, Thick]], *)
(*           AnalisiSintattica`Private`displayFirst[*)
(*            AnalisiSintattica`Private`emptyCheckboxGrammar]}, *)
(*          Alignment -> Left]}], Row[{Column[{Style["FOLLOW", Bold], *)
(*           AnalisiSintattica`Private`displayFollow[*)
(*            AnalisiSintattica`Private`emptyCheckboxGrammar]}, *)
(*          Alignment -> Left]}], *)
(*       Row[{Column[{Style["TABELLA PRODUZIONI", Bold], EventHandler[*)
(*            Dynamic[AnalisiSintattica`Private`displayTable[*)
(*              AnalisiSintattica`Private`emptyGrammar, *)
(*              AnalisiSintattica`Private`cursor]], "MouseClicked" :> *)
(*             If[MemberQ[Range[1, AnalisiSintattica`Private`rows**)
(*                  AnalisiSintattica`Private`cols, *)
(*                 AnalisiSintattica`Private`cols], *)
(*                AnalisiSintattica`Private`loc[MousePosition[*)
(*                  "EventHandlerScaled"]]] || MemberQ[Range[1, *)
(*                 AnalisiSintattica`Private`cols], *)
(*                AnalisiSintattica`Private`loc[MousePosition[*)
(*                  "EventHandlerScaled"]]], AnalisiSintattica`Private`cursor = *)
(*               -1, AnalisiSintattica`Private`cursor = *)
(*               AnalisiSintattica`Private`loc[MousePosition[*)
(*                 "EventHandlerScaled"]]]], *)
(*           Row[Table[With[{AnalisiSintattica`Private`i$ = *)
(*                AnalisiSintattica`Private`i}, Button[*)
(*               AnalisiSintattica`Private`listaProduzioni[[*)
(*                AnalisiSintattica`Private`i$]], *)
(*               AnalisiSintattica`Private`emptyGrammar[[*)
(*                  AnalisiSintattica`Private`xy[*)
(*                    AnalisiSintattica`Private`cursor][[1]],*)
(*                  AnalisiSintattica`Private`xy[*)
(*                    AnalisiSintattica`Private`cursor][[2]]]] = *)
(*                 AnalisiSintattica`Private`listaProduzioni[[*)
(*                  AnalisiSintattica`Private`i$]]; *)
(*                If[AnalisiSintattica`Private`soluzione[[*)
(*                   AnalisiSintattica`Private`xy[*)
(*                     AnalisiSintattica`Private`cursor][[1]],*)
(*                   AnalisiSintattica`Private`xy[*)
(*                     AnalisiSintattica`Private`cursor][[2]]]] != *)
(*                  AnalisiSintattica`Private`emptyGrammar[[*)
(*                   AnalisiSintattica`Private`xy[*)
(*                     AnalisiSintattica`Private`cursor][[1]],*)
(*                   AnalisiSintattica`Private`xy[*)
(*                     AnalisiSintattica`Private`cursor][[2]]]], Beep[]]]], *)
(*             {AnalisiSintattica`Private`i, 1, Length[*)
(*               AnalisiSintattica`Private`listaProduzioni]}], Spacer[0.5]], *)
(*           Row[{Button["Clear", AnalisiSintattica`Private`emptyGrammar[[*)
(*                AnalisiSintattica`Private`xy[*)
(*                  AnalisiSintattica`Private`cursor][[1]],*)
(*                AnalisiSintattica`Private`xy[*)
(*                  AnalisiSintattica`Private`cursor][[2]]]] = " "], *)
(*             Button["Clear All", Table[*)
(*               AnalisiSintattica`Private`emptyGrammar[[*)
(*                 AnalisiSintattica`Private`i,AnalisiSintattica`Private`j]] = *)
(*                " ", {AnalisiSintattica`Private`i, 2, *)
(*                AnalisiSintattica`Private`rows}, {*)
(*                AnalisiSintattica`Private`j, 2, *)
(*                AnalisiSintattica`Private`cols}]]}]}]}], *)
(*       If[AnalisiSintattica`Private`showNullable, *)
(*        Column[{Style["Mostra Nullable", Bold], *)
(*          TabView[Table[AnalisiSintattica`Private`tmp[[*)
(*              AnalisiSintattica`Private`i]] -> *)
(*             AnalisiSintattica`Private`nullable[[AnalisiSintattica`Private`i,*)
(*              2]], {AnalisiSintattica`Private`i, 1, *)
(*             Length[AnalisiSintattica`Private`tmp]}]]}, Alignment -> Right], *)
(*        " "], If[AnalisiSintattica`Private`showFirst, *)
(*        Column[{Style["Mostra First", Bold], *)
(*          AnalisiSintattica`Private`displayFirstSln[*)
(*           AnalisiSintattica`Private`emptyCheckboxGrammar]}, *)
(*         Alignment -> Right], ""], If[AnalisiSintattica`Private`showFollow, *)
(*        Column[{Style["Mostra First", Bold], *)
(*          AnalisiSintattica`Private`displayFollowSln[*)
(*           AnalisiSintattica`Private`emptyCheckboxGrammar]}, *)
(*         Alignment -> Right], ""], If[AnalisiSintattica`Private`showSolution, *)
(*        Row[{AnalisiSintattica`Private`displayTableSln[*)
(*           AnalisiSintattica`Private`soluzione]}], ""]}, Alignment -> Left], *)
(*     " "}}, Editable -> False], {{AnalisiSintattica`Private`soluzione, *)
(*    {{" ", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "$"}, *)
(*     {"A", "A->Bab", " ", "A->Bab", "A->Bab", "A->Bab", "A->C", "A->C", *)
(*      "A->C", " ", " ", " ", " ", " "}, {"B", "B->\[Epsilon]", " ", "B->cD", "B->d", *)
(*      "B->e", " ", " ", " ", " ", " ", " ", " ", " "}, *)
(*     {"C", " ", " ", " ", " ", " ", "C->f", "C->g", "C->h", " ", " ", " ", *)
(*      " ", "C->\[Epsilon]"}, {"D", "D->\[Epsilon]", " ", " ", " ", " ", " ", " ", " ", " ", *)
(*      "D->jik", " ", " ", " "}}}, ControlType -> None}, *)
(*  {{AnalisiSintattica`Private`emptyGrammar, *)
(*    {{" ", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "$"}, *)
(*     {"A", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "}, *)
(*     {"B", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "}, *)
(*     {"C", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "}, *)
(*     {"D", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", *)
(*      " "}}}, ControlType -> None}, *)
(*  {{AnalisiSintattica`Private`emptyCheckboxGrammar, *)
(*    {{" ", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "$"}, *)
(*     {"A", Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], *)
(*      Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], *)
(*      Checkbox[], Checkbox[]}, {"B", Checkbox[], Checkbox[], Checkbox[], *)
(*      Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], *)
(*      Checkbox[], Checkbox[], Checkbox[], Checkbox[]}, *)
(*     {"C", Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], *)
(*      Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], *)
(*      Checkbox[], Checkbox[]}, {"D", Checkbox[], Checkbox[], Checkbox[], *)
(*      Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], *)
(*      Checkbox[], Checkbox[], Checkbox[], Checkbox[]}}}, *)
(*   ControlType -> None}, {{AnalisiSintattica`Private`cursor, 0}, *)
(*   ControlType -> None}, {{AnalisiSintattica`Private`showNullable, False, *)
(*    "Mostra Nullable"}, {True, False}}, *)
(*  {{AnalisiSintattica`Private`showFirst, False, "Mostra First"}, *)
(*   {True, False}}, {{AnalisiSintattica`Private`showFollow, False, *)
(*    "Mostra Follow"}, {True, False}}, *)
(*  {{AnalisiSintattica`Private`showSolution, False, "show solution"}, *)
(*   {True, False}}, ContentSize -> {900, 900}, *)
(*  Initialization :> {AnalisiSintattica`Private`soluzione = *)
(*     {{" ", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "$"}, *)
(*      {"A", "A->Bab", " ", "A->Bab", "A->Bab", "A->Bab", "A->C", "A->C", *)
(*       "A->C", " ", " ", " ", " ", " "}, {"B", "B->\[Epsilon]", " ", "B->cD", "B->d", *)
(*       "B->e", " ", " ", " ", " ", " ", " ", " ", " "}, *)
(*      {"C", " ", " ", " ", " ", " ", "C->f", "C->g", "C->h", " ", " ", " ", *)
(*       " ", "C->\[Epsilon]"}, {"D", "D->\[Epsilon]", " ", " ", " ", " ", " ", " ", " ", " ", *)
(*       "D->jik", " ", " ", " "}}, AnalisiSintattica`Private`grammar = *)
(*     {{" ", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "$"}, *)
(*      {"A", "A->Bab", " ", "A->Bab", "A->Bab", "A->Bab", "A->C", "A->C", *)
(*       "A->C", " ", " ", " ", " ", " "}, {"B", "B->\[Epsilon]", " ", "B->cD", "B->d", *)
(*       "B->e", " ", " ", " ", " ", " ", " ", " ", " "}, *)
(*      {"C", " ", " ", " ", " ", " ", "C->f", "C->g", "C->h", " ", " ", " ", *)
(*       " ", "C->\[Epsilon]"}, {"D", "D->\[Epsilon]", " ", " ", " ", " ", " ", " ", " ", " ", *)
(*       "D->jik", " ", " ", " "}}, *)
(*    AnalisiSintattica`Private`createEmptyGrammar[*)
(*      AnalisiSintattica`Private`sln_] := *)
(*     Module[{AnalisiSintattica`Private`copy = AnalisiSintattica`Private`sln}, *)
(*      Table[If[AnalisiSintattica`Private`i > 1 && *)
(*          AnalisiSintattica`Private`j > 1, AnalisiSintattica`Private`copy[[*)
(*           AnalisiSintattica`Private`i,AnalisiSintattica`Private`j]] = " "], *)
(*        {AnalisiSintattica`Private`i, AnalisiSintattica`Private`rows}, *)
(*        {AnalisiSintattica`Private`j, AnalisiSintattica`Private`cols}]; *)
(*       AnalisiSintattica`Private`copy], AnalisiSintattica`Private`i = 5, *)
(*    AnalisiSintattica`Private`j = 3, AnalisiSintattica`Private`rows = 5, *)
(*    AnalisiSintattica`Private`cols = 14, *)
(*    AnalisiSintattica`Private`listaProduzioni = {"A->C", "A->Bab", "B->cD", *)
(*      "B->d", "B->e", "B->\[Epsilon]", "C->h", "C->g", "C->f", "C->\[Epsilon]", "D->jik", *)
(*      "D->\[Epsilon]"}, AnalisiSintattica`Private`tmp = {"A", "B", "C", "D"}, *)
(*    AnalisiSintattica`Private`displayFirst[AnalisiSintattica`Private`g_] := *)
(*     Grid[AnalisiSintattica`Private`g, Frame -> All, *)
(*      Background -> {White, White}, ItemStyle -> {Automatic}, *)
(*      ItemSize -> {{2, {2}}}, BaseStyle -> {Bold}*Editable -> False], *)
(*    AnalisiSintattica`Private`displayFollow[AnalisiSintattica`Private`g_] := *)
(*     Grid[AnalisiSintattica`Private`g, Frame -> All, *)
(*      Background -> {White, White}, ItemStyle -> {Automatic}, *)
(*      ItemSize -> {{2, {2}}}, BaseStyle -> {Bold}*Editable -> False], *)
(*    AnalisiSintattica`Private`displayTable[AnalisiSintattica`Private`g_, *)
(*      AnalisiSintattica`Private`cursor_:0] := *)
(*     Grid[AnalisiSintattica`Private`g, *)
(*      Frame -> If[MatchQ[AnalisiSintattica`Private`xy[*)
(*          AnalisiSintattica`Private`cursor], _Integer], All, *)
(*        {All, All, {AnalisiSintattica`Private`xy[*)
(*            AnalisiSintattica`Private`cursor] -> {Thick, Blue}}}], *)
(*      Background -> {White, White}, ItemStyle -> {Automatic}, *)
(*      ItemSize -> {{3, {4}}}, BaseStyle -> {Bold}, Editable -> False], *)
(*    AnalisiSintattica`Private`xy[AnalisiSintattica`Private`n_] := *)
(*     {AnalisiSintattica`Private`row[AnalisiSintattica`Private`n], *)
(*      AnalisiSintattica`Private`col[AnalisiSintattica`Private`n]}, *)
(*    AnalisiSintattica`Private`row[AnalisiSintattica`Private`n_] := *)
(*     Quotient[AnalisiSintattica`Private`n - 1, *)
(*       AnalisiSintattica`Private`cols] + 1, *)
(*    AnalisiSintattica`Private`col[AnalisiSintattica`Private`n_] := *)
(*     Mod[AnalisiSintattica`Private`n - 1, AnalisiSintattica`Private`cols] + *)
(*      1, AnalisiSintattica`Private`loc[{AnalisiSintattica`Private`x_, *)
(*       AnalisiSintattica`Private`y_}] := *)
(*     1 + Floor[AnalisiSintattica`Private`cols*AnalisiSintattica`Private`x] + *)
(*      AnalisiSintattica`Private`cols*Floor[(1 - AnalisiSintattica`Private`y)**)
(*         AnalisiSintattica`Private`rows], *)
(*    AnalisiSintattica`Private`nullable = {{"A", True}, {"B", True}, *)
(*      {"C", True}, {"D", True}}, AnalisiSintattica`Private`displayFirstSln[*)
(*      AnalisiSintattica`Private`g_] := AnalisiSintattica`Private`displayFirst[*)
(*      AnalisiSintattica`Private`g], *)
(*    AnalisiSintattica`Private`displayFollowSln[*)
(*      AnalisiSintattica`Private`g_] := *)
(*     AnalisiSintattica`Private`displayFollow[AnalisiSintattica`Private`g], *)
(*    AnalisiSintattica`Private`displayTableSln[*)
(*      AnalisiSintattica`Private`g_] := AnalisiSintattica`Private`displayTable[*)
(*      AnalisiSintattica`Private`g, 0]}]*)


(* ::Output:: *)
(*Manipulate[Grid[{{Column[{Style["ANALISI SINTATTICA", Bold], *)
(*       Style["ESERCIZIO DI GRAMMATICA N\[Degree]:", Bold], Style["Generare gli \*)
(*insiemi Nullable, First e Follow per la seguente grammatica", Bold]}, *)
(*      Alignment -> Left]}, *)
(*    {Column[{Row[{Button["Nuova grammatica", *)
(*          (AnalisiSintattica`Private`cursor = 0; Spacer[5]; *)
(*            AnalisiSintattica`Private`showSolution = False; *)
(*            AnalisiSintattica`Private`soluzione = *)
(*             AnalisiSintattica`Private`grammar; *)
(*            AnalisiSintattica`Private`emptyGrammar = *)
(*             AnalisiSintattica`Private`createEmptyGrammar[*)
(*              AnalisiSintattica`Private`soluzione]; ) & ], *)
(*         DynamicModule[{AnalisiSintattica`Private`numero = ""}, *)
(*          Panel[Column[{Row[{Style["Genera esercizio n\[Degree]: ", Bold], *)
(*               InputField[Dynamic[AnalisiSintattica`Private`numero], *)
(*                Number]}], Dynamic[AnalisiSintattica`Private`numero]; }]]]}], *)
(*       " ", Row[{Column[{Style["Grammatica", Bold], *)
(*           Grid[List /@ AnalisiSintattica`Private`listaProduzioni, *)
(*            Frame -> All, Background -> {White, White}, ItemStyle -> *)
(*             {Automatic}, ItemSize -> {{8, {8}}}, BaseStyle -> *)
(*             {Bold}*Editable -> False]}, Alignment -> Left]}], " ", *)
(*       Row[{Column[{Style["NULLABLE", Bold], TabView[*)
(*            Table[AnalisiSintattica`Private`tmp[[*)
(*               AnalisiSintattica`Private`i]] -> PopupMenu[" ", {*)
(*                AnalisiSintattica`Private`TRUE, *)
(*                AnalisiSintattica`Private`FALSE}], *)
(*             {AnalisiSintattica`Private`i, 1, Length[*)
(*               AnalisiSintattica`Private`tmp]}]]}, Alignment -> Left], " "}], *)
(*       " ", Row[{Column[{Style["FIRST", Bold], Box[Style["Dato un non \*)
(*terminale, il suo insieme First \[EGrave] composto dai simboli terminali (compreso \[Epsilon]) \*)
(*che possono apparire come caratteri iniziali di una stringa derivata da una \*)
(*sua produzione."]], AnalisiSintattica`Private`displayFirst[*)
(*            AnalisiSintattica`Private`emptyCheckboxGrammar]}, *)
(*          Alignment -> Left]}], Row[{Column[{Style["FOLLOW", Bold], *)
(*           AnalisiSintattica`Private`displayFollow[*)
(*            AnalisiSintattica`Private`emptyCheckboxGrammar]}, *)
(*          Alignment -> Left]}], *)
(*       Row[{Column[{Style["TABELLA PRODUZIONI", Bold], EventHandler[*)
(*            Dynamic[AnalisiSintattica`Private`displayTable[*)
(*              AnalisiSintattica`Private`emptyGrammar, *)
(*              AnalisiSintattica`Private`cursor]], "MouseClicked" :> *)
(*             If[MemberQ[Range[1, AnalisiSintattica`Private`rows**)
(*                  AnalisiSintattica`Private`cols, *)
(*                 AnalisiSintattica`Private`cols], *)
(*                AnalisiSintattica`Private`loc[MousePosition[*)
(*                  "EventHandlerScaled"]]] || MemberQ[Range[1, *)
(*                 AnalisiSintattica`Private`cols], *)
(*                AnalisiSintattica`Private`loc[MousePosition[*)
(*                  "EventHandlerScaled"]]], AnalisiSintattica`Private`cursor = *)
(*               -1, AnalisiSintattica`Private`cursor = *)
(*               AnalisiSintattica`Private`loc[MousePosition[*)
(*                 "EventHandlerScaled"]]]], *)
(*           Row[Table[With[{AnalisiSintattica`Private`i$ = *)
(*                AnalisiSintattica`Private`i}, Button[*)
(*               AnalisiSintattica`Private`listaProduzioni[[*)
(*                AnalisiSintattica`Private`i$]], *)
(*               AnalisiSintattica`Private`emptyGrammar[[*)
(*                  AnalisiSintattica`Private`xy[*)
(*                    AnalisiSintattica`Private`cursor][[1]],*)
(*                  AnalisiSintattica`Private`xy[*)
(*                    AnalisiSintattica`Private`cursor][[2]]]] = *)
(*                 AnalisiSintattica`Private`listaProduzioni[[*)
(*                  AnalisiSintattica`Private`i$]]; *)
(*                If[AnalisiSintattica`Private`soluzione[[*)
(*                   AnalisiSintattica`Private`xy[*)
(*                     AnalisiSintattica`Private`cursor][[1]],*)
(*                   AnalisiSintattica`Private`xy[*)
(*                     AnalisiSintattica`Private`cursor][[2]]]] != *)
(*                  AnalisiSintattica`Private`emptyGrammar[[*)
(*                   AnalisiSintattica`Private`xy[*)
(*                     AnalisiSintattica`Private`cursor][[1]],*)
(*                   AnalisiSintattica`Private`xy[*)
(*                     AnalisiSintattica`Private`cursor][[2]]]], Beep[]]]], *)
(*             {AnalisiSintattica`Private`i, 1, Length[*)
(*               AnalisiSintattica`Private`listaProduzioni]}], Spacer[0.5]], *)
(*           Row[{Button["Clear", AnalisiSintattica`Private`emptyGrammar[[*)
(*                AnalisiSintattica`Private`xy[*)
(*                  AnalisiSintattica`Private`cursor][[1]],*)
(*                AnalisiSintattica`Private`xy[*)
(*                  AnalisiSintattica`Private`cursor][[2]]]] = " "], *)
(*             Button["Clear All", Table[*)
(*               AnalisiSintattica`Private`emptyGrammar[[*)
(*                 AnalisiSintattica`Private`i,AnalisiSintattica`Private`j]] = *)
(*                " ", {AnalisiSintattica`Private`i, 2, *)
(*                AnalisiSintattica`Private`rows}, {*)
(*                AnalisiSintattica`Private`j, 2, *)
(*                AnalisiSintattica`Private`cols}]]}]}]}], *)
(*       If[AnalisiSintattica`Private`showNullable, *)
(*        Column[{Style["Mostra Nullable", Bold], *)
(*          TabView[Table[AnalisiSintattica`Private`tmp[[*)
(*              AnalisiSintattica`Private`i]] -> *)
(*             AnalisiSintattica`Private`nullable[[AnalisiSintattica`Private`i,*)
(*              2]], {AnalisiSintattica`Private`i, 1, *)
(*             Length[AnalisiSintattica`Private`tmp]}]]}, Alignment -> Right], *)
(*        " "], If[AnalisiSintattica`Private`showFirst, *)
(*        Column[{Style["Mostra First", Bold], *)
(*          AnalisiSintattica`Private`displayFirstSln[*)
(*           AnalisiSintattica`Private`emptyCheckboxGrammar]}, *)
(*         Alignment -> Right], ""], If[AnalisiSintattica`Private`showFollow, *)
(*        Column[{Style["Mostra First", Bold], *)
(*          AnalisiSintattica`Private`displayFollowSln[*)
(*           AnalisiSintattica`Private`emptyCheckboxGrammar]}, *)
(*         Alignment -> Right], ""], If[AnalisiSintattica`Private`showSolution, *)
(*        Row[{AnalisiSintattica`Private`displayTableSln[*)
(*           AnalisiSintattica`Private`soluzione]}], ""]}, Alignment -> Left], *)
(*     " "}}, Editable -> False], {{AnalisiSintattica`Private`soluzione, *)
(*    {{" ", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "$"}, *)
(*     {"A", "A->Bab", " ", "A->Bab", "A->Bab", "A->Bab", "A->C", "A->C", *)
(*      "A->C", " ", " ", " ", " ", " "}, {"B", "B->\[Epsilon]", " ", "B->cD", "B->d", *)
(*      "B->e", " ", " ", " ", " ", " ", " ", " ", " "}, *)
(*     {"C", " ", " ", " ", " ", " ", "C->f", "C->g", "C->h", " ", " ", " ", *)
(*      " ", "C->\[Epsilon]"}, {"D", "D->\[Epsilon]", " ", " ", " ", " ", " ", " ", " ", " ", *)
(*      "D->jik", " ", " ", " "}}}, ControlType -> None}, *)
(*  {{AnalisiSintattica`Private`emptyGrammar, *)
(*    {{" ", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "$"}, *)
(*     {"A", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "}, *)
(*     {"B", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "}, *)
(*     {"C", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "}, *)
(*     {"D", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", *)
(*      " "}}}, ControlType -> None}, *)
(*  {{AnalisiSintattica`Private`emptyCheckboxGrammar, *)
(*    {{" ", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "$"}, *)
(*     {"A", Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], *)
(*      Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], *)
(*      Checkbox[], Checkbox[]}, {"B", Checkbox[], Checkbox[], Checkbox[], *)
(*      Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], *)
(*      Checkbox[], Checkbox[], Checkbox[], Checkbox[]}, *)
(*     {"C", Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], *)
(*      Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], *)
(*      Checkbox[], Checkbox[]}, {"D", Checkbox[], Checkbox[], Checkbox[], *)
(*      Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], *)
(*      Checkbox[], Checkbox[], Checkbox[], Checkbox[]}}}, *)
(*   ControlType -> None}, {{AnalisiSintattica`Private`cursor, 0}, *)
(*   ControlType -> None}, {{AnalisiSintattica`Private`showNullable, False, *)
(*    "Mostra Nullable"}, {True, False}}, *)
(*  {{AnalisiSintattica`Private`showFirst, False, "Mostra First"}, *)
(*   {True, False}}, {{AnalisiSintattica`Private`showFollow, False, *)
(*    "Mostra Follow"}, {True, False}}, *)
(*  {{AnalisiSintattica`Private`showSolution, False, "show solution"}, *)
(*   {True, False}}, ContentSize -> {900, 900}, *)
(*  Initialization :> {AnalisiSintattica`Private`soluzione = *)
(*     {{" ", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "$"}, *)
(*      {"A", "A->Bab", " ", "A->Bab", "A->Bab", "A->Bab", "A->C", "A->C", *)
(*       "A->C", " ", " ", " ", " ", " "}, {"B", "B->\[Epsilon]", " ", "B->cD", "B->d", *)
(*       "B->e", " ", " ", " ", " ", " ", " ", " ", " "}, *)
(*      {"C", " ", " ", " ", " ", " ", "C->f", "C->g", "C->h", " ", " ", " ", *)
(*       " ", "C->\[Epsilon]"}, {"D", "D->\[Epsilon]", " ", " ", " ", " ", " ", " ", " ", " ", *)
(*       "D->jik", " ", " ", " "}}, AnalisiSintattica`Private`grammar = *)
(*     {{" ", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "$"}, *)
(*      {"A", "A->Bab", " ", "A->Bab", "A->Bab", "A->Bab", "A->C", "A->C", *)
(*       "A->C", " ", " ", " ", " ", " "}, {"B", "B->\[Epsilon]", " ", "B->cD", "B->d", *)
(*       "B->e", " ", " ", " ", " ", " ", " ", " ", " "}, *)
(*      {"C", " ", " ", " ", " ", " ", "C->f", "C->g", "C->h", " ", " ", " ", *)
(*       " ", "C->\[Epsilon]"}, {"D", "D->\[Epsilon]", " ", " ", " ", " ", " ", " ", " ", " ", *)
(*       "D->jik", " ", " ", " "}}, *)
(*    AnalisiSintattica`Private`createEmptyGrammar[*)
(*      AnalisiSintattica`Private`sln_] := *)
(*     Module[{AnalisiSintattica`Private`copy = AnalisiSintattica`Private`sln}, *)
(*      Table[If[AnalisiSintattica`Private`i > 1 && *)
(*          AnalisiSintattica`Private`j > 1, AnalisiSintattica`Private`copy[[*)
(*           AnalisiSintattica`Private`i,AnalisiSintattica`Private`j]] = " "], *)
(*        {AnalisiSintattica`Private`i, AnalisiSintattica`Private`rows}, *)
(*        {AnalisiSintattica`Private`j, AnalisiSintattica`Private`cols}]; *)
(*       AnalisiSintattica`Private`copy], AnalisiSintattica`Private`i = 5, *)
(*    AnalisiSintattica`Private`j = 3, AnalisiSintattica`Private`rows = 5, *)
(*    AnalisiSintattica`Private`cols = 14, *)
(*    AnalisiSintattica`Private`listaProduzioni = {"A->C", "A->Bab", "B->cD", *)
(*      "B->d", "B->e", "B->\[Epsilon]", "C->h", "C->g", "C->f", "C->\[Epsilon]", "D->jik", *)
(*      "D->\[Epsilon]"}, AnalisiSintattica`Private`tmp = {"A", "B", "C", "D"}, *)
(*    AnalisiSintattica`Private`displayFirst[AnalisiSintattica`Private`g_] := *)
(*     Grid[AnalisiSintattica`Private`g, Frame -> All, *)
(*      Background -> {White, White}, ItemStyle -> {Automatic}, *)
(*      ItemSize -> {{2, {2}}}, BaseStyle -> {Bold}*Editable -> False], *)
(*    AnalisiSintattica`Private`displayFollow[AnalisiSintattica`Private`g_] := *)
(*     Grid[AnalisiSintattica`Private`g, Frame -> All, *)
(*      Background -> {White, White}, ItemStyle -> {Automatic}, *)
(*      ItemSize -> {{2, {2}}}, BaseStyle -> {Bold}*Editable -> False], *)
(*    AnalisiSintattica`Private`displayTable[AnalisiSintattica`Private`g_, *)
(*      AnalisiSintattica`Private`cursor_:0] := *)
(*     Grid[AnalisiSintattica`Private`g, *)
(*      Frame -> If[MatchQ[AnalisiSintattica`Private`xy[*)
(*          AnalisiSintattica`Private`cursor], _Integer], All, *)
(*        {All, All, {AnalisiSintattica`Private`xy[*)
(*            AnalisiSintattica`Private`cursor] -> {Thick, Blue}}}], *)
(*      Background -> {White, White}, ItemStyle -> {Automatic}, *)
(*      ItemSize -> {{3, {4}}}, BaseStyle -> {Bold}, Editable -> False], *)
(*    AnalisiSintattica`Private`xy[AnalisiSintattica`Private`n_] := *)
(*     {AnalisiSintattica`Private`row[AnalisiSintattica`Private`n], *)
(*      AnalisiSintattica`Private`col[AnalisiSintattica`Private`n]}, *)
(*    AnalisiSintattica`Private`row[AnalisiSintattica`Private`n_] := *)
(*     Quotient[AnalisiSintattica`Private`n - 1, *)
(*       AnalisiSintattica`Private`cols] + 1, *)
(*    AnalisiSintattica`Private`col[AnalisiSintattica`Private`n_] := *)
(*     Mod[AnalisiSintattica`Private`n - 1, AnalisiSintattica`Private`cols] + *)
(*      1, AnalisiSintattica`Private`loc[{AnalisiSintattica`Private`x_, *)
(*       AnalisiSintattica`Private`y_}] := *)
(*     1 + Floor[AnalisiSintattica`Private`cols*AnalisiSintattica`Private`x] + *)
(*      AnalisiSintattica`Private`cols*Floor[(1 - AnalisiSintattica`Private`y)**)
(*         AnalisiSintattica`Private`rows], *)
(*    AnalisiSintattica`Private`nullable = {{"A", True}, {"B", True}, *)
(*      {"C", True}, {"D", True}}, AnalisiSintattica`Private`displayFirstSln[*)
(*      AnalisiSintattica`Private`g_] := AnalisiSintattica`Private`displayFirst[*)
(*      AnalisiSintattica`Private`g], *)
(*    AnalisiSintattica`Private`displayFollowSln[*)
(*      AnalisiSintattica`Private`g_] := *)
(*     AnalisiSintattica`Private`displayFollow[AnalisiSintattica`Private`g], *)
(*    AnalisiSintattica`Private`displayTableSln[*)
(*      AnalisiSintattica`Private`g_] := AnalisiSintattica`Private`displayTable[*)
(*      AnalisiSintattica`Private`g, 0]}]*)


(* ::Output:: *)
(*Manipulate[Grid[{{Column[{Style["ANALISI SINTATTICA", Bold], *)
(*       Style["ESERCIZIO DI GRAMMATICA N\[Degree]:", Bold], Style["Generare gli \*)
(*insiemi Nullable, First e Follow per la seguente grammatica", Bold]}, *)
(*      Alignment -> Left]}, *)
(*    {Column[{Row[{Button["Nuova grammatica", *)
(*          (AnalisiSintattica`Private`cursor = 0; Spacer[5]; *)
(*            AnalisiSintattica`Private`showSolution = False; *)
(*            AnalisiSintattica`Private`soluzione = *)
(*             AnalisiSintattica`Private`grammar; *)
(*            AnalisiSintattica`Private`emptyGrammar = *)
(*             AnalisiSintattica`Private`createEmptyGrammar[*)
(*              AnalisiSintattica`Private`soluzione]; ) & ], *)
(*         DynamicModule[{AnalisiSintattica`Private`numero = ""}, *)
(*          Panel[Column[{Row[{Style["Genera esercizio n\[Degree]: ", Bold], *)
(*               InputField[Dynamic[AnalisiSintattica`Private`numero], *)
(*                Number]}], Dynamic[AnalisiSintattica`Private`numero]; }]]]}], *)
(*       " ", Row[{Column[{Style["Grammatica", Bold], *)
(*           Grid[List /@ AnalisiSintattica`Private`listaProduzioni, *)
(*            Frame -> All, Background -> {White, White}, ItemStyle -> *)
(*             {Automatic}, ItemSize -> {{8, {8}}}, BaseStyle -> *)
(*             {Bold}*Editable -> False]}, Alignment -> Left]}], " ", *)
(*       Row[{Column[{Style["NULLABLE", Bold], TabView[*)
(*            Table[AnalisiSintattica`Private`tmp[[*)
(*               AnalisiSintattica`Private`i]] -> PopupMenu[" ", {*)
(*                AnalisiSintattica`Private`TRUE, *)
(*                AnalisiSintattica`Private`FALSE}], *)
(*             {AnalisiSintattica`Private`i, 1, Length[*)
(*               AnalisiSintattica`Private`tmp]}]]}, Alignment -> Left], " "}], *)
(*       " ", Row[{Column[{Style["FIRST", Bold], Style["Dato un non terminale, \*)
(*il suo insieme First \[EGrave] composto dai simboli terminali (compreso \[Epsilon]) che \*)
(*possono apparire come caratteri iniziali di una stringa derivata da una sua \*)
(*produzione.", Bold], AnalisiSintattica`Private`displayFirst[*)
(*            AnalisiSintattica`Private`emptyCheckboxGrammar]}, *)
(*          Alignment -> Left]}], Row[{Column[{Style["FOLLOW", Bold], *)
(*           AnalisiSintattica`Private`displayFollow[*)
(*            AnalisiSintattica`Private`emptyCheckboxGrammar]}, *)
(*          Alignment -> Left]}], *)
(*       Row[{Column[{Style["TABELLA PRODUZIONI", Bold], EventHandler[*)
(*            Dynamic[AnalisiSintattica`Private`displayTable[*)
(*              AnalisiSintattica`Private`emptyGrammar, *)
(*              AnalisiSintattica`Private`cursor]], "MouseClicked" :> *)
(*             If[MemberQ[Range[1, AnalisiSintattica`Private`rows**)
(*                  AnalisiSintattica`Private`cols, *)
(*                 AnalisiSintattica`Private`cols], *)
(*                AnalisiSintattica`Private`loc[MousePosition[*)
(*                  "EventHandlerScaled"]]] || MemberQ[Range[1, *)
(*                 AnalisiSintattica`Private`cols], *)
(*                AnalisiSintattica`Private`loc[MousePosition[*)
(*                  "EventHandlerScaled"]]], AnalisiSintattica`Private`cursor = *)
(*               -1, AnalisiSintattica`Private`cursor = *)
(*               AnalisiSintattica`Private`loc[MousePosition[*)
(*                 "EventHandlerScaled"]]]], *)
(*           Row[Table[With[{AnalisiSintattica`Private`i$ = *)
(*                AnalisiSintattica`Private`i}, Button[*)
(*               AnalisiSintattica`Private`listaProduzioni[[*)
(*                AnalisiSintattica`Private`i$]], *)
(*               AnalisiSintattica`Private`emptyGrammar[[*)
(*                  AnalisiSintattica`Private`xy[*)
(*                    AnalisiSintattica`Private`cursor][[1]],*)
(*                  AnalisiSintattica`Private`xy[*)
(*                    AnalisiSintattica`Private`cursor][[2]]]] = *)
(*                 AnalisiSintattica`Private`listaProduzioni[[*)
(*                  AnalisiSintattica`Private`i$]]; *)
(*                If[AnalisiSintattica`Private`soluzione[[*)
(*                   AnalisiSintattica`Private`xy[*)
(*                     AnalisiSintattica`Private`cursor][[1]],*)
(*                   AnalisiSintattica`Private`xy[*)
(*                     AnalisiSintattica`Private`cursor][[2]]]] != *)
(*                  AnalisiSintattica`Private`emptyGrammar[[*)
(*                   AnalisiSintattica`Private`xy[*)
(*                     AnalisiSintattica`Private`cursor][[1]],*)
(*                   AnalisiSintattica`Private`xy[*)
(*                     AnalisiSintattica`Private`cursor][[2]]]], Beep[]]]], *)
(*             {AnalisiSintattica`Private`i, 1, Length[*)
(*               AnalisiSintattica`Private`listaProduzioni]}], Spacer[0.5]], *)
(*           Row[{Button["Clear", AnalisiSintattica`Private`emptyGrammar[[*)
(*                AnalisiSintattica`Private`xy[*)
(*                  AnalisiSintattica`Private`cursor][[1]],*)
(*                AnalisiSintattica`Private`xy[*)
(*                  AnalisiSintattica`Private`cursor][[2]]]] = " "], *)
(*             Button["Clear All", Table[*)
(*               AnalisiSintattica`Private`emptyGrammar[[*)
(*                 AnalisiSintattica`Private`i,AnalisiSintattica`Private`j]] = *)
(*                " ", {AnalisiSintattica`Private`i, 2, *)
(*                AnalisiSintattica`Private`rows}, {*)
(*                AnalisiSintattica`Private`j, 2, *)
(*                AnalisiSintattica`Private`cols}]]}]}]}], *)
(*       If[AnalisiSintattica`Private`showNullable, *)
(*        Column[{Style["Mostra Nullable", Bold], *)
(*          TabView[Table[AnalisiSintattica`Private`tmp[[*)
(*              AnalisiSintattica`Private`i]] -> *)
(*             AnalisiSintattica`Private`nullable[[AnalisiSintattica`Private`i,*)
(*              2]], {AnalisiSintattica`Private`i, 1, *)
(*             Length[AnalisiSintattica`Private`tmp]}]]}, Alignment -> Right], *)
(*        " "], If[AnalisiSintattica`Private`showFirst, *)
(*        Column[{Style["Mostra First", Bold], *)
(*          AnalisiSintattica`Private`displayFirstSln[*)
(*           AnalisiSintattica`Private`emptyCheckboxGrammar]}, *)
(*         Alignment -> Right], ""], If[AnalisiSintattica`Private`showFollow, *)
(*        Column[{Style["Mostra First", Bold], *)
(*          AnalisiSintattica`Private`displayFollowSln[*)
(*           AnalisiSintattica`Private`emptyCheckboxGrammar]}, *)
(*         Alignment -> Right], ""], If[AnalisiSintattica`Private`showSolution, *)
(*        Row[{AnalisiSintattica`Private`displayTableSln[*)
(*           AnalisiSintattica`Private`soluzione]}], ""]}, Alignment -> Left], *)
(*     " "}}, Editable -> False], {{AnalisiSintattica`Private`soluzione, *)
(*    {{" ", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "$"}, *)
(*     {"A", "A->Bab", " ", "A->Bab", "A->Bab", "A->Bab", "A->C", "A->C", *)
(*      "A->C", " ", " ", " ", " ", " "}, {"B", "B->\[Epsilon]", " ", "B->cD", "B->d", *)
(*      "B->e", " ", " ", " ", " ", " ", " ", " ", " "}, *)
(*     {"C", " ", " ", " ", " ", " ", "C->f", "C->g", "C->h", " ", " ", " ", *)
(*      " ", "C->\[Epsilon]"}, {"D", "D->\[Epsilon]", " ", " ", " ", " ", " ", " ", " ", " ", *)
(*      "D->jik", " ", " ", " "}}}, ControlType -> None}, *)
(*  {{AnalisiSintattica`Private`emptyGrammar, *)
(*    {{" ", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "$"}, *)
(*     {"A", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "}, *)
(*     {"B", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "}, *)
(*     {"C", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "}, *)
(*     {"D", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", *)
(*      " "}}}, ControlType -> None}, *)
(*  {{AnalisiSintattica`Private`emptyCheckboxGrammar, *)
(*    {{" ", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "$"}, *)
(*     {"A", Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], *)
(*      Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], *)
(*      Checkbox[], Checkbox[]}, {"B", Checkbox[], Checkbox[], Checkbox[], *)
(*      Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], *)
(*      Checkbox[], Checkbox[], Checkbox[], Checkbox[]}, *)
(*     {"C", Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], *)
(*      Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], *)
(*      Checkbox[], Checkbox[]}, {"D", Checkbox[], Checkbox[], Checkbox[], *)
(*      Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], *)
(*      Checkbox[], Checkbox[], Checkbox[], Checkbox[]}}}, *)
(*   ControlType -> None}, {{AnalisiSintattica`Private`cursor, 0}, *)
(*   ControlType -> None}, {{AnalisiSintattica`Private`showNullable, False, *)
(*    "Mostra Nullable"}, {True, False}}, *)
(*  {{AnalisiSintattica`Private`showFirst, False, "Mostra First"}, *)
(*   {True, False}}, {{AnalisiSintattica`Private`showFollow, False, *)
(*    "Mostra Follow"}, {True, False}}, *)
(*  {{AnalisiSintattica`Private`showSolution, False, "show solution"}, *)
(*   {True, False}}, ContentSize -> {900, 900}, *)
(*  Initialization :> {AnalisiSintattica`Private`soluzione = *)
(*     {{" ", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "$"}, *)
(*      {"A", "A->Bab", " ", "A->Bab", "A->Bab", "A->Bab", "A->C", "A->C", *)
(*       "A->C", " ", " ", " ", " ", " "}, {"B", "B->\[Epsilon]", " ", "B->cD", "B->d", *)
(*       "B->e", " ", " ", " ", " ", " ", " ", " ", " "}, *)
(*      {"C", " ", " ", " ", " ", " ", "C->f", "C->g", "C->h", " ", " ", " ", *)
(*       " ", "C->\[Epsilon]"}, {"D", "D->\[Epsilon]", " ", " ", " ", " ", " ", " ", " ", " ", *)
(*       "D->jik", " ", " ", " "}}, AnalisiSintattica`Private`grammar = *)
(*     {{" ", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "$"}, *)
(*      {"A", "A->Bab", " ", "A->Bab", "A->Bab", "A->Bab", "A->C", "A->C", *)
(*       "A->C", " ", " ", " ", " ", " "}, {"B", "B->\[Epsilon]", " ", "B->cD", "B->d", *)
(*       "B->e", " ", " ", " ", " ", " ", " ", " ", " "}, *)
(*      {"C", " ", " ", " ", " ", " ", "C->f", "C->g", "C->h", " ", " ", " ", *)
(*       " ", "C->\[Epsilon]"}, {"D", "D->\[Epsilon]", " ", " ", " ", " ", " ", " ", " ", " ", *)
(*       "D->jik", " ", " ", " "}}, *)
(*    AnalisiSintattica`Private`createEmptyGrammar[*)
(*      AnalisiSintattica`Private`sln_] := *)
(*     Module[{AnalisiSintattica`Private`copy = AnalisiSintattica`Private`sln}, *)
(*      Table[If[AnalisiSintattica`Private`i > 1 && *)
(*          AnalisiSintattica`Private`j > 1, AnalisiSintattica`Private`copy[[*)
(*           AnalisiSintattica`Private`i,AnalisiSintattica`Private`j]] = " "], *)
(*        {AnalisiSintattica`Private`i, AnalisiSintattica`Private`rows}, *)
(*        {AnalisiSintattica`Private`j, AnalisiSintattica`Private`cols}]; *)
(*       AnalisiSintattica`Private`copy], AnalisiSintattica`Private`i = 5, *)
(*    AnalisiSintattica`Private`j = 3, AnalisiSintattica`Private`rows = 5, *)
(*    AnalisiSintattica`Private`cols = 14, *)
(*    AnalisiSintattica`Private`listaProduzioni = {"A->C", "A->Bab", "B->cD", *)
(*      "B->d", "B->e", "B->\[Epsilon]", "C->h", "C->g", "C->f", "C->\[Epsilon]", "D->jik", *)
(*      "D->\[Epsilon]"}, AnalisiSintattica`Private`tmp = {"A", "B", "C", "D"}, *)
(*    AnalisiSintattica`Private`displayFirst[AnalisiSintattica`Private`g_] := *)
(*     Grid[AnalisiSintattica`Private`g, Frame -> All, *)
(*      Background -> {White, White}, ItemStyle -> {Automatic}, *)
(*      ItemSize -> {{2, {2}}}, BaseStyle -> {Bold}*Editable -> False], *)
(*    AnalisiSintattica`Private`displayFollow[AnalisiSintattica`Private`g_] := *)
(*     Grid[AnalisiSintattica`Private`g, Frame -> All, *)
(*      Background -> {White, White}, ItemStyle -> {Automatic}, *)
(*      ItemSize -> {{2, {2}}}, BaseStyle -> {Bold}*Editable -> False], *)
(*    AnalisiSintattica`Private`displayTable[AnalisiSintattica`Private`g_, *)
(*      AnalisiSintattica`Private`cursor_:0] := *)
(*     Grid[AnalisiSintattica`Private`g, *)
(*      Frame -> If[MatchQ[AnalisiSintattica`Private`xy[*)
(*          AnalisiSintattica`Private`cursor], _Integer], All, *)
(*        {All, All, {AnalisiSintattica`Private`xy[*)
(*            AnalisiSintattica`Private`cursor] -> {Thick, Blue}}}], *)
(*      Background -> {White, White}, ItemStyle -> {Automatic}, *)
(*      ItemSize -> {{3, {4}}}, BaseStyle -> {Bold}, Editable -> False], *)
(*    AnalisiSintattica`Private`xy[AnalisiSintattica`Private`n_] := *)
(*     {AnalisiSintattica`Private`row[AnalisiSintattica`Private`n], *)
(*      AnalisiSintattica`Private`col[AnalisiSintattica`Private`n]}, *)
(*    AnalisiSintattica`Private`row[AnalisiSintattica`Private`n_] := *)
(*     Quotient[AnalisiSintattica`Private`n - 1, *)
(*       AnalisiSintattica`Private`cols] + 1, *)
(*    AnalisiSintattica`Private`col[AnalisiSintattica`Private`n_] := *)
(*     Mod[AnalisiSintattica`Private`n - 1, AnalisiSintattica`Private`cols] + *)
(*      1, AnalisiSintattica`Private`loc[{AnalisiSintattica`Private`x_, *)
(*       AnalisiSintattica`Private`y_}] := *)
(*     1 + Floor[AnalisiSintattica`Private`cols*AnalisiSintattica`Private`x] + *)
(*      AnalisiSintattica`Private`cols*Floor[(1 - AnalisiSintattica`Private`y)**)
(*         AnalisiSintattica`Private`rows], *)
(*    AnalisiSintattica`Private`nullable = {{"A", True}, {"B", True}, *)
(*      {"C", True}, {"D", True}}, AnalisiSintattica`Private`displayFirstSln[*)
(*      AnalisiSintattica`Private`g_] := AnalisiSintattica`Private`displayFirst[*)
(*      AnalisiSintattica`Private`g], *)
(*    AnalisiSintattica`Private`displayFollowSln[*)
(*      AnalisiSintattica`Private`g_] := *)
(*     AnalisiSintattica`Private`displayFollow[AnalisiSintattica`Private`g], *)
(*    AnalisiSintattica`Private`displayTableSln[*)
(*      AnalisiSintattica`Private`g_] := AnalisiSintattica`Private`displayTable[*)
(*      AnalisiSintattica`Private`g, 0]}]*)


(* ::Output:: *)
(*Manipulate[Grid[{{Column[{Style["ANALISI SINTATTICA", Bold], *)
(*       Style["ESERCIZIO DI GRAMMATICA N\[Degree]:", Bold], Style["Generare gli \*)
(*insiemi Nullable, First e Follow per la seguente grammatica", Bold]}, *)
(*      Alignment -> Left]}, *)
(*    {Column[{Row[{Button["Nuova grammatica", *)
(*          (AnalisiSintattica`Private`cursor = 0; Spacer[5]; *)
(*            AnalisiSintattica`Private`showSolution = False; *)
(*            AnalisiSintattica`Private`soluzione = *)
(*             AnalisiSintattica`Private`grammar; *)
(*            AnalisiSintattica`Private`emptyGrammar = *)
(*             AnalisiSintattica`Private`createEmptyGrammar[*)
(*              AnalisiSintattica`Private`soluzione]; ) & ], *)
(*         DynamicModule[{AnalisiSintattica`Private`numero = ""}, *)
(*          Panel[Column[{Row[{Style["Genera esercizio n\[Degree]: ", Bold], *)
(*               InputField[Dynamic[AnalisiSintattica`Private`numero], *)
(*                Number]}], Dynamic[AnalisiSintattica`Private`numero]; }]]]}], *)
(*       " ", Row[{Column[{Style["Grammatica", Bold], *)
(*           Grid[List /@ AnalisiSintattica`Private`listaProduzioni, *)
(*            Frame -> All, Background -> {White, White}, ItemStyle -> *)
(*             {Automatic}, ItemSize -> {{8, {8}}}, BaseStyle -> *)
(*             {Bold}*Editable -> False]}, Alignment -> Left]}], " ", *)
(*       Row[{Column[{Style["NULLABLE", Bold], TabView[*)
(*            Table[AnalisiSintattica`Private`tmp[[*)
(*               AnalisiSintattica`Private`i]] -> PopupMenu[" ", {*)
(*                AnalisiSintattica`Private`TRUE, *)
(*                AnalisiSintattica`Private`FALSE}], *)
(*             {AnalisiSintattica`Private`i, 1, Length[*)
(*               AnalisiSintattica`Private`tmp]}]]}, Alignment -> Left], " "}], *)
(*       " ", Row[{Column[{Style["FIRST", Bold], *)
(*           AnalisiSintattica`Private`displayFirst[*)
(*            AnalisiSintattica`Private`emptyCheckboxGrammar]}, *)
(*          Alignment -> Left]}], Row[{Column[{Style["FOLLOW", Bold], *)
(*           AnalisiSintattica`Private`displayFollow[*)
(*            AnalisiSintattica`Private`emptyCheckboxGrammar]}, *)
(*          Alignment -> Left]}], *)
(*       Row[{Column[{Style["TABELLA PRODUZIONI", Bold], EventHandler[*)
(*            Dynamic[AnalisiSintattica`Private`displayTable[*)
(*              AnalisiSintattica`Private`emptyGrammar, *)
(*              AnalisiSintattica`Private`cursor]], "MouseClicked" :> *)
(*             If[MemberQ[Range[1, AnalisiSintattica`Private`rows**)
(*                  AnalisiSintattica`Private`cols, *)
(*                 AnalisiSintattica`Private`cols], *)
(*                AnalisiSintattica`Private`loc[MousePosition[*)
(*                  "EventHandlerScaled"]]] || MemberQ[Range[1, *)
(*                 AnalisiSintattica`Private`cols], *)
(*                AnalisiSintattica`Private`loc[MousePosition[*)
(*                  "EventHandlerScaled"]]], AnalisiSintattica`Private`cursor = *)
(*               -1, AnalisiSintattica`Private`cursor = *)
(*               AnalisiSintattica`Private`loc[MousePosition[*)
(*                 "EventHandlerScaled"]]]], *)
(*           Row[Table[With[{AnalisiSintattica`Private`i$ = *)
(*                AnalisiSintattica`Private`i}, Button[*)
(*               AnalisiSintattica`Private`listaProduzioni[[*)
(*                AnalisiSintattica`Private`i$]], *)
(*               AnalisiSintattica`Private`emptyGrammar[[*)
(*                  AnalisiSintattica`Private`xy[*)
(*                    AnalisiSintattica`Private`cursor][[1]],*)
(*                  AnalisiSintattica`Private`xy[*)
(*                    AnalisiSintattica`Private`cursor][[2]]]] = *)
(*                 AnalisiSintattica`Private`listaProduzioni[[*)
(*                  AnalisiSintattica`Private`i$]]; *)
(*                If[AnalisiSintattica`Private`soluzione[[*)
(*                   AnalisiSintattica`Private`xy[*)
(*                     AnalisiSintattica`Private`cursor][[1]],*)
(*                   AnalisiSintattica`Private`xy[*)
(*                     AnalisiSintattica`Private`cursor][[2]]]] != *)
(*                  AnalisiSintattica`Private`emptyGrammar[[*)
(*                   AnalisiSintattica`Private`xy[*)
(*                     AnalisiSintattica`Private`cursor][[1]],*)
(*                   AnalisiSintattica`Private`xy[*)
(*                     AnalisiSintattica`Private`cursor][[2]]]], Beep[]]]], *)
(*             {AnalisiSintattica`Private`i, 1, Length[*)
(*               AnalisiSintattica`Private`listaProduzioni]}], Spacer[0.5]], *)
(*           Row[{Button["Clear", AnalisiSintattica`Private`emptyGrammar[[*)
(*                AnalisiSintattica`Private`xy[*)
(*                  AnalisiSintattica`Private`cursor][[1]],*)
(*                AnalisiSintattica`Private`xy[*)
(*                  AnalisiSintattica`Private`cursor][[2]]]] = " "], *)
(*             Button["Clear All", Table[*)
(*               AnalisiSintattica`Private`emptyGrammar[[*)
(*                 AnalisiSintattica`Private`i,AnalisiSintattica`Private`j]] = *)
(*                " ", {AnalisiSintattica`Private`i, 2, *)
(*                AnalisiSintattica`Private`rows}, {*)
(*                AnalisiSintattica`Private`j, 2, *)
(*                AnalisiSintattica`Private`cols}]]}]}]}], *)
(*       If[AnalisiSintattica`Private`showNullable, *)
(*        Column[{Style["Mostra Nullable", Bold], *)
(*          TabView[Table[AnalisiSintattica`Private`tmp[[*)
(*              AnalisiSintattica`Private`i]] -> *)
(*             AnalisiSintattica`Private`nullable[[AnalisiSintattica`Private`i,*)
(*              2]], {AnalisiSintattica`Private`i, 1, *)
(*             Length[AnalisiSintattica`Private`tmp]}]]}, Alignment -> Right], *)
(*        " "], If[AnalisiSintattica`Private`showFirst, *)
(*        Column[{Style["Mostra First", Bold], *)
(*          AnalisiSintattica`Private`displayFirstSln[*)
(*           AnalisiSintattica`Private`emptyCheckboxGrammar]}, *)
(*         Alignment -> Right], ""], If[AnalisiSintattica`Private`showFollow, *)
(*        Column[{Style["Mostra First", Bold], *)
(*          AnalisiSintattica`Private`displayFollowSln[*)
(*           AnalisiSintattica`Private`emptyCheckboxGrammar]}, *)
(*         Alignment -> Right], ""], If[AnalisiSintattica`Private`showSolution, *)
(*        Row[{AnalisiSintattica`Private`displayTableSln[*)
(*           AnalisiSintattica`Private`soluzione]}], ""]}, *)
(*      Alignment -> Center], " "}}, Editable -> False], *)
(*  {{AnalisiSintattica`Private`soluzione, *)
(*    {{" ", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "$"}, *)
(*     {"A", "A->Bab", " ", "A->Bab", "A->Bab", "A->Bab", "A->C", "A->C", *)
(*      "A->C", " ", " ", " ", " ", " "}, {"B", "B->\[Epsilon]", " ", "B->cD", "B->d", *)
(*      "B->e", " ", " ", " ", " ", " ", " ", " ", " "}, *)
(*     {"C", " ", " ", " ", " ", " ", "C->f", "C->g", "C->h", " ", " ", " ", *)
(*      " ", "C->\[Epsilon]"}, {"D", "D->\[Epsilon]", " ", " ", " ", " ", " ", " ", " ", " ", *)
(*      "D->jik", " ", " ", " "}}}, ControlType -> None}, *)
(*  {{AnalisiSintattica`Private`emptyGrammar, *)
(*    {{" ", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "$"}, *)
(*     {"A", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "}, *)
(*     {"B", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "}, *)
(*     {"C", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "}, *)
(*     {"D", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", *)
(*      " "}}}, ControlType -> None}, *)
(*  {{AnalisiSintattica`Private`emptyCheckboxGrammar, *)
(*    {{" ", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "$"}, *)
(*     {"A", Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], *)
(*      Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], *)
(*      Checkbox[], Checkbox[]}, {"B", Checkbox[], Checkbox[], Checkbox[], *)
(*      Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], *)
(*      Checkbox[], Checkbox[], Checkbox[], Checkbox[]}, *)
(*     {"C", Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], *)
(*      Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], *)
(*      Checkbox[], Checkbox[]}, {"D", Checkbox[], Checkbox[], Checkbox[], *)
(*      Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], *)
(*      Checkbox[], Checkbox[], Checkbox[], Checkbox[]}}}, *)
(*   ControlType -> None}, {{AnalisiSintattica`Private`cursor, 0}, *)
(*   ControlType -> None}, {{AnalisiSintattica`Private`showNullable, False, *)
(*    "Mostra Nullable"}, {True, False}}, *)
(*  {{AnalisiSintattica`Private`showFirst, False, "Mostra First"}, *)
(*   {True, False}}, {{AnalisiSintattica`Private`showFollow, False, *)
(*    "Mostra Follow"}, {True, False}}, *)
(*  {{AnalisiSintattica`Private`showSolution, False, "show solution"}, *)
(*   {True, False}}, ContentSize -> {900, 900}, *)
(*  Initialization :> {AnalisiSintattica`Private`soluzione = *)
(*     {{" ", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "$"}, *)
(*      {"A", "A->Bab", " ", "A->Bab", "A->Bab", "A->Bab", "A->C", "A->C", *)
(*       "A->C", " ", " ", " ", " ", " "}, {"B", "B->\[Epsilon]", " ", "B->cD", "B->d", *)
(*       "B->e", " ", " ", " ", " ", " ", " ", " ", " "}, *)
(*      {"C", " ", " ", " ", " ", " ", "C->f", "C->g", "C->h", " ", " ", " ", *)
(*       " ", "C->\[Epsilon]"}, {"D", "D->\[Epsilon]", " ", " ", " ", " ", " ", " ", " ", " ", *)
(*       "D->jik", " ", " ", " "}}, AnalisiSintattica`Private`grammar = *)
(*     {{" ", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "$"}, *)
(*      {"A", "A->Bab", " ", "A->Bab", "A->Bab", "A->Bab", "A->C", "A->C", *)
(*       "A->C", " ", " ", " ", " ", " "}, {"B", "B->\[Epsilon]", " ", "B->cD", "B->d", *)
(*       "B->e", " ", " ", " ", " ", " ", " ", " ", " "}, *)
(*      {"C", " ", " ", " ", " ", " ", "C->f", "C->g", "C->h", " ", " ", " ", *)
(*       " ", "C->\[Epsilon]"}, {"D", "D->\[Epsilon]", " ", " ", " ", " ", " ", " ", " ", " ", *)
(*       "D->jik", " ", " ", " "}}, *)
(*    AnalisiSintattica`Private`createEmptyGrammar[*)
(*      AnalisiSintattica`Private`sln_] := *)
(*     Module[{AnalisiSintattica`Private`copy = AnalisiSintattica`Private`sln}, *)
(*      Table[If[AnalisiSintattica`Private`i > 1 && *)
(*          AnalisiSintattica`Private`j > 1, AnalisiSintattica`Private`copy[[*)
(*           AnalisiSintattica`Private`i,AnalisiSintattica`Private`j]] = " "], *)
(*        {AnalisiSintattica`Private`i, AnalisiSintattica`Private`rows}, *)
(*        {AnalisiSintattica`Private`j, AnalisiSintattica`Private`cols}]; *)
(*       AnalisiSintattica`Private`copy], AnalisiSintattica`Private`i = 5, *)
(*    AnalisiSintattica`Private`j = 3, AnalisiSintattica`Private`rows = 5, *)
(*    AnalisiSintattica`Private`cols = 14, *)
(*    AnalisiSintattica`Private`listaProduzioni = {"A->C", "A->Bab", "B->cD", *)
(*      "B->d", "B->e", "B->\[Epsilon]", "C->h", "C->g", "C->f", "C->\[Epsilon]", "D->jik", *)
(*      "D->\[Epsilon]"}, AnalisiSintattica`Private`tmp = {"A", "B", "C", "D"}, *)
(*    AnalisiSintattica`Private`displayFirst[AnalisiSintattica`Private`g_] := *)
(*     Grid[AnalisiSintattica`Private`g, Frame -> All, *)
(*      Background -> {White, White}, ItemStyle -> {Automatic}, *)
(*      ItemSize -> {{2, {2}}}, BaseStyle -> {Bold}*Editable -> False], *)
(*    AnalisiSintattica`Private`displayFollow[AnalisiSintattica`Private`g_] := *)
(*     Grid[AnalisiSintattica`Private`g, Frame -> All, *)
(*      Background -> {White, White}, ItemStyle -> {Automatic}, *)
(*      ItemSize -> {{2, {2}}}, BaseStyle -> {Bold}*Editable -> False], *)
(*    AnalisiSintattica`Private`displayTable[AnalisiSintattica`Private`g_, *)
(*      AnalisiSintattica`Private`cursor_:0] := *)
(*     Grid[AnalisiSintattica`Private`g, *)
(*      Frame -> If[MatchQ[AnalisiSintattica`Private`xy[*)
(*          AnalisiSintattica`Private`cursor], _Integer], All, *)
(*        {All, All, {AnalisiSintattica`Private`xy[*)
(*            AnalisiSintattica`Private`cursor] -> {Thick, Blue}}}], *)
(*      Background -> {White, White}, ItemStyle -> {Automatic}, *)
(*      ItemSize -> {{3, {4}}}, BaseStyle -> {Bold}, Editable -> False], *)
(*    AnalisiSintattica`Private`xy[AnalisiSintattica`Private`n_] := *)
(*     {AnalisiSintattica`Private`row[AnalisiSintattica`Private`n], *)
(*      AnalisiSintattica`Private`col[AnalisiSintattica`Private`n]}, *)
(*    AnalisiSintattica`Private`row[AnalisiSintattica`Private`n_] := *)
(*     Quotient[AnalisiSintattica`Private`n - 1, *)
(*       AnalisiSintattica`Private`cols] + 1, *)
(*    AnalisiSintattica`Private`col[AnalisiSintattica`Private`n_] := *)
(*     Mod[AnalisiSintattica`Private`n - 1, AnalisiSintattica`Private`cols] + *)
(*      1, AnalisiSintattica`Private`loc[{AnalisiSintattica`Private`x_, *)
(*       AnalisiSintattica`Private`y_}] := *)
(*     1 + Floor[AnalisiSintattica`Private`cols*AnalisiSintattica`Private`x] + *)
(*      AnalisiSintattica`Private`cols*Floor[(1 - AnalisiSintattica`Private`y)**)
(*         AnalisiSintattica`Private`rows], *)
(*    AnalisiSintattica`Private`nullable = {{"A", True}, {"B", True}, *)
(*      {"C", True}, {"D", True}}, AnalisiSintattica`Private`displayFirstSln[*)
(*      AnalisiSintattica`Private`g_] := AnalisiSintattica`Private`displayFirst[*)
(*      AnalisiSintattica`Private`g], *)
(*    AnalisiSintattica`Private`displayFollowSln[*)
(*      AnalisiSintattica`Private`g_] := *)
(*     AnalisiSintattica`Private`displayFollow[AnalisiSintattica`Private`g], *)
(*    AnalisiSintattica`Private`displayTableSln[*)
(*      AnalisiSintattica`Private`g_] := AnalisiSintattica`Private`displayTable[*)
(*      AnalisiSintattica`Private`g, 0]}]*)


(* ::Input:: *)
(*Manipulate[Grid[Editable -> False, *)
(*   {{Column[{Style["ANALISI SINTATTICA", Bold], *)
(*       Style["ESERCIZIO DI GRAMMATICA N\[Degree]:", Bold], Style["Generare gli \*)
(*insiemi Nullable, First e Follow per la seguente grammatica", Bold]}, *)
(*      Alignment -> Left]}, *)
(*    {Column[{Row[{Button["Nuova grammatica", *)
(*          (AnalisiSintattica`Private`cursor = 0; Spacer[5]; *)
(*            AnalisiSintattica`Private`showSolution = False; *)
(*            AnalisiSintattica`Private`soluzione = *)
(*             AnalisiSintattica`Private`grammar; *)
(*            AnalisiSintattica`Private`emptyGrammar = *)
(*             AnalisiSintattica`Private`createEmptyGrammar[*)
(*              AnalisiSintattica`Private`soluzione]; ) & ], *)
(*         DynamicModule[{AnalisiSintattica`Private`numero = ""}, *)
(*          Panel[Column[{Row[{Style["Genera esercizio n\[Degree]: ", Bold], *)
(*               InputField[Dynamic[AnalisiSintattica`Private`numero], *)
(*                Number]}], Dynamic[AnalisiSintattica`Private`numero]; }]]]}], *)
(*       " ", Row[{Column[{Style["Grammatica", Bold], *)
(*           Grid[List /@ AnalisiSintattica`Private`listaProduzioni, *)
(*            Frame -> All, Background -> {White, White}, ItemStyle -> *)
(*             {Automatic}, ItemSize -> {{8, {8}}}, BaseStyle -> *)
(*             {Bold}*Editable -> False]}, Alignment -> Left]}], " ", *)
(*       Row[{Column[{Style["NULLABLE", Bold], TabView[*)
(*            Table[AnalisiSintattica`Private`tmp[[*)
(*               AnalisiSintattica`Private`i]] -> PopupMenu[" ", {*)
(*                AnalisiSintattica`Private`TRUE, *)
(*                AnalisiSintattica`Private`FALSE}], *)
(*             {AnalisiSintattica`Private`i, 1, Length[*)
(*               AnalisiSintattica`Private`tmp]}]]}, Alignment -> Left], " "}], *)
(*       " ", Row[{Column[{Style["FIRST", Bold], *)
(*           AnalisiSintattica`Private`displayFirst[*)
(*            AnalisiSintattica`Private`emptyCheckboxGrammar]}, *)
(*          Alignment -> Left]}], Row[{Column[{Style["FOLLOW", Bold], *)
(*           AnalisiSintattica`Private`displayFollow[*)
(*            AnalisiSintattica`Private`emptyCheckboxGrammar]}, *)
(*          Alignment -> Left]}], *)
(*       Row[{Column[{Style["TABELLA PRODUZIONI", Bold], EventHandler[*)
(*            Dynamic[AnalisiSintattica`Private`displayTable[*)
(*              AnalisiSintattica`Private`emptyGrammar, *)
(*              AnalisiSintattica`Private`cursor]], "MouseClicked" :> *)
(*             If[MemberQ[Range[1, AnalisiSintattica`Private`rows**)
(*                  AnalisiSintattica`Private`cols, *)
(*                 AnalisiSintattica`Private`cols], *)
(*                AnalisiSintattica`Private`loc[MousePosition[*)
(*                  "EventHandlerScaled"]]] || MemberQ[Range[1, *)
(*                 AnalisiSintattica`Private`cols], *)
(*                AnalisiSintattica`Private`loc[MousePosition[*)
(*                  "EventHandlerScaled"]]], AnalisiSintattica`Private`cursor = *)
(*               -1, AnalisiSintattica`Private`cursor = *)
(*               AnalisiSintattica`Private`loc[MousePosition[*)
(*                 "EventHandlerScaled"]]]], *)
(*           Row[Table[With[{AnalisiSintattica`Private`i$ = *)
(*                AnalisiSintattica`Private`i}, Button[*)
(*               AnalisiSintattica`Private`listaProduzioni[[*)
(*                AnalisiSintattica`Private`i$]], *)
(*               AnalisiSintattica`Private`emptyGrammar[[*)
(*                  AnalisiSintattica`Private`xy[*)
(*                    AnalisiSintattica`Private`cursor][[1]],*)
(*                  AnalisiSintattica`Private`xy[*)
(*                    AnalisiSintattica`Private`cursor][[2]]]] = *)
(*                 AnalisiSintattica`Private`listaProduzioni[[*)
(*                  AnalisiSintattica`Private`i$]]; *)
(*                If[AnalisiSintattica`Private`soluzione[[*)
(*                   AnalisiSintattica`Private`xy[*)
(*                     AnalisiSintattica`Private`cursor][[1]],*)
(*                   AnalisiSintattica`Private`xy[*)
(*                     AnalisiSintattica`Private`cursor][[2]]]] != *)
(*                  AnalisiSintattica`Private`emptyGrammar[[*)
(*                   AnalisiSintattica`Private`xy[*)
(*                     AnalisiSintattica`Private`cursor][[1]],*)
(*                   AnalisiSintattica`Private`xy[*)
(*                     AnalisiSintattica`Private`cursor][[2]]]], Beep[]]]], *)
(*             {AnalisiSintattica`Private`i, 1, Length[*)
(*               AnalisiSintattica`Private`listaProduzioni]}], Spacer[0.5]], *)
(*           Row[{Button["Clear", AnalisiSintattica`Private`emptyGrammar[[*)
(*                AnalisiSintattica`Private`xy[*)
(*                  AnalisiSintattica`Private`cursor][[1]],*)
(*                AnalisiSintattica`Private`xy[*)
(*                  AnalisiSintattica`Private`cursor][[2]]]] = " "], *)
(*             Button["Clear All", Table[*)
(*               AnalisiSintattica`Private`emptyGrammar[[*)
(*                 AnalisiSintattica`Private`i,AnalisiSintattica`Private`j]] = *)
(*                " ", {AnalisiSintattica`Private`i, 2, *)
(*                AnalisiSintattica`Private`rows}, {*)
(*                AnalisiSintattica`Private`j, 2, *)
(*                AnalisiSintattica`Private`cols}]]}]}]}], *)
(*       If[AnalisiSintattica`Private`showNullable, *)
(*        Column[{Style["Mostra Nullable", Bold], *)
(*          TabView[Table[AnalisiSintattica`Private`tmp[[*)
(*              AnalisiSintattica`Private`i]] -> *)
(*             AnalisiSintattica`Private`nullable[[AnalisiSintattica`Private`i,*)
(*              2]], {AnalisiSintattica`Private`i, 1, *)
(*             Length[AnalisiSintattica`Private`tmp]}]]}, Alignment -> Right], *)
(*        " "], If[AnalisiSintattica`Private`showFirst, *)
(*        Column[{Style["Mostra First", Bold], *)
(*          AnalisiSintattica`Private`displayFirstSln[*)
(*           AnalisiSintattica`Private`emptyCheckboxGrammar]}, *)
(*         Alignment -> Right], ""], If[AnalisiSintattica`Private`showFollow, *)
(*        Column[{Style["Mostra First", Bold], *)
(*          AnalisiSintattica`Private`displayFollowSln[*)
(*           AnalisiSintattica`Private`emptyCheckboxGrammar]}, *)
(*         Alignment -> Right], ""], If[AnalisiSintattica`Private`showSolution, *)
(*        Row[{AnalisiSintattica`Private`displayTableSln[*)
(*           AnalisiSintattica`Private`soluzione]}], ""]}, *)
(*      Alignment -> Center], " "}}], {{AnalisiSintattica`Private`soluzione, *)
(*    {{" ", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "$"}, *)
(*     {"A", "A->Bab", " ", "A->Bab", "A->Bab", "A->Bab", "A->C", "A->C", *)
(*      "A->C", " ", " ", " ", " ", " "}, {"B", "B->\[Epsilon]", " ", "B->cD", "B->d", *)
(*      "B->e", " ", " ", " ", " ", " ", " ", " ", " "}, *)
(*     {"C", " ", " ", " ", " ", " ", "C->f", "C->g", "C->h", " ", " ", " ", *)
(*      " ", "C->\[Epsilon]"}, {"D", "D->\[Epsilon]", " ", " ", " ", " ", " ", " ", " ", " ", *)
(*      "D->jik", " ", " ", " "}}}, ControlType -> None}, *)
(*  {{AnalisiSintattica`Private`emptyGrammar, *)
(*    {{" ", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "$"}, *)
(*     {"A", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "}, *)
(*     {"B", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "}, *)
(*     {"C", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "}, *)
(*     {"D", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", *)
(*      " "}}}, ControlType -> None}, *)
(*  {{AnalisiSintattica`Private`emptyCheckboxGrammar, *)
(*    {{" ", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "$"}, *)
(*     {"A", Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], *)
(*      Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], *)
(*      Checkbox[], Checkbox[]}, {"B", Checkbox[], Checkbox[], Checkbox[], *)
(*      Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], *)
(*      Checkbox[], Checkbox[], Checkbox[], Checkbox[]}, *)
(*     {"C", Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], *)
(*      Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], *)
(*      Checkbox[], Checkbox[]}, {"D", Checkbox[], Checkbox[], Checkbox[], *)
(*      Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], *)
(*      Checkbox[], Checkbox[], Checkbox[], Checkbox[]}}}, *)
(*   ControlType -> None}, {{AnalisiSintattica`Private`cursor, 0}, *)
(*   ControlType -> None}, {{AnalisiSintattica`Private`showNullable, False, *)
(*    "Mostra Nullable"}, {True, False}}, *)
(*  {{AnalisiSintattica`Private`showFirst, False, "Mostra First"}, *)
(*   {True, False}}, {{AnalisiSintattica`Private`showFollow, False, *)
(*    "Mostra Follow"}, {True, False}}, *)
(*  {{AnalisiSintattica`Private`showSolution, False, "show solution"}, *)
(*   {True, False}}, ContentSize -> {900, 900}, *)
(*  Initialization :> {AnalisiSintattica`Private`soluzione = *)
(*     {{" ", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "$"}, *)
(*      {"A", "A->Bab", " ", "A->Bab", "A->Bab", "A->Bab", "A->C", "A->C", *)
(*       "A->C", " ", " ", " ", " ", " "}, {"B", "B->\[Epsilon]", " ", "B->cD", "B->d", *)
(*       "B->e", " ", " ", " ", " ", " ", " ", " ", " "}, *)
(*      {"C", " ", " ", " ", " ", " ", "C->f", "C->g", "C->h", " ", " ", " ", *)
(*       " ", "C->\[Epsilon]"}, {"D", "D->\[Epsilon]", " ", " ", " ", " ", " ", " ", " ", " ", *)
(*       "D->jik", " ", " ", " "}}, AnalisiSintattica`Private`grammar = *)
(*     {{" ", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "$"}, *)
(*      {"A", "A->Bab", " ", "A->Bab", "A->Bab", "A->Bab", "A->C", "A->C", *)
(*       "A->C", " ", " ", " ", " ", " "}, {"B", "B->\[Epsilon]", " ", "B->cD", "B->d", *)
(*       "B->e", " ", " ", " ", " ", " ", " ", " ", " "}, *)
(*      {"C", " ", " ", " ", " ", " ", "C->f", "C->g", "C->h", " ", " ", " ", *)
(*       " ", "C->\[Epsilon]"}, {"D", "D->\[Epsilon]", " ", " ", " ", " ", " ", " ", " ", " ", *)
(*       "D->jik", " ", " ", " "}}, *)
(*    AnalisiSintattica`Private`createEmptyGrammar[*)
(*      AnalisiSintattica`Private`sln_] := *)
(*     Module[{AnalisiSintattica`Private`copy = AnalisiSintattica`Private`sln}, *)
(*      Table[If[AnalisiSintattica`Private`i > 1 && *)
(*          AnalisiSintattica`Private`j > 1, AnalisiSintattica`Private`copy[[*)
(*           AnalisiSintattica`Private`i,AnalisiSintattica`Private`j]] = " "], *)
(*        {AnalisiSintattica`Private`i, AnalisiSintattica`Private`rows}, *)
(*        {AnalisiSintattica`Private`j, AnalisiSintattica`Private`cols}]; *)
(*       AnalisiSintattica`Private`copy], AnalisiSintattica`Private`i = 5, *)
(*    AnalisiSintattica`Private`j = 3, AnalisiSintattica`Private`rows = 5, *)
(*    AnalisiSintattica`Private`cols = 14, *)
(*    AnalisiSintattica`Private`listaProduzioni = {"A->C", "A->Bab", "B->cD", *)
(*      "B->d", "B->e", "B->\[Epsilon]", "C->h", "C->g", "C->f", "C->\[Epsilon]", "D->jik", *)
(*      "D->\[Epsilon]"}, AnalisiSintattica`Private`tmp = {"A", "B", "C", "D"}, *)
(*    AnalisiSintattica`Private`displayFirst[AnalisiSintattica`Private`g_] := *)
(*     Grid[AnalisiSintattica`Private`g, Frame -> All, *)
(*      Background -> {White, White}, ItemStyle -> {Automatic}, *)
(*      ItemSize -> {{2, {2}}}, BaseStyle -> {Bold}*Editable -> False], *)
(*    AnalisiSintattica`Private`displayFollow[AnalisiSintattica`Private`g_] := *)
(*     Grid[AnalisiSintattica`Private`g, Frame -> All, *)
(*      Background -> {White, White}, ItemStyle -> {Automatic}, *)
(*      ItemSize -> {{2, {2}}}, BaseStyle -> {Bold}*Editable -> False], *)
(*    AnalisiSintattica`Private`displayTable[AnalisiSintattica`Private`g_, *)
(*      AnalisiSintattica`Private`cursor_:0] := *)
(*     Grid[AnalisiSintattica`Private`g, *)
(*      Frame -> If[MatchQ[AnalisiSintattica`Private`xy[*)
(*          AnalisiSintattica`Private`cursor], _Integer], All, *)
(*        {All, All, {AnalisiSintattica`Private`xy[*)
(*            AnalisiSintattica`Private`cursor] -> {Thick, Blue}}}], *)
(*      Background -> {White, White}, ItemStyle -> {Automatic}, *)
(*      ItemSize -> {{3, {4}}}, BaseStyle -> {Bold}, Editable -> False], *)
(*    AnalisiSintattica`Private`xy[AnalisiSintattica`Private`n_] := *)
(*     {AnalisiSintattica`Private`row[AnalisiSintattica`Private`n], *)
(*      AnalisiSintattica`Private`col[AnalisiSintattica`Private`n]}, *)
(*    AnalisiSintattica`Private`row[AnalisiSintattica`Private`n_] := *)
(*     Quotient[AnalisiSintattica`Private`n - 1, *)
(*       AnalisiSintattica`Private`cols] + 1, *)
(*    AnalisiSintattica`Private`col[AnalisiSintattica`Private`n_] := *)
(*     Mod[AnalisiSintattica`Private`n - 1, AnalisiSintattica`Private`cols] + *)
(*      1, AnalisiSintattica`Private`loc[{AnalisiSintattica`Private`x_, *)
(*       AnalisiSintattica`Private`y_}] := *)
(*     1 + Floor[AnalisiSintattica`Private`cols*AnalisiSintattica`Private`x] + *)
(*      AnalisiSintattica`Private`cols*Floor[(1 - AnalisiSintattica`Private`y)**)
(*         AnalisiSintattica`Private`rows], *)
(*    AnalisiSintattica`Private`nullable = {{"A", True}, {"B", True}, *)
(*      {"C", True}, {"D", True}}, AnalisiSintattica`Private`displayFirstSln[*)
(*      AnalisiSintattica`Private`g_] := AnalisiSintattica`Private`displayFirst[*)
(*      AnalisiSintattica`Private`g], *)
(*    AnalisiSintattica`Private`displayFollowSln[*)
(*      AnalisiSintattica`Private`g_] := *)
(*     AnalisiSintattica`Private`displayFollow[AnalisiSintattica`Private`g], *)
(*    AnalisiSintattica`Private`displayTableSln[*)
(*      AnalisiSintattica`Private`g_] := AnalisiSintattica`Private`displayTable[*)
(*      AnalisiSintattica`Private`g, 0]}]*)


(* ::Input:: *)
(*Manipulate[Grid[{{Column[{Style["ANALISI SINTATTICA", Bold], *)
(*       Style["ESERCIZIO DI GRAMMATICA N\[Degree]:", Bold], Style["Generare gli \*)
(*insiemi Nullable, First e Follow per la seguente grammatica", Bold]}, *)
(*      Alignment -> Left]}, *)
(*    {Column[{Row[{Button["Nuova grammatica", *)
(*          (AnalisiSintattica`Private`cursor = 0; Spacer[5]; *)
(*            AnalisiSintattica`Private`showSolution = False; *)
(*            AnalisiSintattica`Private`soluzione = *)
(*             AnalisiSintattica`Private`grammar; *)
(*            AnalisiSintattica`Private`emptyGrammar = *)
(*             AnalisiSintattica`Private`createEmptyGrammar[*)
(*              AnalisiSintattica`Private`soluzione]; ) & ], *)
(*         DynamicModule[{AnalisiSintattica`Private`numero = ""}, *)
(*          Panel[Column[{Row[{Style["Genera esercizio n\[Degree]: ", Bold], *)
(*               InputField[Dynamic[AnalisiSintattica`Private`numero], *)
(*                Number]}], Dynamic[AnalisiSintattica`Private`numero]; }]]]}], *)
(*       " ", Row[{Column[{Style["Grammatica", Bold], *)
(*           Grid[List /@ AnalisiSintattica`Private`listaProduzioni, *)
(*            Frame -> All, Background -> {White, White}, ItemStyle -> *)
(*             {Automatic}, ItemSize -> {{8, {8}}}, BaseStyle -> *)
(*             {Bold}*Editable -> False]}, Alignment -> Left]}], " ", *)
(*       Row[{Column[{Style["NULLABLE", Bold], TabView[*)
(*            Table[AnalisiSintattica`Private`tmp[[*)
(*               AnalisiSintattica`Private`i]] -> PopupMenu[" ", {*)
(*                AnalisiSintattica`Private`TRUE, *)
(*                AnalisiSintattica`Private`FALSE}], *)
(*             {AnalisiSintattica`Private`i, 1, Length[*)
(*               AnalisiSintattica`Private`tmp]}]]}, Alignment -> Left], " "}], *)
(*       " ", Row[{Column[{Style["FIRST", Bold], *)
(*           AnalisiSintattica`Private`displayFirst[*)
(*            AnalisiSintattica`Private`emptyCheckboxGrammar]}, *)
(*          Alignment -> Left]}], Row[{Column[{Style["FOLLOW", Bold], *)
(*           AnalisiSintattica`Private`displayFollow[*)
(*            AnalisiSintattica`Private`emptyCheckboxGrammar]}, *)
(*          Alignment -> Left]}], *)
(*       Row[{Column[{Style["TABELLA PRODUZIONI", Bold], EventHandler[*)
(*            Dynamic[AnalisiSintattica`Private`displayTable[*)
(*              AnalisiSintattica`Private`emptyGrammar, *)
(*              AnalisiSintattica`Private`cursor]], "MouseClicked" :> *)
(*             If[MemberQ[Range[1, AnalisiSintattica`Private`rows**)
(*                  AnalisiSintattica`Private`cols, *)
(*                 AnalisiSintattica`Private`cols], *)
(*                AnalisiSintattica`Private`loc[MousePosition[*)
(*                  "EventHandlerScaled"]]] || MemberQ[Range[1, *)
(*                 AnalisiSintattica`Private`cols], *)
(*                AnalisiSintattica`Private`loc[MousePosition[*)
(*                  "EventHandlerScaled"]]], AnalisiSintattica`Private`cursor = *)
(*               -1, AnalisiSintattica`Private`cursor = *)
(*               AnalisiSintattica`Private`loc[MousePosition[*)
(*                 "EventHandlerScaled"]]]], *)
(*           Row[Table[With[{AnalisiSintattica`Private`i$ = *)
(*                AnalisiSintattica`Private`i}, Button[*)
(*               AnalisiSintattica`Private`listaProduzioni[[*)
(*                AnalisiSintattica`Private`i$]], *)
(*               AnalisiSintattica`Private`emptyGrammar[[*)
(*                  AnalisiSintattica`Private`xy[*)
(*                    AnalisiSintattica`Private`cursor][[1]],*)
(*                  AnalisiSintattica`Private`xy[*)
(*                    AnalisiSintattica`Private`cursor][[2]]]] = *)
(*                 AnalisiSintattica`Private`listaProduzioni[[*)
(*                  AnalisiSintattica`Private`i$]]; *)
(*                If[AnalisiSintattica`Private`soluzione[[*)
(*                   AnalisiSintattica`Private`xy[*)
(*                     AnalisiSintattica`Private`cursor][[1]],*)
(*                   AnalisiSintattica`Private`xy[*)
(*                     AnalisiSintattica`Private`cursor][[2]]]] != *)
(*                  AnalisiSintattica`Private`emptyGrammar[[*)
(*                   AnalisiSintattica`Private`xy[*)
(*                     AnalisiSintattica`Private`cursor][[1]],*)
(*                   AnalisiSintattica`Private`xy[*)
(*                     AnalisiSintattica`Private`cursor][[2]]]], Beep[]]]], *)
(*             {AnalisiSintattica`Private`i, 1, Length[*)
(*               AnalisiSintattica`Private`listaProduzioni]}], Spacer[0.5]], *)
(*           Row[{Button["Clear", AnalisiSintattica`Private`emptyGrammar[[*)
(*                AnalisiSintattica`Private`xy[*)
(*                  AnalisiSintattica`Private`cursor][[1]],*)
(*                AnalisiSintattica`Private`xy[*)
(*                  AnalisiSintattica`Private`cursor][[2]]]] = " "], *)
(*             Button["Clear All", Table[*)
(*               AnalisiSintattica`Private`emptyGrammar[[*)
(*                 AnalisiSintattica`Private`i,AnalisiSintattica`Private`j]] = *)
(*                " ", {AnalisiSintattica`Private`i, 2, *)
(*                AnalisiSintattica`Private`rows}, {*)
(*                AnalisiSintattica`Private`j, 2, *)
(*                AnalisiSintattica`Private`cols}]]}]}]}], *)
(*       If[AnalisiSintattica`Private`showNullable, *)
(*        Column[{Style["Mostra Nullable", Bold], *)
(*          TabView[Table[AnalisiSintattica`Private`tmp[[*)
(*              AnalisiSintattica`Private`i]] -> *)
(*             AnalisiSintattica`Private`nullable[[AnalisiSintattica`Private`i,*)
(*              2]], {AnalisiSintattica`Private`i, 1, *)
(*             Length[AnalisiSintattica`Private`tmp]}]]}, Alignment -> Right], *)
(*        " "], If[AnalisiSintattica`Private`showFirst, *)
(*        Column[{Style["Mostra First", Bold], *)
(*          AnalisiSintattica`Private`displayFirstSln[*)
(*           AnalisiSintattica`Private`emptyCheckboxGrammar]}, *)
(*         Alignment -> Right], ""], If[AnalisiSintattica`Private`showFollow, *)
(*        Column[{Style["Mostra First", Bold], *)
(*          AnalisiSintattica`Private`displayFollowSln[*)
(*           AnalisiSintattica`Private`emptyCheckboxGrammar]}, *)
(*         Alignment -> Right], ""], If[AnalisiSintattica`Private`showSolution, *)
(*        Row[{AnalisiSintattica`Private`displayTableSln[*)
(*           AnalisiSintattica`Private`soluzione]}], ""]}, *)
(*      Alignment -> Center], " "}}], {{AnalisiSintattica`Private`soluzione, *)
(*    {{" ", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "$"}, *)
(*     {"A", "A->Bab", " ", "A->Bab", "A->Bab", "A->Bab", "A->C", "A->C", *)
(*      "A->C", " ", " ", " ", " ", " "}, {"B", "B->\[Epsilon]", " ", "B->cD", "B->d", *)
(*      "B->e", " ", " ", " ", " ", " ", " ", " ", " "}, *)
(*     {"C", " ", " ", " ", " ", " ", "C->f", "C->g", "C->h", " ", " ", " ", *)
(*      " ", "C->\[Epsilon]"}, {"D", "D->\[Epsilon]", " ", " ", " ", " ", " ", " ", " ", " ", *)
(*      "D->jik", " ", " ", " "}}}, ControlType -> None}, *)
(*  {{AnalisiSintattica`Private`emptyGrammar, *)
(*    {{" ", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "$"}, *)
(*     {"A", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "}, *)
(*     {"B", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "}, *)
(*     {"C", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "}, *)
(*     {"D", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", *)
(*      " "}}}, ControlType -> None}, *)
(*  {{AnalisiSintattica`Private`emptyCheckboxGrammar, *)
(*    {{" ", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "$"}, *)
(*     {"A", Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], *)
(*      Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], *)
(*      Checkbox[], Checkbox[]}, {"B", Checkbox[], Checkbox[], Checkbox[], *)
(*      Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], *)
(*      Checkbox[], Checkbox[], Checkbox[], Checkbox[]}, *)
(*     {"C", Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], *)
(*      Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], *)
(*      Checkbox[], Checkbox[]}, {"D", Checkbox[], Checkbox[], Checkbox[], *)
(*      Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], *)
(*      Checkbox[], Checkbox[], Checkbox[], Checkbox[]}}}, *)
(*   ControlType -> None}, {{AnalisiSintattica`Private`cursor, 0}, *)
(*   ControlType -> None}, {{AnalisiSintattica`Private`showNullable, False, *)
(*    "Mostra Nullable"}, {True, False}}, *)
(*  {{AnalisiSintattica`Private`showFirst, False, "Mostra First"}, *)
(*   {True, False}}, {{AnalisiSintattica`Private`showFollow, False, *)
(*    "Mostra Follow"}, {True, False}}, *)
(*  {{AnalisiSintattica`Private`showSolution, False, "show solution"}, *)
(*   {True, False}}, ContentSize -> {900, 900}, *)
(*  Initialization :> {AnalisiSintattica`Private`soluzione = *)
(*     {{" ", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "$"}, *)
(*      {"A", "A->Bab", " ", "A->Bab", "A->Bab", "A->Bab", "A->C", "A->C", *)
(*       "A->C", " ", " ", " ", " ", " "}, {"B", "B->\[Epsilon]", " ", "B->cD", "B->d", *)
(*       "B->e", " ", " ", " ", " ", " ", " ", " ", " "}, *)
(*      {"C", " ", " ", " ", " ", " ", "C->f", "C->g", "C->h", " ", " ", " ", *)
(*       " ", "C->\[Epsilon]"}, {"D", "D->\[Epsilon]", " ", " ", " ", " ", " ", " ", " ", " ", *)
(*       "D->jik", " ", " ", " "}}, AnalisiSintattica`Private`grammar = *)
(*     {{" ", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "$"}, *)
(*      {"A", "A->Bab", " ", "A->Bab", "A->Bab", "A->Bab", "A->C", "A->C", *)
(*       "A->C", " ", " ", " ", " ", " "}, {"B", "B->\[Epsilon]", " ", "B->cD", "B->d", *)
(*       "B->e", " ", " ", " ", " ", " ", " ", " ", " "}, *)
(*      {"C", " ", " ", " ", " ", " ", "C->f", "C->g", "C->h", " ", " ", " ", *)
(*       " ", "C->\[Epsilon]"}, {"D", "D->\[Epsilon]", " ", " ", " ", " ", " ", " ", " ", " ", *)
(*       "D->jik", " ", " ", " "}}, *)
(*    AnalisiSintattica`Private`createEmptyGrammar[*)
(*      AnalisiSintattica`Private`sln_] := *)
(*     Module[{AnalisiSintattica`Private`copy = AnalisiSintattica`Private`sln}, *)
(*      Table[If[AnalisiSintattica`Private`i > 1 && *)
(*          AnalisiSintattica`Private`j > 1, AnalisiSintattica`Private`copy[[*)
(*           AnalisiSintattica`Private`i,AnalisiSintattica`Private`j]] = " "], *)
(*        {AnalisiSintattica`Private`i, AnalisiSintattica`Private`rows}, *)
(*        {AnalisiSintattica`Private`j, AnalisiSintattica`Private`cols}]; *)
(*       AnalisiSintattica`Private`copy], AnalisiSintattica`Private`i = 5, *)
(*    AnalisiSintattica`Private`j = 3, AnalisiSintattica`Private`rows = 5, *)
(*    AnalisiSintattica`Private`cols = 14, *)
(*    AnalisiSintattica`Private`listaProduzioni = {"A->C", "A->Bab", "B->cD", *)
(*      "B->d", "B->e", "B->\[Epsilon]", "C->h", "C->g", "C->f", "C->\[Epsilon]", "D->jik", *)
(*      "D->\[Epsilon]"}, AnalisiSintattica`Private`tmp = {"A", "B", "C", "D"}, *)
(*    AnalisiSintattica`Private`displayFirst[AnalisiSintattica`Private`g_] := *)
(*     Grid[AnalisiSintattica`Private`g, Frame -> All, *)
(*      Background -> {White, White}, ItemStyle -> {Automatic}, *)
(*      ItemSize -> {{2, {2}}}, BaseStyle -> {Bold}*Editable -> False], *)
(*    AnalisiSintattica`Private`displayFollow[AnalisiSintattica`Private`g_] := *)
(*     Grid[AnalisiSintattica`Private`g, Frame -> All, *)
(*      Background -> {White, White}, ItemStyle -> {Automatic}, *)
(*      ItemSize -> {{2, {2}}}, BaseStyle -> {Bold}*Editable -> False], *)
(*    AnalisiSintattica`Private`displayTable[AnalisiSintattica`Private`g_, *)
(*      AnalisiSintattica`Private`cursor_:0] := *)
(*     Grid[AnalisiSintattica`Private`g, *)
(*      Frame -> If[MatchQ[AnalisiSintattica`Private`xy[*)
(*          AnalisiSintattica`Private`cursor], _Integer], All, *)
(*        {All, All, {AnalisiSintattica`Private`xy[*)
(*            AnalisiSintattica`Private`cursor] -> {Thick, Blue}}}], *)
(*      Background -> {White, White}, ItemStyle -> {Automatic}, *)
(*      ItemSize -> {{3, {4}}}, BaseStyle -> {Bold}, Editable -> False], *)
(*    AnalisiSintattica`Private`xy[AnalisiSintattica`Private`n_] := *)
(*     {AnalisiSintattica`Private`row[AnalisiSintattica`Private`n], *)
(*      AnalisiSintattica`Private`col[AnalisiSintattica`Private`n]}, *)
(*    AnalisiSintattica`Private`row[AnalisiSintattica`Private`n_] := *)
(*     Quotient[AnalisiSintattica`Private`n - 1, *)
(*       AnalisiSintattica`Private`cols] + 1, *)
(*    AnalisiSintattica`Private`col[AnalisiSintattica`Private`n_] := *)
(*     Mod[AnalisiSintattica`Private`n - 1, AnalisiSintattica`Private`cols] + *)
(*      1, AnalisiSintattica`Private`loc[{AnalisiSintattica`Private`x_, *)
(*       AnalisiSintattica`Private`y_}] := *)
(*     1 + Floor[AnalisiSintattica`Private`cols*AnalisiSintattica`Private`x] + *)
(*      AnalisiSintattica`Private`cols*Floor[(1 - AnalisiSintattica`Private`y)**)
(*         AnalisiSintattica`Private`rows], *)
(*    AnalisiSintattica`Private`nullable = {{"A", True}, {"B", True}, *)
(*      {"C", True}, {"D", True}}, AnalisiSintattica`Private`displayFirstSln[*)
(*      AnalisiSintattica`Private`g_] := AnalisiSintattica`Private`displayFirst[*)
(*      AnalisiSintattica`Private`g], *)
(*    AnalisiSintattica`Private`displayFollowSln[*)
(*      AnalisiSintattica`Private`g_] := *)
(*     AnalisiSintattica`Private`displayFollow[AnalisiSintattica`Private`g], *)
(*    AnalisiSintattica`Private`displayTableSln[*)
(*      AnalisiSintattica`Private`g_] := AnalisiSintattica`Private`displayTable[*)
(*      AnalisiSintattica`Private`g, 0]}]*)


(* ::Output:: *)
(*Manipulate[Grid[{{Column[{Style["ANALISI SINTATTICA", Bold], *)
(*       Style["ESERCIZIO DI GRAMMATICA N\[Degree]:", Bold], Style["Generare gli \*)
(*insiemi Nullable, First e Follow per la seguente grammatica", Bold]}, *)
(*      Alignment -> Left]}, *)
(*    {Column[{Row[{Button["Nuova grammatica", *)
(*          (AnalisiSintattica`Private`cursor = 0; Spacer[5]; *)
(*            AnalisiSintattica`Private`showSolution = False; *)
(*            AnalisiSintattica`Private`soluzione = *)
(*             AnalisiSintattica`Private`grammar; *)
(*            AnalisiSintattica`Private`emptyGrammar = *)
(*             AnalisiSintattica`Private`createEmptyGrammar[*)
(*              AnalisiSintattica`Private`soluzione]; ) & ], *)
(*         DynamicModule[{AnalisiSintattica`Private`numero = ""}, *)
(*          Panel[Column[{Row[{Style["Genera esercizio n\[Degree]: ", Bold], *)
(*               InputField[Dynamic[AnalisiSintattica`Private`numero], *)
(*                Number]}], Dynamic[AnalisiSintattica`Private`numero]; }]]]}], *)
(*       " ", Row[{Column[{Style["Grammatica", Bold], *)
(*           Grid[List /@ AnalisiSintattica`Private`listaProduzioni, *)
(*            Frame -> All, Background -> {White, White}, ItemStyle -> *)
(*             {Automatic}, ItemSize -> {{8, {8}}}, BaseStyle -> *)
(*             {Bold}*Editable -> False]}, Alignment -> Left]}], " ", *)
(*       Row[{Column[{Style["NULLABLE", Bold], TabView[*)
(*            Table[AnalisiSintattica`Private`tmp[[*)
(*               AnalisiSintattica`Private`i]] -> PopupMenu[" ", {*)
(*                AnalisiSintattica`Private`TRUE, *)
(*                AnalisiSintattica`Private`FALSE}], *)
(*             {AnalisiSintattica`Private`i, 1, Length[*)
(*               AnalisiSintattica`Private`tmp]}]]}, Alignment -> Left], " "}], *)
(*       " ", Row[{Column[{Style["FIRST", Bold], *)
(*           AnalisiSintattica`Private`displayFirst[*)
(*            AnalisiSintattica`Private`emptyCheckboxGrammar]}, *)
(*          Alignment -> Left]}], Row[{Column[{Style["FOLLOW", Bold], *)
(*           AnalisiSintattica`Private`displayFollow[*)
(*            AnalisiSintattica`Private`emptyCheckboxGrammar]}, *)
(*          Alignment -> Left]}], *)
(*       Row[{Column[{Style["TABELLA PRODUZIONI", Bold], EventHandler[*)
(*            Dynamic[AnalisiSintattica`Private`displayTable[*)
(*              AnalisiSintattica`Private`emptyGrammar, *)
(*              AnalisiSintattica`Private`cursor]], "MouseClicked" :> *)
(*             If[MemberQ[Range[1, AnalisiSintattica`Private`rows**)
(*                  AnalisiSintattica`Private`cols, *)
(*                 AnalisiSintattica`Private`cols], *)
(*                AnalisiSintattica`Private`loc[MousePosition[*)
(*                  "EventHandlerScaled"]]] || MemberQ[Range[1, *)
(*                 AnalisiSintattica`Private`cols], *)
(*                AnalisiSintattica`Private`loc[MousePosition[*)
(*                  "EventHandlerScaled"]]], AnalisiSintattica`Private`cursor = *)
(*               -1, AnalisiSintattica`Private`cursor = *)
(*               AnalisiSintattica`Private`loc[MousePosition[*)
(*                 "EventHandlerScaled"]]]], *)
(*           Row[Table[With[{AnalisiSintattica`Private`i$ = *)
(*                AnalisiSintattica`Private`i}, Button[*)
(*               AnalisiSintattica`Private`listaProduzioni[[*)
(*                AnalisiSintattica`Private`i$]], *)
(*               AnalisiSintattica`Private`emptyGrammar[[*)
(*                  AnalisiSintattica`Private`xy[*)
(*                    AnalisiSintattica`Private`cursor][[1]],*)
(*                  AnalisiSintattica`Private`xy[*)
(*                    AnalisiSintattica`Private`cursor][[2]]]] = *)
(*                 AnalisiSintattica`Private`listaProduzioni[[*)
(*                  AnalisiSintattica`Private`i$]]; *)
(*                If[AnalisiSintattica`Private`soluzione[[*)
(*                   AnalisiSintattica`Private`xy[*)
(*                     AnalisiSintattica`Private`cursor][[1]],*)
(*                   AnalisiSintattica`Private`xy[*)
(*                     AnalisiSintattica`Private`cursor][[2]]]] != *)
(*                  AnalisiSintattica`Private`emptyGrammar[[*)
(*                   AnalisiSintattica`Private`xy[*)
(*                     AnalisiSintattica`Private`cursor][[1]],*)
(*                   AnalisiSintattica`Private`xy[*)
(*                     AnalisiSintattica`Private`cursor][[2]]]], Beep[]]]], *)
(*             {AnalisiSintattica`Private`i, 1, Length[*)
(*               AnalisiSintattica`Private`listaProduzioni]}], Spacer[0.5]], *)
(*           Row[{Button["Clear", AnalisiSintattica`Private`emptyGrammar[[*)
(*                AnalisiSintattica`Private`xy[*)
(*                  AnalisiSintattica`Private`cursor][[1]],*)
(*                AnalisiSintattica`Private`xy[*)
(*                  AnalisiSintattica`Private`cursor][[2]]]] = " "], *)
(*             Button["Clear All", Table[*)
(*               AnalisiSintattica`Private`emptyGrammar[[*)
(*                 AnalisiSintattica`Private`i,AnalisiSintattica`Private`j]] = *)
(*                " ", {AnalisiSintattica`Private`i, 2, *)
(*                AnalisiSintattica`Private`rows}, {*)
(*                AnalisiSintattica`Private`j, 2, *)
(*                AnalisiSintattica`Private`cols}]]}]}]}], *)
(*       If[AnalisiSintattica`Private`showNullable, *)
(*        Column[{Style["Mostra Nullable", Bold], *)
(*          TabView[Table[AnalisiSintattica`Private`tmp[[*)
(*              AnalisiSintattica`Private`i]] -> *)
(*             AnalisiSintattica`Private`nullable[[AnalisiSintattica`Private`i,*)
(*              2]], {AnalisiSintattica`Private`i, 1, *)
(*             Length[AnalisiSintattica`Private`tmp]}]]}, Alignment -> Right], *)
(*        " "], If[AnalisiSintattica`Private`showFirst, *)
(*        Column[{Style["Mostra First", Bold], *)
(*          AnalisiSintattica`Private`displayFirstSln[*)
(*           AnalisiSintattica`Private`emptyCheckboxGrammar]}, *)
(*         Alignment -> Right], ""], If[AnalisiSintattica`Private`showFollow, *)
(*        Column[{Style["Mostra First", Bold], *)
(*          AnalisiSintattica`Private`displayFollowSln[*)
(*           AnalisiSintattica`Private`emptyCheckboxGrammar]}, *)
(*         Alignment -> Right], ""], If[AnalisiSintattica`Private`showSolution, *)
(*        Row[{AnalisiSintattica`Private`displayTableSln[*)
(*           AnalisiSintattica`Private`soluzione]}], ""]}, *)
(*      Alignment -> Center], " "}}], {{AnalisiSintattica`Private`soluzione, *)
(*    {{" ", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "$"}, *)
(*     {"A", "A->Bab", " ", "A->Bab", "A->Bab", "A->Bab", "A->C", "A->C", *)
(*      "A->C", " ", " ", " ", " ", " "}, {"B", "B->\[Epsilon]", " ", "B->cD", "B->d", *)
(*      "B->e", " ", " ", " ", " ", " ", " ", " ", " "}, *)
(*     {"C", " ", " ", " ", " ", " ", "C->f", "C->g", "C->h", " ", " ", " ", *)
(*      " ", "C->\[Epsilon]"}, {"D", "D->\[Epsilon]", " ", " ", " ", " ", " ", " ", " ", " ", *)
(*      "D->jik", " ", " ", " "}}}, ControlType -> None}, *)
(*  {{AnalisiSintattica`Private`emptyGrammar, *)
(*    {{" ", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "$"}, *)
(*     {"A", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "}, *)
(*     {"B", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "}, *)
(*     {"C", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "}, *)
(*     {"D", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", *)
(*      " "}}}, ControlType -> None}, *)
(*  {{AnalisiSintattica`Private`emptyCheckboxGrammar, *)
(*    {{" ", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "$"}, *)
(*     {"A", Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], *)
(*      Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], *)
(*      Checkbox[], Checkbox[]}, {"B", Checkbox[], Checkbox[], Checkbox[], *)
(*      Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], *)
(*      Checkbox[], Checkbox[], Checkbox[], Checkbox[]}, *)
(*     {"C", Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], *)
(*      Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], *)
(*      Checkbox[], Checkbox[]}, {"D", Checkbox[], Checkbox[], Checkbox[], *)
(*      Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], *)
(*      Checkbox[], Checkbox[], Checkbox[], Checkbox[]}}}, *)
(*   ControlType -> None}, {{AnalisiSintattica`Private`cursor, 0}, *)
(*   ControlType -> None}, {{AnalisiSintattica`Private`showNullable, False, *)
(*    "Mostra Nullable"}, {True, False}}, *)
(*  {{AnalisiSintattica`Private`showFirst, False, "Mostra First"}, *)
(*   {True, False}}, {{AnalisiSintattica`Private`showFollow, False, *)
(*    "Mostra Follow"}, {True, False}}, *)
(*  {{AnalisiSintattica`Private`showSolution, False, "show solution"}, *)
(*   {True, False}}, ContentSize -> {900, 900}, *)
(*  Initialization :> {AnalisiSintattica`Private`soluzione = *)
(*     {{" ", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "$"}, *)
(*      {"A", "A->Bab", " ", "A->Bab", "A->Bab", "A->Bab", "A->C", "A->C", *)
(*       "A->C", " ", " ", " ", " ", " "}, {"B", "B->\[Epsilon]", " ", "B->cD", "B->d", *)
(*       "B->e", " ", " ", " ", " ", " ", " ", " ", " "}, *)
(*      {"C", " ", " ", " ", " ", " ", "C->f", "C->g", "C->h", " ", " ", " ", *)
(*       " ", "C->\[Epsilon]"}, {"D", "D->\[Epsilon]", " ", " ", " ", " ", " ", " ", " ", " ", *)
(*       "D->jik", " ", " ", " "}}, AnalisiSintattica`Private`grammar = *)
(*     {{" ", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "$"}, *)
(*      {"A", "A->Bab", " ", "A->Bab", "A->Bab", "A->Bab", "A->C", "A->C", *)
(*       "A->C", " ", " ", " ", " ", " "}, {"B", "B->\[Epsilon]", " ", "B->cD", "B->d", *)
(*       "B->e", " ", " ", " ", " ", " ", " ", " ", " "}, *)
(*      {"C", " ", " ", " ", " ", " ", "C->f", "C->g", "C->h", " ", " ", " ", *)
(*       " ", "C->\[Epsilon]"}, {"D", "D->\[Epsilon]", " ", " ", " ", " ", " ", " ", " ", " ", *)
(*       "D->jik", " ", " ", " "}}, *)
(*    AnalisiSintattica`Private`createEmptyGrammar[*)
(*      AnalisiSintattica`Private`sln_] := *)
(*     Module[{AnalisiSintattica`Private`copy = AnalisiSintattica`Private`sln}, *)
(*      Table[If[AnalisiSintattica`Private`i > 1 && *)
(*          AnalisiSintattica`Private`j > 1, AnalisiSintattica`Private`copy[[*)
(*           AnalisiSintattica`Private`i,AnalisiSintattica`Private`j]] = " "], *)
(*        {AnalisiSintattica`Private`i, AnalisiSintattica`Private`rows}, *)
(*        {AnalisiSintattica`Private`j, AnalisiSintattica`Private`cols}]; *)
(*       AnalisiSintattica`Private`copy], AnalisiSintattica`Private`i = 5, *)
(*    AnalisiSintattica`Private`j = 3, AnalisiSintattica`Private`rows = 5, *)
(*    AnalisiSintattica`Private`cols = 14, *)
(*    AnalisiSintattica`Private`listaProduzioni = {"A->C", "A->Bab", "B->cD", *)
(*      "B->d", "B->e", "B->\[Epsilon]", "C->h", "C->g", "C->f", "C->\[Epsilon]", "D->jik", *)
(*      "D->\[Epsilon]"}, AnalisiSintattica`Private`tmp = {"A", "B", "C", "D"}, *)
(*    AnalisiSintattica`Private`displayFirst[AnalisiSintattica`Private`g_] := *)
(*     Grid[AnalisiSintattica`Private`g, Frame -> All, *)
(*      Background -> {White, White}, ItemStyle -> {Automatic}, *)
(*      ItemSize -> {{2, {2}}}, BaseStyle -> {Bold}*Editable -> False], *)
(*    AnalisiSintattica`Private`displayFollow[AnalisiSintattica`Private`g_] := *)
(*     Grid[AnalisiSintattica`Private`g, Frame -> All, *)
(*      Background -> {White, White}, ItemStyle -> {Automatic}, *)
(*      ItemSize -> {{2, {2}}}, BaseStyle -> {Bold}*Editable -> False], *)
(*    AnalisiSintattica`Private`displayTable[AnalisiSintattica`Private`g_, *)
(*      AnalisiSintattica`Private`cursor_:0] := *)
(*     Grid[AnalisiSintattica`Private`g, *)
(*      Frame -> If[MatchQ[AnalisiSintattica`Private`xy[*)
(*          AnalisiSintattica`Private`cursor], _Integer], All, *)
(*        {All, All, {AnalisiSintattica`Private`xy[*)
(*            AnalisiSintattica`Private`cursor] -> {Thick, Blue}}}], *)
(*      Background -> {White, White}, ItemStyle -> {Automatic}, *)
(*      ItemSize -> {{3, {3}}}, BaseStyle -> {Bold}, Editable -> False], *)
(*    AnalisiSintattica`Private`xy[AnalisiSintattica`Private`n_] := *)
(*     {AnalisiSintattica`Private`row[AnalisiSintattica`Private`n], *)
(*      AnalisiSintattica`Private`col[AnalisiSintattica`Private`n]}, *)
(*    AnalisiSintattica`Private`row[AnalisiSintattica`Private`n_] := *)
(*     Quotient[AnalisiSintattica`Private`n - 1, *)
(*       AnalisiSintattica`Private`cols] + 1, *)
(*    AnalisiSintattica`Private`col[AnalisiSintattica`Private`n_] := *)
(*     Mod[AnalisiSintattica`Private`n - 1, AnalisiSintattica`Private`cols] + *)
(*      1, AnalisiSintattica`Private`loc[{AnalisiSintattica`Private`x_, *)
(*       AnalisiSintattica`Private`y_}] := *)
(*     1 + Floor[AnalisiSintattica`Private`cols*AnalisiSintattica`Private`x] + *)
(*      AnalisiSintattica`Private`cols*Floor[(1 - AnalisiSintattica`Private`y)**)
(*         AnalisiSintattica`Private`rows], *)
(*    AnalisiSintattica`Private`nullable = {{"A", True}, {"B", True}, *)
(*      {"C", True}, {"D", True}}, AnalisiSintattica`Private`displayFirstSln[*)
(*      AnalisiSintattica`Private`g_] := AnalisiSintattica`Private`displayFirst[*)
(*      AnalisiSintattica`Private`g], *)
(*    AnalisiSintattica`Private`displayFollowSln[*)
(*      AnalisiSintattica`Private`g_] := *)
(*     AnalisiSintattica`Private`displayFollow[AnalisiSintattica`Private`g], *)
(*    AnalisiSintattica`Private`displayTableSln[*)
(*      AnalisiSintattica`Private`g_] := AnalisiSintattica`Private`displayTable[*)
(*      AnalisiSintattica`Private`g, 0]}]*)


(* ::Output:: *)
(*Manipulate[Grid[{{Column[{Style["ANALISI SINTATTICA", Bold], *)
(*       Style["ESERCIZIO DI GRAMMATICA N\[Degree]:", Bold], Style["Generare gli \*)
(*insiemi Nullable, First e Follow per la seguente grammatica", Bold]}, *)
(*      Alignment -> Left]}, *)
(*    {Column[{Row[{Button["Nuova grammatica", *)
(*          (AnalisiSintattica`Private`cursor = 0; Spacer[5]; *)
(*            AnalisiSintattica`Private`showSolution = False; *)
(*            AnalisiSintattica`Private`soluzione = *)
(*             AnalisiSintattica`Private`grammar; *)
(*            AnalisiSintattica`Private`emptyGrammar = *)
(*             AnalisiSintattica`Private`createEmptyGrammar[*)
(*              AnalisiSintattica`Private`soluzione]; ) & ], *)
(*         DynamicModule[{AnalisiSintattica`Private`numero = ""}, *)
(*          Panel[Column[{Row[{Style["Genera esercizio n\[Degree]: ", Bold], *)
(*               InputField[Dynamic[AnalisiSintattica`Private`numero], *)
(*                Number]}], Dynamic[AnalisiSintattica`Private`numero]; }]]]}], *)
(*       " ", Row[{Column[{Style["Grammatica", Bold], *)
(*           Grid[List /@ AnalisiSintattica`Private`listaProduzioni, *)
(*            Frame -> All, Background -> {White, White}, ItemStyle -> *)
(*             {Automatic}, ItemSize -> {{8, {8}}}, BaseStyle -> *)
(*             {Bold}*Editable -> False]}, Alignment -> Left]}], " ", *)
(*       Row[{Column[{Style["NULLABLE", Bold], TabView[*)
(*            Table[AnalisiSintattica`Private`tmp[[*)
(*               AnalisiSintattica`Private`i]] -> PopupMenu[" ", {*)
(*                AnalisiSintattica`Private`TRUE, *)
(*                AnalisiSintattica`Private`FALSE}], *)
(*             {AnalisiSintattica`Private`i, 1, Length[*)
(*               AnalisiSintattica`Private`tmp]}]]}, Alignment -> Left], " "}], *)
(*       " ", Row[{Column[{Style["FIRST", Bold], *)
(*           AnalisiSintattica`Private`displayFirst[*)
(*            AnalisiSintattica`Private`emptyCheckboxGrammar]}, *)
(*          Alignment -> Left]}], Row[{Column[{Style["FOLLOW", Bold], *)
(*           AnalisiSintattica`Private`displayFollow[*)
(*            AnalisiSintattica`Private`emptyCheckboxGrammar]}, *)
(*          Alignment -> Left]}], *)
(*       Row[{Column[{Style["TABELLA PRODUZIONI", Bold], EventHandler[*)
(*            Dynamic[AnalisiSintattica`Private`displayTable[*)
(*              AnalisiSintattica`Private`emptyGrammar, *)
(*              AnalisiSintattica`Private`cursor]], "MouseClicked" :> *)
(*             If[MemberQ[Range[1, AnalisiSintattica`Private`rows**)
(*                  AnalisiSintattica`Private`cols, *)
(*                 AnalisiSintattica`Private`cols], *)
(*                AnalisiSintattica`Private`loc[MousePosition[*)
(*                  "EventHandlerScaled"]]] || MemberQ[Range[1, *)
(*                 AnalisiSintattica`Private`cols], *)
(*                AnalisiSintattica`Private`loc[MousePosition[*)
(*                  "EventHandlerScaled"]]], AnalisiSintattica`Private`cursor = *)
(*               -1, AnalisiSintattica`Private`cursor = *)
(*               AnalisiSintattica`Private`loc[MousePosition[*)
(*                 "EventHandlerScaled"]]]], *)
(*           Row[Table[With[{AnalisiSintattica`Private`i$ = *)
(*                AnalisiSintattica`Private`i}, Button[*)
(*               AnalisiSintattica`Private`listaProduzioni[[*)
(*                AnalisiSintattica`Private`i$]], *)
(*               AnalisiSintattica`Private`emptyGrammar[[*)
(*                  AnalisiSintattica`Private`xy[*)
(*                    AnalisiSintattica`Private`cursor][[1]],*)
(*                  AnalisiSintattica`Private`xy[*)
(*                    AnalisiSintattica`Private`cursor][[2]]]] = *)
(*                 AnalisiSintattica`Private`listaProduzioni[[*)
(*                  AnalisiSintattica`Private`i$]]; *)
(*                If[AnalisiSintattica`Private`soluzione[[*)
(*                   AnalisiSintattica`Private`xy[*)
(*                     AnalisiSintattica`Private`cursor][[1]],*)
(*                   AnalisiSintattica`Private`xy[*)
(*                     AnalisiSintattica`Private`cursor][[2]]]] != *)
(*                  AnalisiSintattica`Private`emptyGrammar[[*)
(*                   AnalisiSintattica`Private`xy[*)
(*                     AnalisiSintattica`Private`cursor][[1]],*)
(*                   AnalisiSintattica`Private`xy[*)
(*                     AnalisiSintattica`Private`cursor][[2]]]], Beep[]]]], *)
(*             {AnalisiSintattica`Private`i, 1, Length[*)
(*               AnalisiSintattica`Private`listaProduzioni]}], Spacer[0.5]], *)
(*           Row[{Button["Clear", AnalisiSintattica`Private`emptyGrammar[[*)
(*                AnalisiSintattica`Private`xy[*)
(*                  AnalisiSintattica`Private`cursor][[1]],*)
(*                AnalisiSintattica`Private`xy[*)
(*                  AnalisiSintattica`Private`cursor][[2]]]] = " "], *)
(*             Button["Clear All", Table[*)
(*               AnalisiSintattica`Private`emptyGrammar[[*)
(*                 AnalisiSintattica`Private`i,AnalisiSintattica`Private`j]] = *)
(*                " ", {AnalisiSintattica`Private`i, 2, *)
(*                AnalisiSintattica`Private`rows}, {*)
(*                AnalisiSintattica`Private`j, 2, *)
(*                AnalisiSintattica`Private`cols}]]}]}]}], *)
(*       If[AnalisiSintattica`Private`showNullable, *)
(*        Column[{Style["Mostra Nullable", Bold], *)
(*          TabView[Table[AnalisiSintattica`Private`tmp[[*)
(*              AnalisiSintattica`Private`i]] -> *)
(*             AnalisiSintattica`Private`nullable[[AnalisiSintattica`Private`i,*)
(*              2]], {AnalisiSintattica`Private`i, 1, *)
(*             Length[AnalisiSintattica`Private`tmp]}]]}, Alignment -> Right], *)
(*        " "], If[AnalisiSintattica`Private`showFirst, *)
(*        Column[{Style["Mostra First", Bold], *)
(*          AnalisiSintattica`Private`displayFirstSln[*)
(*           AnalisiSintattica`Private`emptyCheckboxGrammar]}, *)
(*         Alignment -> Right], ""], If[AnalisiSintattica`Private`showFollow, *)
(*        Column[{Style["Mostra First", Bold], *)
(*          AnalisiSintattica`Private`displayFollowSln[*)
(*           AnalisiSintattica`Private`emptyCheckboxGrammar]}, *)
(*         Alignment -> Right], ""], If[AnalisiSintattica`Private`showSolution, *)
(*        Row[{AnalisiSintattica`Private`displayTableSln[*)
(*           AnalisiSintattica`Private`soluzione]}], ""]}, *)
(*      Alignment -> Center], " "}}], {{AnalisiSintattica`Private`soluzione, *)
(*    {{" ", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "$"}, *)
(*     {"A", "A->Bab", " ", "A->Bab", "A->Bab", "A->Bab", "A->C", "A->C", *)
(*      "A->C", " ", " ", " ", " ", " "}, {"B", "B->\[Epsilon]", " ", "B->cD", "B->d", *)
(*      "B->e", " ", " ", " ", " ", " ", " ", " ", " "}, *)
(*     {"C", " ", " ", " ", " ", " ", "C->f", "C->g", "C->h", " ", " ", " ", *)
(*      " ", "C->\[Epsilon]"}, {"D", "D->\[Epsilon]", " ", " ", " ", " ", " ", " ", " ", " ", *)
(*      "D->jik", " ", " ", " "}}}, ControlType -> None}, *)
(*  {{AnalisiSintattica`Private`emptyGrammar, *)
(*    {{" ", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "$"}, *)
(*     {"A", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "}, *)
(*     {"B", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "}, *)
(*     {"C", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "}, *)
(*     {"D", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", *)
(*      " "}}}, ControlType -> None}, *)
(*  {{AnalisiSintattica`Private`emptyCheckboxGrammar, *)
(*    {{" ", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "$"}, *)
(*     {"A", Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], *)
(*      Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], *)
(*      Checkbox[], Checkbox[]}, {"B", Checkbox[], Checkbox[], Checkbox[], *)
(*      Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], *)
(*      Checkbox[], Checkbox[], Checkbox[], Checkbox[]}, *)
(*     {"C", Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], *)
(*      Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], *)
(*      Checkbox[], Checkbox[]}, {"D", Checkbox[], Checkbox[], Checkbox[], *)
(*      Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], *)
(*      Checkbox[], Checkbox[], Checkbox[], Checkbox[]}}}, *)
(*   ControlType -> None}, {{AnalisiSintattica`Private`cursor, 0}, *)
(*   ControlType -> None}, {{AnalisiSintattica`Private`showNullable, False, *)
(*    "Mostra Nullable"}, {True, False}}, *)
(*  {{AnalisiSintattica`Private`showFirst, False, "Mostra First"}, *)
(*   {True, False}}, {{AnalisiSintattica`Private`showFollow, False, *)
(*    "Mostra Follow"}, {True, False}}, *)
(*  {{AnalisiSintattica`Private`showSolution, False, "show solution"}, *)
(*   {True, False}}, ContentSize -> {900, 900}, *)
(*  Initialization :> {AnalisiSintattica`Private`soluzione = *)
(*     {{" ", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "$"}, *)
(*      {"A", "A->Bab", " ", "A->Bab", "A->Bab", "A->Bab", "A->C", "A->C", *)
(*       "A->C", " ", " ", " ", " ", " "}, {"B", "B->\[Epsilon]", " ", "B->cD", "B->d", *)
(*       "B->e", " ", " ", " ", " ", " ", " ", " ", " "}, *)
(*      {"C", " ", " ", " ", " ", " ", "C->f", "C->g", "C->h", " ", " ", " ", *)
(*       " ", "C->\[Epsilon]"}, {"D", "D->\[Epsilon]", " ", " ", " ", " ", " ", " ", " ", " ", *)
(*       "D->jik", " ", " ", " "}}, AnalisiSintattica`Private`grammar = *)
(*     {{" ", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "$"}, *)
(*      {"A", "A->Bab", " ", "A->Bab", "A->Bab", "A->Bab", "A->C", "A->C", *)
(*       "A->C", " ", " ", " ", " ", " "}, {"B", "B->\[Epsilon]", " ", "B->cD", "B->d", *)
(*       "B->e", " ", " ", " ", " ", " ", " ", " ", " "}, *)
(*      {"C", " ", " ", " ", " ", " ", "C->f", "C->g", "C->h", " ", " ", " ", *)
(*       " ", "C->\[Epsilon]"}, {"D", "D->\[Epsilon]", " ", " ", " ", " ", " ", " ", " ", " ", *)
(*       "D->jik", " ", " ", " "}}, *)
(*    AnalisiSintattica`Private`createEmptyGrammar[*)
(*      AnalisiSintattica`Private`sln_] := *)
(*     Module[{AnalisiSintattica`Private`copy = AnalisiSintattica`Private`sln}, *)
(*      Table[If[AnalisiSintattica`Private`i > 1 && *)
(*          AnalisiSintattica`Private`j > 1, AnalisiSintattica`Private`copy[[*)
(*           AnalisiSintattica`Private`i,AnalisiSintattica`Private`j]] = " "], *)
(*        {AnalisiSintattica`Private`i, AnalisiSintattica`Private`rows}, *)
(*        {AnalisiSintattica`Private`j, AnalisiSintattica`Private`cols}]; *)
(*       AnalisiSintattica`Private`copy], AnalisiSintattica`Private`i = 5, *)
(*    AnalisiSintattica`Private`j = 3, AnalisiSintattica`Private`rows = 5, *)
(*    AnalisiSintattica`Private`cols = 14, *)
(*    AnalisiSintattica`Private`listaProduzioni = {"A->C", "A->Bab", "B->cD", *)
(*      "B->d", "B->e", "B->\[Epsilon]", "C->h", "C->g", "C->f", "C->\[Epsilon]", "D->jik", *)
(*      "D->\[Epsilon]"}, AnalisiSintattica`Private`tmp = {"A", "B", "C", "D"}, *)
(*    AnalisiSintattica`Private`displayFirst[AnalisiSintattica`Private`g_] := *)
(*     Grid[AnalisiSintattica`Private`g, Frame -> All, *)
(*      Background -> {White, White}, ItemStyle -> {Automatic}, *)
(*      ItemSize -> {{2, {2}}}, BaseStyle -> {Bold}*Editable -> False], *)
(*    AnalisiSintattica`Private`displayFollow[AnalisiSintattica`Private`g_] := *)
(*     Grid[AnalisiSintattica`Private`g, Frame -> All, *)
(*      Background -> {White, White}, ItemStyle -> {Automatic}, *)
(*      ItemSize -> {{2, {2}}}, BaseStyle -> {Bold}*Editable -> False], *)
(*    AnalisiSintattica`Private`displayTable[AnalisiSintattica`Private`g_, *)
(*      AnalisiSintattica`Private`cursor_:0] := *)
(*     Grid[AnalisiSintattica`Private`g, *)
(*      Frame -> If[MatchQ[AnalisiSintattica`Private`xy[*)
(*          AnalisiSintattica`Private`cursor], _Integer], All, *)
(*        {All, All, {AnalisiSintattica`Private`xy[*)
(*            AnalisiSintattica`Private`cursor] -> {Thick, Blue}}}], *)
(*      Background -> {White, White}, ItemStyle -> {Automatic}, *)
(*      ItemSize -> {{3, {5}}}, BaseStyle -> {Bold}, Editable -> False], *)
(*    AnalisiSintattica`Private`xy[AnalisiSintattica`Private`n_] := *)
(*     {AnalisiSintattica`Private`row[AnalisiSintattica`Private`n], *)
(*      AnalisiSintattica`Private`col[AnalisiSintattica`Private`n]}, *)
(*    AnalisiSintattica`Private`row[AnalisiSintattica`Private`n_] := *)
(*     Quotient[AnalisiSintattica`Private`n - 1, *)
(*       AnalisiSintattica`Private`cols] + 1, *)
(*    AnalisiSintattica`Private`col[AnalisiSintattica`Private`n_] := *)
(*     Mod[AnalisiSintattica`Private`n - 1, AnalisiSintattica`Private`cols] + *)
(*      1, AnalisiSintattica`Private`loc[{AnalisiSintattica`Private`x_, *)
(*       AnalisiSintattica`Private`y_}] := *)
(*     1 + Floor[AnalisiSintattica`Private`cols*AnalisiSintattica`Private`x] + *)
(*      AnalisiSintattica`Private`cols*Floor[(1 - AnalisiSintattica`Private`y)**)
(*         AnalisiSintattica`Private`rows], *)
(*    AnalisiSintattica`Private`nullable = {{"A", True}, {"B", True}, *)
(*      {"C", True}, {"D", True}}, AnalisiSintattica`Private`displayFirstSln[*)
(*      AnalisiSintattica`Private`g_] := AnalisiSintattica`Private`displayFirst[*)
(*      AnalisiSintattica`Private`g], *)
(*    AnalisiSintattica`Private`displayFollowSln[*)
(*      AnalisiSintattica`Private`g_] := *)
(*     AnalisiSintattica`Private`displayFollow[AnalisiSintattica`Private`g], *)
(*    AnalisiSintattica`Private`displayTableSln[*)
(*      AnalisiSintattica`Private`g_] := AnalisiSintattica`Private`displayTable[*)
(*      AnalisiSintattica`Private`g, 0]}]*)


(* ::Output:: *)
(*Manipulate[Grid[{{Column[{Style["ANALISI SINTATTICA", Bold], *)
(*       Style["ESERCIZIO DI GRAMMATICA N\[Degree]:", Bold], Style["Generare gli \*)
(*insiemi Nullable, First e Follow per la seguente grammatica", Bold]}, *)
(*      Alignment -> Left]}, *)
(*    {Column[{Row[{Button["Nuova grammatica", *)
(*          (AnalisiSintattica`Private`cursor = 0; Spacer[5]; *)
(*            AnalisiSintattica`Private`showSolution = False; *)
(*            AnalisiSintattica`Private`soluzione = *)
(*             AnalisiSintattica`Private`grammar; *)
(*            AnalisiSintattica`Private`emptyGrammar = *)
(*             AnalisiSintattica`Private`createEmptyGrammar[*)
(*              AnalisiSintattica`Private`soluzione]; ) & ], *)
(*         DynamicModule[{AnalisiSintattica`Private`numero = ""}, *)
(*          Panel[Column[{Row[{Style["Genera esercizio n\[Degree]: ", Bold], *)
(*               InputField[Dynamic[AnalisiSintattica`Private`numero], *)
(*                Number]}], Dynamic[AnalisiSintattica`Private`numero]; }]]]}], *)
(*       " ", Row[{Column[{Style["Grammatica", Bold], *)
(*           Grid[List /@ AnalisiSintattica`Private`listaProduzioni, *)
(*            Frame -> All, Background -> {White, White}, ItemStyle -> *)
(*             {Automatic}, ItemSize -> {{8, {8}}}, BaseStyle -> *)
(*             {Bold}*Editable -> False]}, Alignment -> Left]}], " ", *)
(*       Row[{Column[{Style["NULLABLE", Bold], TabView[*)
(*            Table[AnalisiSintattica`Private`tmp[[*)
(*               AnalisiSintattica`Private`i]] -> PopupMenu[" ", {*)
(*                AnalisiSintattica`Private`TRUE, *)
(*                AnalisiSintattica`Private`FALSE}], *)
(*             {AnalisiSintattica`Private`i, 1, Length[*)
(*               AnalisiSintattica`Private`tmp]}]]}, Alignment -> Left], " "}], *)
(*       " ", Row[{Column[{Style["FIRST", Bold], *)
(*           AnalisiSintattica`Private`displayFirst[*)
(*            AnalisiSintattica`Private`emptyCheckboxGrammar]}, *)
(*          Alignment -> Left]}], Row[{Column[{Style["FOLLOW", Bold], *)
(*           AnalisiSintattica`Private`displayFollow[*)
(*            AnalisiSintattica`Private`emptyCheckboxGrammar]}, *)
(*          Alignment -> Left]}], *)
(*       Row[{Column[{Style["TABELLA PRODUZIONI", Bold], EventHandler[*)
(*            Dynamic[AnalisiSintattica`Private`displayTable[*)
(*              AnalisiSintattica`Private`emptyGrammar, *)
(*              AnalisiSintattica`Private`cursor]], "MouseClicked" :> *)
(*             If[MemberQ[Range[1, AnalisiSintattica`Private`rows**)
(*                  AnalisiSintattica`Private`cols, *)
(*                 AnalisiSintattica`Private`cols], *)
(*                AnalisiSintattica`Private`loc[MousePosition[*)
(*                  "EventHandlerScaled"]]] || MemberQ[Range[1, *)
(*                 AnalisiSintattica`Private`cols], *)
(*                AnalisiSintattica`Private`loc[MousePosition[*)
(*                  "EventHandlerScaled"]]], AnalisiSintattica`Private`cursor = *)
(*               -1, AnalisiSintattica`Private`cursor = *)
(*               AnalisiSintattica`Private`loc[MousePosition[*)
(*                 "EventHandlerScaled"]]]], *)
(*           Row[Table[With[{AnalisiSintattica`Private`i$ = *)
(*                AnalisiSintattica`Private`i}, Button[*)
(*               AnalisiSintattica`Private`listaProduzioni[[*)
(*                AnalisiSintattica`Private`i$]], *)
(*               AnalisiSintattica`Private`emptyGrammar[[*)
(*                  AnalisiSintattica`Private`xy[*)
(*                    AnalisiSintattica`Private`cursor][[1]],*)
(*                  AnalisiSintattica`Private`xy[*)
(*                    AnalisiSintattica`Private`cursor][[2]]]] = *)
(*                 AnalisiSintattica`Private`listaProduzioni[[*)
(*                  AnalisiSintattica`Private`i$]]; *)
(*                If[AnalisiSintattica`Private`soluzione[[*)
(*                   AnalisiSintattica`Private`xy[*)
(*                     AnalisiSintattica`Private`cursor][[1]],*)
(*                   AnalisiSintattica`Private`xy[*)
(*                     AnalisiSintattica`Private`cursor][[2]]]] != *)
(*                  AnalisiSintattica`Private`emptyGrammar[[*)
(*                   AnalisiSintattica`Private`xy[*)
(*                     AnalisiSintattica`Private`cursor][[1]],*)
(*                   AnalisiSintattica`Private`xy[*)
(*                     AnalisiSintattica`Private`cursor][[2]]]], Beep[]]]], *)
(*             {AnalisiSintattica`Private`i, 1, Length[*)
(*               AnalisiSintattica`Private`listaProduzioni]}], Spacer[0.5]], *)
(*           Row[{Button["Clear", AnalisiSintattica`Private`emptyGrammar[[*)
(*                AnalisiSintattica`Private`xy[*)
(*                  AnalisiSintattica`Private`cursor][[1]],*)
(*                AnalisiSintattica`Private`xy[*)
(*                  AnalisiSintattica`Private`cursor][[2]]]] = " "], *)
(*             Button["Clear All", Table[*)
(*               AnalisiSintattica`Private`emptyGrammar[[*)
(*                 AnalisiSintattica`Private`i,AnalisiSintattica`Private`j]] = *)
(*                " ", {AnalisiSintattica`Private`i, 2, *)
(*                AnalisiSintattica`Private`rows}, {*)
(*                AnalisiSintattica`Private`j, 2, *)
(*                AnalisiSintattica`Private`cols}]]}]}]}], *)
(*       If[AnalisiSintattica`Private`showNullable, *)
(*        Column[{Style["Mostra Nullable", Bold], *)
(*          TabView[Table[AnalisiSintattica`Private`tmp[[*)
(*              AnalisiSintattica`Private`i]] -> *)
(*             AnalisiSintattica`Private`nullable[[AnalisiSintattica`Private`i,*)
(*              2]], {AnalisiSintattica`Private`i, 1, *)
(*             Length[AnalisiSintattica`Private`tmp]}]]}, Alignment -> Right], *)
(*        " "], If[AnalisiSintattica`Private`showFirst, *)
(*        Column[{Style["Mostra First", Bold], *)
(*          AnalisiSintattica`Private`displayFirstSln[*)
(*           AnalisiSintattica`Private`emptyCheckboxGrammar]}, *)
(*         Alignment -> Right], ""], If[AnalisiSintattica`Private`showFollow, *)
(*        Column[{Style["Mostra First", Bold], *)
(*          AnalisiSintattica`Private`displayFollowSln[*)
(*           AnalisiSintattica`Private`emptyCheckboxGrammar]}, *)
(*         Alignment -> Right], ""], If[AnalisiSintattica`Private`showSolution, *)
(*        Row[{AnalisiSintattica`Private`displayTableSln[*)
(*           AnalisiSintattica`Private`soluzione]}], ""]}, *)
(*      Alignment -> Center], " "}}], {{AnalisiSintattica`Private`soluzione, *)
(*    {{" ", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "$"}, *)
(*     {"A", "A->Bab", " ", "A->Bab", "A->Bab", "A->Bab", "A->C", "A->C", *)
(*      "A->C", " ", " ", " ", " ", " "}, {"B", "B->\[Epsilon]", " ", "B->cD", "B->d", *)
(*      "B->e", " ", " ", " ", " ", " ", " ", " ", " "}, *)
(*     {"C", " ", " ", " ", " ", " ", "C->f", "C->g", "C->h", " ", " ", " ", *)
(*      " ", "C->\[Epsilon]"}, {"D", "D->\[Epsilon]", " ", " ", " ", " ", " ", " ", " ", " ", *)
(*      "D->jik", " ", " ", " "}}}, ControlType -> None}, *)
(*  {{AnalisiSintattica`Private`emptyGrammar, *)
(*    {{" ", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "$"}, *)
(*     {"A", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "}, *)
(*     {"B", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "}, *)
(*     {"C", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "}, *)
(*     {"D", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", *)
(*      " "}}}, ControlType -> None}, *)
(*  {{AnalisiSintattica`Private`emptyCheckboxGrammar, *)
(*    {{" ", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "$"}, *)
(*     {"A", Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], *)
(*      Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], *)
(*      Checkbox[], Checkbox[]}, {"B", Checkbox[], Checkbox[], Checkbox[], *)
(*      Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], *)
(*      Checkbox[], Checkbox[], Checkbox[], Checkbox[]}, *)
(*     {"C", Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], *)
(*      Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], *)
(*      Checkbox[], Checkbox[]}, {"D", Checkbox[], Checkbox[], Checkbox[], *)
(*      Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], *)
(*      Checkbox[], Checkbox[], Checkbox[], Checkbox[]}}}, *)
(*   ControlType -> None}, {{AnalisiSintattica`Private`cursor, 0}, *)
(*   ControlType -> None}, {{AnalisiSintattica`Private`showNullable, False, *)
(*    "Mostra Nullable"}, {True, False}}, *)
(*  {{AnalisiSintattica`Private`showFirst, False, "Mostra First"}, *)
(*   {True, False}}, {{AnalisiSintattica`Private`showFollow, False, *)
(*    "Mostra Follow"}, {True, False}}, *)
(*  {{AnalisiSintattica`Private`showSolution, False, "show solution"}, *)
(*   {True, False}}, ContentSize -> {900, 900}, *)
(*  Initialization :> {AnalisiSintattica`Private`soluzione = *)
(*     {{" ", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "$"}, *)
(*      {"A", "A->Bab", " ", "A->Bab", "A->Bab", "A->Bab", "A->C", "A->C", *)
(*       "A->C", " ", " ", " ", " ", " "}, {"B", "B->\[Epsilon]", " ", "B->cD", "B->d", *)
(*       "B->e", " ", " ", " ", " ", " ", " ", " ", " "}, *)
(*      {"C", " ", " ", " ", " ", " ", "C->f", "C->g", "C->h", " ", " ", " ", *)
(*       " ", "C->\[Epsilon]"}, {"D", "D->\[Epsilon]", " ", " ", " ", " ", " ", " ", " ", " ", *)
(*       "D->jik", " ", " ", " "}}, AnalisiSintattica`Private`grammar = *)
(*     {{" ", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "$"}, *)
(*      {"A", "A->Bab", " ", "A->Bab", "A->Bab", "A->Bab", "A->C", "A->C", *)
(*       "A->C", " ", " ", " ", " ", " "}, {"B", "B->\[Epsilon]", " ", "B->cD", "B->d", *)
(*       "B->e", " ", " ", " ", " ", " ", " ", " ", " "}, *)
(*      {"C", " ", " ", " ", " ", " ", "C->f", "C->g", "C->h", " ", " ", " ", *)
(*       " ", "C->\[Epsilon]"}, {"D", "D->\[Epsilon]", " ", " ", " ", " ", " ", " ", " ", " ", *)
(*       "D->jik", " ", " ", " "}}, *)
(*    AnalisiSintattica`Private`createEmptyGrammar[*)
(*      AnalisiSintattica`Private`sln_] := *)
(*     Module[{AnalisiSintattica`Private`copy = AnalisiSintattica`Private`sln}, *)
(*      Table[If[AnalisiSintattica`Private`i > 1 && *)
(*          AnalisiSintattica`Private`j > 1, AnalisiSintattica`Private`copy[[*)
(*           AnalisiSintattica`Private`i,AnalisiSintattica`Private`j]] = " "], *)
(*        {AnalisiSintattica`Private`i, AnalisiSintattica`Private`rows}, *)
(*        {AnalisiSintattica`Private`j, AnalisiSintattica`Private`cols}]; *)
(*       AnalisiSintattica`Private`copy], AnalisiSintattica`Private`i = 5, *)
(*    AnalisiSintattica`Private`j = 3, AnalisiSintattica`Private`rows = 5, *)
(*    AnalisiSintattica`Private`cols = 14, *)
(*    AnalisiSintattica`Private`listaProduzioni = {"A->C", "A->Bab", "B->cD", *)
(*      "B->d", "B->e", "B->\[Epsilon]", "C->h", "C->g", "C->f", "C->\[Epsilon]", "D->jik", *)
(*      "D->\[Epsilon]"}, AnalisiSintattica`Private`tmp = {"A", "B", "C", "D"}, *)
(*    AnalisiSintattica`Private`displayFirst[AnalisiSintattica`Private`g_] := *)
(*     Grid[AnalisiSintattica`Private`g, Frame -> All, *)
(*      Background -> {White, White}, ItemStyle -> {Automatic}, *)
(*      ItemSize -> {{2, {2}}}, BaseStyle -> {Bold}*Editable -> False], *)
(*    AnalisiSintattica`Private`displayFollow[AnalisiSintattica`Private`g_] := *)
(*     Grid[AnalisiSintattica`Private`g, Frame -> All, *)
(*      Background -> {White, White}, ItemStyle -> {Automatic}, *)
(*      ItemSize -> {Automatic}, BaseStyle -> {Bold}*Editable -> False], *)
(*    AnalisiSintattica`Private`displayTable[AnalisiSintattica`Private`g_, *)
(*      AnalisiSintattica`Private`cursor_:0] := *)
(*     Grid[AnalisiSintattica`Private`g, *)
(*      Frame -> If[MatchQ[AnalisiSintattica`Private`xy[*)
(*          AnalisiSintattica`Private`cursor], _Integer], All, *)
(*        {All, All, {AnalisiSintattica`Private`xy[*)
(*            AnalisiSintattica`Private`cursor] -> {Thick, Blue}}}], *)
(*      Background -> {White, White}, ItemStyle -> {Automatic}, *)
(*      ItemSize -> {{3, {5}}}, BaseStyle -> {Bold}, Editable -> False], *)
(*    AnalisiSintattica`Private`xy[AnalisiSintattica`Private`n_] := *)
(*     {AnalisiSintattica`Private`row[AnalisiSintattica`Private`n], *)
(*      AnalisiSintattica`Private`col[AnalisiSintattica`Private`n]}, *)
(*    AnalisiSintattica`Private`row[AnalisiSintattica`Private`n_] := *)
(*     Quotient[AnalisiSintattica`Private`n - 1, *)
(*       AnalisiSintattica`Private`cols] + 1, *)
(*    AnalisiSintattica`Private`col[AnalisiSintattica`Private`n_] := *)
(*     Mod[AnalisiSintattica`Private`n - 1, AnalisiSintattica`Private`cols] + *)
(*      1, AnalisiSintattica`Private`loc[{AnalisiSintattica`Private`x_, *)
(*       AnalisiSintattica`Private`y_}] := *)
(*     1 + Floor[AnalisiSintattica`Private`cols*AnalisiSintattica`Private`x] + *)
(*      AnalisiSintattica`Private`cols*Floor[(1 - AnalisiSintattica`Private`y)**)
(*         AnalisiSintattica`Private`rows], *)
(*    AnalisiSintattica`Private`nullable = {{"A", True}, {"B", True}, *)
(*      {"C", True}, {"D", True}}, AnalisiSintattica`Private`displayFirstSln[*)
(*      AnalisiSintattica`Private`g_] := AnalisiSintattica`Private`displayFirst[*)
(*      AnalisiSintattica`Private`g], *)
(*    AnalisiSintattica`Private`displayFollowSln[*)
(*      AnalisiSintattica`Private`g_] := *)
(*     AnalisiSintattica`Private`displayFollow[AnalisiSintattica`Private`g], *)
(*    AnalisiSintattica`Private`displayTableSln[*)
(*      AnalisiSintattica`Private`g_] := AnalisiSintattica`Private`displayTable[*)
(*      AnalisiSintattica`Private`g, 0]}]*)


(* ::Output:: *)
(*Manipulate[Grid[{{Column[{Style["ANALISI SINTATTICA", Bold], *)
(*       Style["ESERCIZIO DI GRAMMATICA N\[Degree]:", Bold], Style["Generare gli \*)
(*insiemi Nullable, First e Follow per la seguente grammatica", Bold]}, *)
(*      Alignment -> Left]}, *)
(*    {Column[{Row[{Button["Nuova grammatica", *)
(*          (AnalisiSintattica`Private`cursor = 0; Spacer[5]; *)
(*            AnalisiSintattica`Private`showSolution = False; *)
(*            AnalisiSintattica`Private`soluzione = *)
(*             AnalisiSintattica`Private`grammar; *)
(*            AnalisiSintattica`Private`emptyGrammar = *)
(*             AnalisiSintattica`Private`createEmptyGrammar[*)
(*              AnalisiSintattica`Private`soluzione]; ) & ], *)
(*         DynamicModule[{AnalisiSintattica`Private`numero = ""}, *)
(*          Panel[Column[{Row[{Style["Genera esercizio n\[Degree]: ", Bold], *)
(*               InputField[Dynamic[AnalisiSintattica`Private`numero], *)
(*                Number]}], Dynamic[AnalisiSintattica`Private`numero]; }]]]}], *)
(*       " ", Row[{Column[{Style["Grammatica", Bold], *)
(*           Grid[List /@ AnalisiSintattica`Private`listaProduzioni, *)
(*            Frame -> All, Background -> {White, White}, ItemStyle -> *)
(*             {Automatic}, ItemSize -> {{8, {8}}}, BaseStyle -> *)
(*             {Bold}*Editable -> False]}, Alignment -> Left]}], " ", *)
(*       Row[{Column[{Style["NULLABLE", Bold], TabView[*)
(*            Table[AnalisiSintattica`Private`tmp[[*)
(*               AnalisiSintattica`Private`i]] -> PopupMenu[" ", {*)
(*                AnalisiSintattica`Private`TRUE, *)
(*                AnalisiSintattica`Private`FALSE}], *)
(*             {AnalisiSintattica`Private`i, 1, Length[*)
(*               AnalisiSintattica`Private`tmp]}]]}, Alignment -> Left], " "}], *)
(*       " ", Row[{Column[{Style["FIRST", Bold], *)
(*           AnalisiSintattica`Private`displayFirst[*)
(*            AnalisiSintattica`Private`emptyCheckboxGrammar]}, *)
(*          Alignment -> Left]}], Row[{Column[{Style["FOLLOW", Bold], *)
(*           AnalisiSintattica`Private`displayFollow[*)
(*            AnalisiSintattica`Private`emptyCheckboxGrammar]}, *)
(*          Alignment -> Left]}], *)
(*       Row[{Column[{Style["TABELLA PRODUZIONI", Bold], EventHandler[*)
(*            Dynamic[AnalisiSintattica`Private`displayTable[*)
(*              AnalisiSintattica`Private`emptyGrammar, *)
(*              AnalisiSintattica`Private`cursor]], "MouseClicked" :> *)
(*             If[MemberQ[Range[1, AnalisiSintattica`Private`rows**)
(*                  AnalisiSintattica`Private`cols, *)
(*                 AnalisiSintattica`Private`cols], *)
(*                AnalisiSintattica`Private`loc[MousePosition[*)
(*                  "EventHandlerScaled"]]] || MemberQ[Range[1, *)
(*                 AnalisiSintattica`Private`cols], *)
(*                AnalisiSintattica`Private`loc[MousePosition[*)
(*                  "EventHandlerScaled"]]], AnalisiSintattica`Private`cursor = *)
(*               -1, AnalisiSintattica`Private`cursor = *)
(*               AnalisiSintattica`Private`loc[MousePosition[*)
(*                 "EventHandlerScaled"]]]], *)
(*           Row[Table[With[{AnalisiSintattica`Private`i$ = *)
(*                AnalisiSintattica`Private`i}, Button[*)
(*               AnalisiSintattica`Private`listaProduzioni[[*)
(*                AnalisiSintattica`Private`i$]], *)
(*               AnalisiSintattica`Private`emptyGrammar[[*)
(*                  AnalisiSintattica`Private`xy[*)
(*                    AnalisiSintattica`Private`cursor][[1]],*)
(*                  AnalisiSintattica`Private`xy[*)
(*                    AnalisiSintattica`Private`cursor][[2]]]] = *)
(*                 AnalisiSintattica`Private`listaProduzioni[[*)
(*                  AnalisiSintattica`Private`i$]]; *)
(*                If[AnalisiSintattica`Private`soluzione[[*)
(*                   AnalisiSintattica`Private`xy[*)
(*                     AnalisiSintattica`Private`cursor][[1]],*)
(*                   AnalisiSintattica`Private`xy[*)
(*                     AnalisiSintattica`Private`cursor][[2]]]] != *)
(*                  AnalisiSintattica`Private`emptyGrammar[[*)
(*                   AnalisiSintattica`Private`xy[*)
(*                     AnalisiSintattica`Private`cursor][[1]],*)
(*                   AnalisiSintattica`Private`xy[*)
(*                     AnalisiSintattica`Private`cursor][[2]]]], Beep[]]]], *)
(*             {AnalisiSintattica`Private`i, 1, Length[*)
(*               AnalisiSintattica`Private`listaProduzioni]}], Spacer[0.5]], *)
(*           Row[{Button["Clear", AnalisiSintattica`Private`emptyGrammar[[*)
(*                AnalisiSintattica`Private`xy[*)
(*                  AnalisiSintattica`Private`cursor][[1]],*)
(*                AnalisiSintattica`Private`xy[*)
(*                  AnalisiSintattica`Private`cursor][[2]]]] = " "], *)
(*             Button["Clear All", Table[*)
(*               AnalisiSintattica`Private`emptyGrammar[[*)
(*                 AnalisiSintattica`Private`i,AnalisiSintattica`Private`j]] = *)
(*                " ", {AnalisiSintattica`Private`i, 2, *)
(*                AnalisiSintattica`Private`rows}, {*)
(*                AnalisiSintattica`Private`j, 2, *)
(*                AnalisiSintattica`Private`cols}]]}]}]}], *)
(*       If[AnalisiSintattica`Private`showNullable, *)
(*        Column[{Style["Mostra Nullable", Bold], *)
(*          TabView[Table[AnalisiSintattica`Private`tmp[[*)
(*              AnalisiSintattica`Private`i]] -> *)
(*             AnalisiSintattica`Private`nullable[[AnalisiSintattica`Private`i,*)
(*              2]], {AnalisiSintattica`Private`i, 1, *)
(*             Length[AnalisiSintattica`Private`tmp]}]]}, Alignment -> Right], *)
(*        " "], If[AnalisiSintattica`Private`showFirst, *)
(*        Column[{Style["Mostra First", Bold], *)
(*          AnalisiSintattica`Private`displayFirstSln[*)
(*           AnalisiSintattica`Private`emptyCheckboxGrammar]}, *)
(*         Alignment -> Right], ""], If[AnalisiSintattica`Private`showFollow, *)
(*        Column[{Style["Mostra First", Bold], *)
(*          AnalisiSintattica`Private`displayFollowSln[*)
(*           AnalisiSintattica`Private`emptyCheckboxGrammar]}, *)
(*         Alignment -> Right], ""], If[AnalisiSintattica`Private`showSolution, *)
(*        Row[{AnalisiSintattica`Private`displayTableSln[*)
(*           AnalisiSintattica`Private`soluzione]}], ""]}, *)
(*      Alignment -> Center], " "}}], {{AnalisiSintattica`Private`soluzione, *)
(*    {{" ", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "$"}, *)
(*     {"A", "A->Bab", " ", "A->Bab", "A->Bab", "A->Bab", "A->C", "A->C", *)
(*      "A->C", " ", " ", " ", " ", " "}, {"B", "B->\[Epsilon]", " ", "B->cD", "B->d", *)
(*      "B->e", " ", " ", " ", " ", " ", " ", " ", " "}, *)
(*     {"C", " ", " ", " ", " ", " ", "C->f", "C->g", "C->h", " ", " ", " ", *)
(*      " ", "C->\[Epsilon]"}, {"D", "D->\[Epsilon]", " ", " ", " ", " ", " ", " ", " ", " ", *)
(*      "D->jik", " ", " ", " "}}}, ControlType -> None}, *)
(*  {{AnalisiSintattica`Private`emptyGrammar, *)
(*    {{" ", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "$"}, *)
(*     {"A", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "}, *)
(*     {"B", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "}, *)
(*     {"C", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "}, *)
(*     {"D", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", *)
(*      " "}}}, ControlType -> None}, *)
(*  {{AnalisiSintattica`Private`emptyCheckboxGrammar, *)
(*    {{" ", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "$"}, *)
(*     {"A", Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], *)
(*      Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], *)
(*      Checkbox[], Checkbox[]}, {"B", Checkbox[], Checkbox[], Checkbox[], *)
(*      Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], *)
(*      Checkbox[], Checkbox[], Checkbox[], Checkbox[]}, *)
(*     {"C", Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], *)
(*      Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], *)
(*      Checkbox[], Checkbox[]}, {"D", Checkbox[], Checkbox[], Checkbox[], *)
(*      Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], *)
(*      Checkbox[], Checkbox[], Checkbox[], Checkbox[]}}}, *)
(*   ControlType -> None}, {{AnalisiSintattica`Private`cursor, 0}, *)
(*   ControlType -> None}, {{AnalisiSintattica`Private`showNullable, False, *)
(*    "Mostra Nullable"}, {True, False}}, *)
(*  {{AnalisiSintattica`Private`showFirst, False, "Mostra First"}, *)
(*   {True, False}}, {{AnalisiSintattica`Private`showFollow, False, *)
(*    "Mostra Follow"}, {True, False}}, *)
(*  {{AnalisiSintattica`Private`showSolution, False, "show solution"}, *)
(*   {True, False}}, ContentSize -> {900, 900}, *)
(*  Initialization :> {AnalisiSintattica`Private`soluzione = *)
(*     {{" ", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "$"}, *)
(*      {"A", "A->Bab", " ", "A->Bab", "A->Bab", "A->Bab", "A->C", "A->C", *)
(*       "A->C", " ", " ", " ", " ", " "}, {"B", "B->\[Epsilon]", " ", "B->cD", "B->d", *)
(*       "B->e", " ", " ", " ", " ", " ", " ", " ", " "}, *)
(*      {"C", " ", " ", " ", " ", " ", "C->f", "C->g", "C->h", " ", " ", " ", *)
(*       " ", "C->\[Epsilon]"}, {"D", "D->\[Epsilon]", " ", " ", " ", " ", " ", " ", " ", " ", *)
(*       "D->jik", " ", " ", " "}}, AnalisiSintattica`Private`grammar = *)
(*     {{" ", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "$"}, *)
(*      {"A", "A->Bab", " ", "A->Bab", "A->Bab", "A->Bab", "A->C", "A->C", *)
(*       "A->C", " ", " ", " ", " ", " "}, {"B", "B->\[Epsilon]", " ", "B->cD", "B->d", *)
(*       "B->e", " ", " ", " ", " ", " ", " ", " ", " "}, *)
(*      {"C", " ", " ", " ", " ", " ", "C->f", "C->g", "C->h", " ", " ", " ", *)
(*       " ", "C->\[Epsilon]"}, {"D", "D->\[Epsilon]", " ", " ", " ", " ", " ", " ", " ", " ", *)
(*       "D->jik", " ", " ", " "}}, *)
(*    AnalisiSintattica`Private`createEmptyGrammar[*)
(*      AnalisiSintattica`Private`sln_] := *)
(*     Module[{AnalisiSintattica`Private`copy = AnalisiSintattica`Private`sln}, *)
(*      Table[If[AnalisiSintattica`Private`i > 1 && *)
(*          AnalisiSintattica`Private`j > 1, AnalisiSintattica`Private`copy[[*)
(*           AnalisiSintattica`Private`i,AnalisiSintattica`Private`j]] = " "], *)
(*        {AnalisiSintattica`Private`i, AnalisiSintattica`Private`rows}, *)
(*        {AnalisiSintattica`Private`j, AnalisiSintattica`Private`cols}]; *)
(*       AnalisiSintattica`Private`copy], AnalisiSintattica`Private`i = 5, *)
(*    AnalisiSintattica`Private`j = 3, AnalisiSintattica`Private`rows = 5, *)
(*    AnalisiSintattica`Private`cols = 14, *)
(*    AnalisiSintattica`Private`listaProduzioni = {"A->C", "A->Bab", "B->cD", *)
(*      "B->d", "B->e", "B->\[Epsilon]", "C->h", "C->g", "C->f", "C->\[Epsilon]", "D->jik", *)
(*      "D->\[Epsilon]"}, AnalisiSintattica`Private`tmp = {"A", "B", "C", "D"}, *)
(*    AnalisiSintattica`Private`displayFirst[AnalisiSintattica`Private`g_] := *)
(*     Grid[AnalisiSintattica`Private`g, Frame -> All, *)
(*      Background -> {White, White}, ItemStyle -> {Automatic}, *)
(*      ItemSize -> {{2, {2}}}, BaseStyle -> {Bold}*Editable -> False], *)
(*    AnalisiSintattica`Private`displayFollow[AnalisiSintattica`Private`g_] := *)
(*     Grid[AnalisiSintattica`Private`g, Frame -> All, *)
(*      Background -> {White, White}, ItemStyle -> {Automatic}, *)
(*      ItemSize -> {{2, {2}}}, BaseStyle -> {Bold}*Editable -> False], *)
(*    AnalisiSintattica`Private`displayTable[AnalisiSintattica`Private`g_, *)
(*      AnalisiSintattica`Private`cursor_:0] := *)
(*     Grid[AnalisiSintattica`Private`g, *)
(*      Frame -> If[MatchQ[AnalisiSintattica`Private`xy[*)
(*          AnalisiSintattica`Private`cursor], _Integer], All, *)
(*        {All, All, {AnalisiSintattica`Private`xy[*)
(*            AnalisiSintattica`Private`cursor] -> {Thick, Blue}}}], *)
(*      Background -> {White, White}, ItemStyle -> {Automatic}, *)
(*      ItemSize -> {{3, {5}}}, BaseStyle -> {Bold}, Editable -> False], *)
(*    AnalisiSintattica`Private`xy[AnalisiSintattica`Private`n_] := *)
(*     {AnalisiSintattica`Private`row[AnalisiSintattica`Private`n], *)
(*      AnalisiSintattica`Private`col[AnalisiSintattica`Private`n]}, *)
(*    AnalisiSintattica`Private`row[AnalisiSintattica`Private`n_] := *)
(*     Quotient[AnalisiSintattica`Private`n - 1, *)
(*       AnalisiSintattica`Private`cols] + 1, *)
(*    AnalisiSintattica`Private`col[AnalisiSintattica`Private`n_] := *)
(*     Mod[AnalisiSintattica`Private`n - 1, AnalisiSintattica`Private`cols] + *)
(*      1, AnalisiSintattica`Private`loc[{AnalisiSintattica`Private`x_, *)
(*       AnalisiSintattica`Private`y_}] := *)
(*     1 + Floor[AnalisiSintattica`Private`cols*AnalisiSintattica`Private`x] + *)
(*      AnalisiSintattica`Private`cols*Floor[(1 - AnalisiSintattica`Private`y)**)
(*         AnalisiSintattica`Private`rows], *)
(*    AnalisiSintattica`Private`nullable = {{"A", True}, {"B", True}, *)
(*      {"C", True}, {"D", True}}, AnalisiSintattica`Private`displayFirstSln[*)
(*      AnalisiSintattica`Private`g_] := AnalisiSintattica`Private`displayFirst[*)
(*      AnalisiSintattica`Private`g], *)
(*    AnalisiSintattica`Private`displayFollowSln[*)
(*      AnalisiSintattica`Private`g_] := *)
(*     AnalisiSintattica`Private`displayFollow[AnalisiSintattica`Private`g], *)
(*    AnalisiSintattica`Private`displayTableSln[*)
(*      AnalisiSintattica`Private`g_] := AnalisiSintattica`Private`displayTable[*)
(*      AnalisiSintattica`Private`g, 0]}]*)


(* ::Output:: *)
(*Manipulate[Grid[{{Column[{Style["ANALISI SINTATTICA", Bold], *)
(*       Style["ESERCIZIO DI GRAMMATICA N\[Degree]:", Bold], Style["Generare gli \*)
(*insiemi Nullable, First e Follow per la seguente grammatica", Bold]}, *)
(*      Alignment -> Center]}, *)
(*    {Column[{Row[{Button["Nuova grammatica", *)
(*          (AnalisiSintattica`Private`cursor = 0; Spacer[5]; *)
(*            AnalisiSintattica`Private`showSolution = False; *)
(*            AnalisiSintattica`Private`soluzione = *)
(*             AnalisiSintattica`Private`grammar; *)
(*            AnalisiSintattica`Private`emptyGrammar = *)
(*             AnalisiSintattica`Private`createEmptyGrammar[*)
(*              AnalisiSintattica`Private`soluzione]; ) & ], *)
(*         DynamicModule[{AnalisiSintattica`Private`numero = ""}, *)
(*          Panel[Column[{Row[{Style["Genera esercizio n\[Degree]: ", Bold], *)
(*               InputField[Dynamic[AnalisiSintattica`Private`numero], *)
(*                Number]}], Dynamic[AnalisiSintattica`Private`numero]; }]]]}], *)
(*       " ", Row[{Column[{Style["Grammatica", Bold], *)
(*           Grid[List /@ AnalisiSintattica`Private`listaProduzioni, *)
(*            Frame -> All, Background -> {White, White}, ItemStyle -> *)
(*             {Automatic}, ItemSize -> {{8, {8}}}, BaseStyle -> *)
(*             {Bold}*Editable -> False]}, Alignment -> Center]}], " ", *)
(*       Row[{Column[{Style["NULLABLE", Bold], TabView[*)
(*            Table[AnalisiSintattica`Private`tmp[[*)
(*               AnalisiSintattica`Private`i]] -> PopupMenu[" ", {*)
(*                AnalisiSintattica`Private`TRUE, *)
(*                AnalisiSintattica`Private`FALSE}], *)
(*             {AnalisiSintattica`Private`i, 1, Length[*)
(*               AnalisiSintattica`Private`tmp]}]]}, Alignment -> Left], " "}], *)
(*       " ", Row[{Column[{Style["FIRST", Bold], *)
(*           AnalisiSintattica`Private`displayFirst[*)
(*            AnalisiSintattica`Private`emptyCheckboxGrammar]}, *)
(*          Alignment -> Left]}], Row[{Column[{Style["FOLLOW", Bold], *)
(*           AnalisiSintattica`Private`displayFollow[*)
(*            AnalisiSintattica`Private`emptyCheckboxGrammar]}, *)
(*          Alignment -> Left]}], EventHandler[*)
(*        Dynamic[AnalisiSintattica`Private`displayTable[*)
(*          AnalisiSintattica`Private`emptyGrammar, *)
(*          AnalisiSintattica`Private`cursor]], "MouseClicked" :> *)
(*         If[MemberQ[Range[1, AnalisiSintattica`Private`rows**)
(*              AnalisiSintattica`Private`cols, *)
(*             AnalisiSintattica`Private`cols], AnalisiSintattica`Private`loc[*)
(*             MousePosition["EventHandlerScaled"]]] || *)
(*           MemberQ[Range[1, AnalisiSintattica`Private`cols], *)
(*            AnalisiSintattica`Private`loc[MousePosition[*)
(*              "EventHandlerScaled"]]], AnalisiSintattica`Private`cursor = -1, *)
(*          AnalisiSintattica`Private`cursor = AnalisiSintattica`Private`loc[*)
(*            MousePosition["EventHandlerScaled"]]]], *)
(*       Row[Table[With[{AnalisiSintattica`Private`i$ = *)
(*            AnalisiSintattica`Private`i}, Button[*)
(*           AnalisiSintattica`Private`listaProduzioni[[*)
(*            AnalisiSintattica`Private`i$]], *)
(*           AnalisiSintattica`Private`emptyGrammar[[*)
(*              AnalisiSintattica`Private`xy[AnalisiSintattica`Private`cursor][[*)
(*               1]],AnalisiSintattica`Private`xy[*)
(*                AnalisiSintattica`Private`cursor][[2]]]] = *)
(*             AnalisiSintattica`Private`listaProduzioni[[*)
(*              AnalisiSintattica`Private`i$]]; *)
(*            If[AnalisiSintattica`Private`soluzione[[*)
(*               AnalisiSintattica`Private`xy[*)
(*                 AnalisiSintattica`Private`cursor][[1]],*)
(*               AnalisiSintattica`Private`xy[*)
(*                 AnalisiSintattica`Private`cursor][[2]]]] != *)
(*              AnalisiSintattica`Private`emptyGrammar[[*)
(*               AnalisiSintattica`Private`xy[*)
(*                 AnalisiSintattica`Private`cursor][[1]],*)
(*               AnalisiSintattica`Private`xy[*)
(*                 AnalisiSintattica`Private`cursor][[2]]]], Beep[]]]], *)
(*         {AnalisiSintattica`Private`i, 1, Length[*)
(*           AnalisiSintattica`Private`listaProduzioni]}], Spacer[0.5]], *)
(*       Row[{Button["Clear", AnalisiSintattica`Private`emptyGrammar[[*)
(*            AnalisiSintattica`Private`xy[AnalisiSintattica`Private`cursor][[*)
(*             1]],AnalisiSintattica`Private`xy[*)
(*              AnalisiSintattica`Private`cursor][[2]]]] = " "], *)
(*         Button["Clear All", Table[AnalisiSintattica`Private`emptyGrammar[[*)
(*             AnalisiSintattica`Private`i,AnalisiSintattica`Private`j]] = " ", *)
(*           {AnalisiSintattica`Private`i, 2, AnalisiSintattica`Private`rows}, *)
(*           {AnalisiSintattica`Private`j, 2, *)
(*            AnalisiSintattica`Private`cols}]]}], *)
(*       If[AnalisiSintattica`Private`showNullable, *)
(*        Column[{Style["Mostra Nullable", Bold], *)
(*          TabView[Table[AnalisiSintattica`Private`tmp[[*)
(*              AnalisiSintattica`Private`i]] -> *)
(*             AnalisiSintattica`Private`nullable[[AnalisiSintattica`Private`i,*)
(*              2]], {AnalisiSintattica`Private`i, 1, *)
(*             Length[AnalisiSintattica`Private`tmp]}]]}, Alignment -> Right], *)
(*        " "], If[AnalisiSintattica`Private`showFirst, *)
(*        Column[{Style["Mostra First", Bold], *)
(*          AnalisiSintattica`Private`displayFirstSln[*)
(*           AnalisiSintattica`Private`emptyCheckboxGrammar]}, *)
(*         Alignment -> Right], ""], If[AnalisiSintattica`Private`showFollow, *)
(*        Column[{Style["Mostra First", Bold], *)
(*          AnalisiSintattica`Private`displayFollowSln[*)
(*           AnalisiSintattica`Private`emptyCheckboxGrammar]}, *)
(*         Alignment -> Right], ""], If[AnalisiSintattica`Private`showSolution, *)
(*        Row[{AnalisiSintattica`Private`displayTableSln[*)
(*           AnalisiSintattica`Private`soluzione]}], ""]}, *)
(*      Alignment -> Center], " "}}], {{AnalisiSintattica`Private`soluzione, *)
(*    {{" ", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "$"}, *)
(*     {"A", "A->Bab", " ", "A->Bab", "A->Bab", "A->Bab", "A->C", "A->C", *)
(*      "A->C", " ", " ", " ", " ", " "}, {"B", "B->\[Epsilon]", " ", "B->cD", "B->d", *)
(*      "B->e", " ", " ", " ", " ", " ", " ", " ", " "}, *)
(*     {"C", " ", " ", " ", " ", " ", "C->f", "C->g", "C->h", " ", " ", " ", *)
(*      " ", "C->\[Epsilon]"}, {"D", "D->\[Epsilon]", " ", " ", " ", " ", " ", " ", " ", " ", *)
(*      "D->jik", " ", " ", " "}}}, ControlType -> None}, *)
(*  {{AnalisiSintattica`Private`emptyGrammar, *)
(*    {{" ", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "$"}, *)
(*     {"A", " ", "A->C", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", *)
(*      " "}, {"B", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", *)
(*      " "}, {"C", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", *)
(*      " "}, {"D", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", *)
(*      " "}}}, ControlType -> None}, *)
(*  {{AnalisiSintattica`Private`emptyCheckboxGrammar, *)
(*    {{" ", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "$"}, *)
(*     {"A", Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], *)
(*      Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], *)
(*      Checkbox[], Checkbox[]}, {"B", Checkbox[], Checkbox[], Checkbox[], *)
(*      Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], *)
(*      Checkbox[], Checkbox[], Checkbox[], Checkbox[]}, *)
(*     {"C", Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], *)
(*      Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], *)
(*      Checkbox[], Checkbox[]}, {"D", Checkbox[], Checkbox[], Checkbox[], *)
(*      Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], Checkbox[], *)
(*      Checkbox[], Checkbox[], Checkbox[], Checkbox[]}}}, *)
(*   ControlType -> None}, {{AnalisiSintattica`Private`cursor, 17}, *)
(*   ControlType -> None}, {{AnalisiSintattica`Private`showNullable, False, *)
(*    "Mostra Nullable"}, {True, False}}, *)
(*  {{AnalisiSintattica`Private`showFirst, False, "Mostra First"}, *)
(*   {True, False}}, {{AnalisiSintattica`Private`showFollow, False, *)
(*    "Mostra Follow"}, {True, False}}, *)
(*  {{AnalisiSintattica`Private`showSolution, True, "show solution"}, *)
(*   {True, False}}, ContentSize -> {900, 900}, *)
(*  Initialization :> {AnalisiSintattica`Private`soluzione = *)
(*     {{" ", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "$"}, *)
(*      {"A", "A->Bab", " ", "A->Bab", "A->Bab", "A->Bab", "A->C", "A->C", *)
(*       "A->C", " ", " ", " ", " ", " "}, {"B", "B->\[Epsilon]", " ", "B->cD", "B->d", *)
(*       "B->e", " ", " ", " ", " ", " ", " ", " ", " "}, *)
(*      {"C", " ", " ", " ", " ", " ", "C->f", "C->g", "C->h", " ", " ", " ", *)
(*       " ", "C->\[Epsilon]"}, {"D", "D->\[Epsilon]", " ", " ", " ", " ", " ", " ", " ", " ", *)
(*       "D->jik", " ", " ", " "}}, AnalisiSintattica`Private`grammar = *)
(*     {{" ", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "$"}, *)
(*      {"A", "A->Bab", " ", "A->Bab", "A->Bab", "A->Bab", "A->C", "A->C", *)
(*       "A->C", " ", " ", " ", " ", " "}, {"B", "B->\[Epsilon]", " ", "B->cD", "B->d", *)
(*       "B->e", " ", " ", " ", " ", " ", " ", " ", " "}, *)
(*      {"C", " ", " ", " ", " ", " ", "C->f", "C->g", "C->h", " ", " ", " ", *)
(*       " ", "C->\[Epsilon]"}, {"D", "D->\[Epsilon]", " ", " ", " ", " ", " ", " ", " ", " ", *)
(*       "D->jik", " ", " ", " "}}, *)
(*    AnalisiSintattica`Private`createEmptyGrammar[*)
(*      AnalisiSintattica`Private`sln_] := *)
(*     Module[{AnalisiSintattica`Private`copy = AnalisiSintattica`Private`sln}, *)
(*      Table[If[AnalisiSintattica`Private`i > 1 && *)
(*          AnalisiSintattica`Private`j > 1, AnalisiSintattica`Private`copy[[*)
(*           AnalisiSintattica`Private`i,AnalisiSintattica`Private`j]] = " "], *)
(*        {AnalisiSintattica`Private`i, AnalisiSintattica`Private`rows}, *)
(*        {AnalisiSintattica`Private`j, AnalisiSintattica`Private`cols}]; *)
(*       AnalisiSintattica`Private`copy], AnalisiSintattica`Private`i = 5, *)
(*    AnalisiSintattica`Private`j = 3, AnalisiSintattica`Private`rows = 5, *)
(*    AnalisiSintattica`Private`cols = 14, *)
(*    AnalisiSintattica`Private`listaProduzioni = {"A->C", "A->Bab", "B->cD", *)
(*      "B->d", "B->e", "B->\[Epsilon]", "C->h", "C->g", "C->f", "C->\[Epsilon]", "D->jik", *)
(*      "D->\[Epsilon]"}, AnalisiSintattica`Private`tmp = {"A", "B", "C", "D"}, *)
(*    AnalisiSintattica`Private`displayFirst[AnalisiSintattica`Private`g_] := *)
(*     Grid[AnalisiSintattica`Private`g, Frame -> All, *)
(*      Background -> {White, White}, ItemStyle -> {Automatic}, *)
(*      ItemSize -> {{2, {2}}}, BaseStyle -> {Bold}*Editable -> False], *)
(*    AnalisiSintattica`Private`displayFollow[AnalisiSintattica`Private`g_] := *)
(*     Grid[AnalisiSintattica`Private`g, Frame -> All, *)
(*      Background -> {White, White}, ItemStyle -> {Automatic}, *)
(*      ItemSize -> {{2, {2}}}, BaseStyle -> {Bold}*Editable -> False], *)
(*    AnalisiSintattica`Private`displayTable[AnalisiSintattica`Private`g_, *)
(*      AnalisiSintattica`Private`cursor_:0] := *)
(*     Grid[AnalisiSintattica`Private`g, *)
(*      Frame -> If[MatchQ[AnalisiSintattica`Private`xy[*)
(*          AnalisiSintattica`Private`cursor], _Integer], All, *)
(*        {All, All, {AnalisiSintattica`Private`xy[*)
(*            AnalisiSintattica`Private`cursor] -> {Thick, Blue}}}], *)
(*      Background -> {White, White}, ItemStyle -> {Automatic}, *)
(*      ItemSize -> {{3, {5}}}, BaseStyle -> {Bold}, Editable -> False], *)
(*    AnalisiSintattica`Private`xy[AnalisiSintattica`Private`n_] := *)
(*     {AnalisiSintattica`Private`row[AnalisiSintattica`Private`n], *)
(*      AnalisiSintattica`Private`col[AnalisiSintattica`Private`n]}, *)
(*    AnalisiSintattica`Private`row[AnalisiSintattica`Private`n_] := *)
(*     Quotient[AnalisiSintattica`Private`n - 1, *)
(*       AnalisiSintattica`Private`cols] + 1, *)
(*    AnalisiSintattica`Private`col[AnalisiSintattica`Private`n_] := *)
(*     Mod[AnalisiSintattica`Private`n - 1, AnalisiSintattica`Private`cols] + *)
(*      1, AnalisiSintattica`Private`loc[{AnalisiSintattica`Private`x_, *)
(*       AnalisiSintattica`Private`y_}] := *)
(*     1 + Floor[AnalisiSintattica`Private`cols*AnalisiSintattica`Private`x] + *)
(*      AnalisiSintattica`Private`cols*Floor[(1 - AnalisiSintattica`Private`y)**)
(*         AnalisiSintattica`Private`rows], *)
(*    AnalisiSintattica`Private`nullable = {{"A", True}, {"B", True}, *)
(*      {"C", True}, {"D", True}}, AnalisiSintattica`Private`displayFirstSln[*)
(*      AnalisiSintattica`Private`g_] := AnalisiSintattica`Private`displayFirst[*)
(*      AnalisiSintattica`Private`g], *)
(*    AnalisiSintattica`Private`displayFollowSln[*)
(*      AnalisiSintattica`Private`g_] := *)
(*     AnalisiSintattica`Private`displayFollow[AnalisiSintattica`Private`g], *)
(*    AnalisiSintattica`Private`displayTableSln[*)
(*      AnalisiSintattica`Private`g_] := AnalisiSintattica`Private`displayTable[*)
(*      AnalisiSintattica`Private`g, 0]}]*)


End[]


EndPackage[]
