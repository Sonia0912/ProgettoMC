(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     29298,        683]
NotebookOptionsPosition[     24183,        593]
NotebookOutlinePosition[     24590,        609]
CellTagsIndexPosition[     24547,        606]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Progetto Matematica Computazionale", "Title",
 CellChangeTimes->{{3.890750962823655*^9, 3.8907509885064335`*^9}},
 TextAlignment->Center,ExpressionUUID->"5a1f2e26-4b6a-4ea3-9804-de30c40d3e08"],

Cell[TextData[StyleBox["Esercizio di Analisi Sintattica",
 FontSize->27]], "Subtitle",
 CellChangeTimes->{{3.8907509951285677`*^9, 3.8907510019691195`*^9}, {
  3.8907520475013933`*^9, 3.8907520477532053`*^9}},
 TextAlignment->Center,ExpressionUUID->"bb67af07-e1ff-49b5-87b6-4fa053c91c67"],

Cell[TextData[{
 StyleBox["Nome Gruppo",
  FontSize->20,
  FontSlant->"Italic"],
 StyleBox["\nMC 2022/2023",
  FontSize->20]
}], "Text",
 CellChangeTimes->{{3.8907510714718204`*^9, 3.890751099306947*^9}, {
  3.8907518262120275`*^9, 3.890751848177871*^9}, {3.8907518798245273`*^9, 
  3.8907518861619463`*^9}},
 TextAlignment->Center,ExpressionUUID->"2cdba1a7-404c-4d69-8992-032295e035a9"],

Cell[TextData[StyleBox["FOTO",
 FontSlant->"Italic"]], "Text",
 CellChangeTimes->{{3.8907519302475586`*^9, 3.8907519308097343`*^9}},
 TextAlignment->Center,ExpressionUUID->"976b1111-432e-4e8a-94c9-20958d8eff75"],

Cell[TextData[{
 "Lorenzo Campidelli, Gianluca Gueli, Sonia Nicoletti, Anna Tosoroni\n",
 StyleBox["anno 1 curriculum C, anno 1 curriculum B, anno 1 curriculum B, \
anno 1 curriculum ?",
  FontSize->13]
}], "Text",
 CellChangeTimes->{{3.8907511091736736`*^9, 3.8907511254724493`*^9}, {
  3.890751158485685*^9, 3.890751250820182*^9}, {3.890751845599101*^9, 
  3.8907518464383917`*^9}, {3.8907519333724127`*^9, 3.8907519355702925`*^9}, {
  3.893333357344719*^9, 3.89333335779263*^9}},
 TextAlignment->Center,ExpressionUUID->"9274d549-7f68-4c12-8069-8ce7ef4449e9"],

Cell[CellGroupData[{

Cell["Codice", "Section",
 CellChangeTimes->{{3.8907520033868685`*^9, 3.8907520039145327`*^9}, {
  3.8907522681820693`*^9, 
  3.8907522687822404`*^9}},ExpressionUUID->"75fb08d1-1430-4971-ab7d-\
77896cebc04a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Settiamo", " ", "il", " ", "Path", " ", "e", " ", "carichiamo", " ", 
    RowBox[{"pacchetto", ".", "m"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"SetDirectory", "[", 
     RowBox[{"NotebookDirectory", "[", "]"}], "]"}], ";"}], "\n", 
   RowBox[{"<<", "pacchetto.m"}]}]}]], "Input",
 CellChangeTimes->{{3.8907512723332453`*^9, 3.8907512723342476`*^9}, 
   3.8907519747584324`*^9, {3.890752071887743*^9, 3.890752077299266*^9}, {
   3.890752273757166*^9, 3.8907523049978194`*^9}, 3.8907533925209055`*^9, {
   3.8907542511038485`*^9, 3.890754255295512*^9}, {3.8907552285631733`*^9, 
   3.8907552327753973`*^9}},ExpressionUUID->"8b0f82fd-5ce7-4ba1-b2bf-\
31c964368f81"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"Main", " ", "per", " ", "generare", " ", 
   RowBox[{"l", "'"}], "interfaccia"}], "*)"}]], "Input",ExpressionUUID->\
"583e7d5c-ab9d-44f5-8c10-19fe4af5e5f6"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Indice", "Section",
 CellChangeTimes->{{3.8907513787584734`*^9, 
  3.8907513797545824`*^9}},ExpressionUUID->"b994f387-a12f-4dc4-a2dc-\
dab7aa7f8d43"],

Cell["\<\
Introduzione
I. Analisi sintattica
\tI.1 Analisi sintattica e grammatiche
\tI.2 Cos\[CloseCurlyQuote]\[EGrave] una grammatica (LL1)
\tI.3 Parsing
II. Nullable
\tII.1 Cos\[CloseCurlyQuote]\[EGrave] nullable
\tII.2 Come si genera
\tII.3 Esempi
III. First
\tIII.1 Cos\[CloseCurlyQuote]\[EGrave] first
\tIII.2 Come si genera
\tIII.3 Esempi
IV. Follow
\tIV.1 Cos\[CloseCurlyQuote]\[EGrave] follow
\tIV.2 Come si genera
\tIV.3 Esempi
V. Tabella di Parsing
\tVI.1 Cos\[CloseCurlyQuote]\[EGrave]
\tVi.2 Come si genera
\tVI.2 Esempio esercizio completo (con stringa di esempio)
VI. Esercizio
\tVII.1 In cosa consiste l\[CloseCurlyQuote]esercizio  
\tVII.2 Funzionalit\[AGrave] dell\[CloseCurlyQuote]interfaccia
IV. Bibliografia e Sitografia
V. Commenti e Lavoro Futuro\
\>", "Text",
 CellChangeTimes->{{3.890751650145605*^9, 3.8907517169405155`*^9}, {
   3.8932255262951155`*^9, 3.8932256964518366`*^9}, {3.8932257712571754`*^9, 
   3.89322590760499*^9}, {3.8932259848980007`*^9, 3.8932259960145082`*^9}, {
   3.8932267578836594`*^9, 3.893226768519039*^9}, {3.893226979723595*^9, 
   3.893226987407835*^9}, {3.893227028831957*^9, 3.893227029464725*^9}, {
   3.8932272248399487`*^9, 3.8932272505569572`*^9}, {3.893227290696949*^9, 
   3.8932273072145576`*^9}, {3.893227351754671*^9, 3.8932274562087345`*^9}, {
   3.8932275418836803`*^9, 3.8932275502128973`*^9}, {3.8933277784781876`*^9, 
   3.893327788774513*^9}, {3.893329386992469*^9, 3.893329395024145*^9}, 
   3.89333605176567*^9, 
   3.893338533484734*^9},ExpressionUUID->"2588153c-a80c-4091-ba49-\
2da0194dd30f"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Introduzione", "Section",
 CellChangeTimes->{{3.8907513867783594`*^9, 
  3.8907513882472687`*^9}},ExpressionUUID->"65fbb34a-22dc-40c9-b3dd-\
8d79751a7c6a"],

Cell["\<\
Questo pacchetto contiene un generatore di esercizi sul parsing di \
grammatiche LL(1) nell\[CloseCurlyQuote]ambito dei linguaggi di \
programmazione, con l\[CloseCurlyQuote]obiettivo di familiarizzare l\
\[CloseCurlyQuote]utente con il procedimento di risoluzione di questa \
tipologia di esercizio. 
Lo svolgimento consiste nel creare gli insiemi Nullable, First e Follow di \
ogni parte che compone la grammatica data, con i quali poter andare a \
compilare una tabella che mostra tutti i passaggi che portano ad ottenere una \
stringa del linguaggio generato dalla grammatica in maniera non ambigua. Il \
pacchetto prevede anche una verifica della soluzione fornita cos\[IGrave] da \
ricevere un feedback immediato per migliorare le abilit\[AGrave] nelle fasi \
pi\[UGrave] ostiche.
Le grammatiche generate dal pacchetto sono molto semplici in modo da \
garantire che siano sempre di tipo LL(1), questo permette all\
\[CloseCurlyQuote]utente di concentrarsi sulle fasi di risoluzione in modo da \
abituarsi al procedimento e renderlo quasi automatico una volta che si passa \
ad osservare delle grammatiche pi\[UGrave] complesse. 
Il pacchetto \[EGrave] adatto a chi si approccia a questo argomento di \
linguaggi di programmazione, in particolare per studenti di informatica che \
frequentano un corso di linguaggi per la prima volta.\
\>", "Text",
 CellChangeTimes->{{3.8907517249591913`*^9, 3.890751725235973*^9}, {
   3.893227001502784*^9, 3.8932271046996274`*^9}, {3.893326207284791*^9, 
   3.8933262078396096`*^9}, {3.8933263100526257`*^9, 
   3.8933266832506723`*^9}, {3.893326719961896*^9, 3.8933267238266335`*^9}, {
   3.893326782042446*^9, 3.8933268553940277`*^9}, {3.8933270197535977`*^9, 
   3.893327050921362*^9}, {3.8933270817613907`*^9, 3.8933271818480544`*^9}, 
   3.8933272335046124`*^9, {3.893327285472454*^9, 3.8933272984555473`*^9}, {
   3.893327332104336*^9, 3.8933274500792484`*^9}, {3.893328809114003*^9, 
   3.893328811026327*^9}},ExpressionUUID->"fb2c88f0-c1a6-4e3a-aa88-\
2663a01cd7f6"]
}, Open  ]],

Cell[CellGroupData[{

Cell["I. Analisi Sintattica", "Section",
 CellChangeTimes->{{3.8907513973129363`*^9, 3.890751399886715*^9}, {
  3.893327547055324*^9, 
  3.8933275525596113`*^9}},ExpressionUUID->"c6392b86-4ad6-4f35-ac5d-\
2139abd26ae9"],

Cell[CellGroupData[{

Cell["I.1 Analisi sintattica e grammatiche", "Subsection",
 CellChangeTimes->{{3.890751485035192*^9, 3.890751504746661*^9}, {
   3.890751574160438*^9, 3.8907515750480895`*^9}, {3.890751609313715*^9, 
   3.8907516107036943`*^9}, {3.89332756292684*^9, 3.8933275720520744`*^9}, 
   3.893327756613449*^9, {3.893329374782858*^9, 
   3.8933293818402233`*^9}},ExpressionUUID->"eac818a9-0bde-4524-86da-\
4ff09a1c9579"],

Cell["\<\
Con analisi sintattica in ambito di linguaggi di programmazione si intende, \
dato un linguaggio, la verifica della correttezza di una stringa nel \
linguaggio, cio\[EGrave] se \[EGrave] possibile creare tale stringa \
rispettando tutte le regole di scrittura che compongono il linguaggio stesso, \
ad esempio nel linguaggio composto da stringhe contenenti solamente il \
carattere \[OpenCurlyDoubleQuote]a\[CloseCurlyDoubleQuote] la stringa \
\[OpenCurlyDoubleQuote]aaab\[CloseCurlyDoubleQuote] \[EGrave] sintatticamente \
errata. 
L\[CloseCurlyQuote]analisi sintattica serve quindi a verificare che le regole \
siano rispettate e applicate correttamente. Queste regole vengono solitamente \
descritte dalla grammatica che definisce il linguaggio.

Una grammatica G \[EGrave] descritta da una quadrupla G =(N, T, P, S), dove:
\t- N \[EGrave] l\[CloseCurlyQuote]insieme di simboli Non Terminali, che \
possono essere riscritti nelle loro produzioni
\t- T \[EGrave] l\[CloseCurlyQuote]insieme di simboli Terminali che \
compongono le stringhe generate dalla grammatica
\t- P \[EGrave] l\[CloseCurlyQuote]insieme di produzioni dei simboli Non \
Terminali
\t- S \[EGrave] il simbolo Non Terminale dal quale iniziare a sviluppare le \
produzioni
Ad esempio la grammatica G1 = ({A, B}, {a, b}, P, \[OpenCurlyDoubleQuote]A\
\[CloseCurlyDoubleQuote]) con P:\
\>", "Text",
 CellChangeTimes->{{3.89075151167789*^9, 3.890751511958028*^9}, {
  3.8933288352573605`*^9, 3.8933288358331833`*^9}, {3.893329220712124*^9, 
  3.8933293539055185`*^9}, {3.893329419175502*^9, 3.8933294711114902`*^9}, {
  3.8933296146231923`*^9, 3.893329615438958*^9}, {3.893329741598015*^9, 
  3.893329844262407*^9}, {3.8933299053332767`*^9, 3.893329942286137*^9}, {
  3.8933299742614*^9, 3.8933300554932814`*^9}, {3.8933301444204006`*^9, 
  3.893330209004631*^9}, {3.8933303554517713`*^9, 3.893330356310684*^9}, {
  3.8933305503996944`*^9, 3.893330565963411*^9}, {3.89333063034707*^9, 
  3.893330662570821*^9}, {3.8933309040183315`*^9, 3.893331087185275*^9}, {
  3.8933311377128334`*^9, 3.8933312390567646`*^9}, {3.893331278840555*^9, 
  3.893331299440464*^9}},ExpressionUUID->"5229659b-3e0d-4599-b55d-\
c02ef744291a"],

Cell[BoxData[
 RowBox[{"\t\t", 
  RowBox[{
   RowBox[{"A", " ", "->", " ", 
    RowBox[{"aBA", " ", "|", " ", "a"}]}], "\[IndentingNewLine]", "\t\t", 
   RowBox[{"B", " ", "->", " ", 
    RowBox[{"bB", " ", "|", " ", "\[Epsilon]"}]}]}]}]], "DisplayFormula",
 CellChangeTimes->{{3.8933303726042433`*^9, 3.8933304996837273`*^9}, {
  3.8933316210722055`*^9, 
  3.89333162291247*^9}},ExpressionUUID->"c54b5140-14ef-4f4f-801d-\
63b483670b23"],

Cell["\<\
descrive un linguaggio di stringhe composte dai caratteri \
\[OpenCurlyDoubleQuote]a\[CloseCurlyDoubleQuote] e \[OpenCurlyDoubleQuote]b\
\[CloseCurlyDoubleQuote] ma che devono iniziare e terminare con \
\[OpenCurlyDoubleQuote]a\[CloseCurlyDoubleQuote].
Il simbolo \[Epsilon] indica una produzione vuota, cio\[EGrave] che non \
genera nessun Terminale e non si sviluppa in altri Non Terminali. La \
notazione | separa le diverse produzioni di un Non Teminale.
Con questa grammatica la stringa \[OpenCurlyDoubleQuote]aababba\
\[CloseCurlyDoubleQuote] viene prodotta come:\
\>", "Text",
 CellChangeTimes->{
  3.893330513150358*^9, {3.893330573274949*^9, 3.893330612595049*^9}, {
   3.893331307617669*^9, 3.8933313664004126`*^9}, {3.893331586151492*^9, 
   3.8933316125595903`*^9}, {3.893332649923526*^9, 3.8933326802268963`*^9}, {
   3.893332750850952*^9, 
   3.8933328554345655`*^9}},ExpressionUUID->"a9d16b72-c7ce-45b8-a26a-\
7c62758938bb"],

Cell[BoxData[
 RowBox[{"A", " ", "->", " ", 
  RowBox[{"aBA", " ", "->", " ", 
   RowBox[{"aA", " ", "->", " ", 
    RowBox[{"aaBA", " ", "->", " ", 
     RowBox[{"aabBA", " ", "->", " ", 
      RowBox[{"aabA", " ", "->", " ", 
       RowBox[{"aabaBA", " ", "->", " ", 
        RowBox[{"aababBA", " ", "->", " ", 
         RowBox[{"aababbBA", " ", "->", " ", 
          RowBox[{
          "aababbA", " ", "->", " ", 
           "aababba"}]}]}]}]}]}]}]}]}]}]], "DisplayFormula",
 CellChangeTimes->{{3.8933328872642536`*^9, 3.893332968459012*^9}, {
  3.893333012242566*^9, 
  3.893333075522873*^9}},ExpressionUUID->"aac48780-8e33-4fce-9dc8-\
9d68c6fb6397"],

Cell["mentre la stringa \[OpenCurlyDoubleQuote]aab\[CloseCurlyDoubleQuote] \
non pu\[OGrave] essere prodotta:", "Text",
 CellChangeTimes->{{3.8933331607775564`*^9, 
  3.8933331846169996`*^9}},ExpressionUUID->"1042509e-e4bb-45e9-a1ce-\
01774727656f"],

Cell[BoxData[
 RowBox[{"A", " ", "->", " ", 
  RowBox[{"aBA", " ", "->", " ", 
   RowBox[{"aA", " ", "->", " ", 
    RowBox[{"aaBA", " ", "->", " ", 
     RowBox[{"aabBA", " ", "->", " ", "aabA"}]}]}]}]}]], "DisplayFormula",
 CellChangeTimes->{{3.893333197822616*^9, 
  3.893333248361782*^9}},ExpressionUUID->"b297ce4e-cfe0-4bce-affc-\
87adc2f404be"],

Cell["\<\
perch\[EGrave] \[OpenCurlyDoubleQuote]A\[CloseCurlyDoubleQuote] non ha una \
produzione \[Epsilon].

Per semplicit\[AGrave] una grammatica viene solamente descritta dal suo \
insieme di produzioni, che contiene tutti i simboli Non Terminali e tutti i \
simboli Terminali, con il simbolo iniziale scritto per primo.\
\>", "Text",
 CellChangeTimes->{{3.893333253752804*^9, 3.8933332676413565`*^9}, {
  3.893333334808629*^9, 3.8933333349125905`*^9}, {3.8933344041884503`*^9, 
  3.893334486724623*^9}, {3.8933345308763905`*^9, 
  3.8933345523906565`*^9}},ExpressionUUID->"8870c543-62c0-4e5a-b906-\
ddf0143210f6"]
}, Open  ]],

Cell[CellGroupData[{

Cell["I.2 Cos\[CloseCurlyQuote]\[EGrave] una grammatica LL(1)", "Subsection",
 CellChangeTimes->{{3.890751536580962*^9, 3.8907515375221353`*^9}, {
  3.8907516134669905`*^9, 3.890751614743664*^9}, {3.89332773295113*^9, 
  3.8933277554699087`*^9}},ExpressionUUID->"8987df16-8b6b-4db2-b052-\
94ae675742dd"],

Cell["\<\
Per capire come viene generata una stringa \[EGrave] quindi necessario \
leggere i caratteri che la compongono e trovare la produzione che genera \
quella serie di caratteri. In questi esercizi siamo interessati ad un tipo \
particolare di grammatiche, dette LL(1), dove la prima L indica lettura della \
stringa in input Left to right, la seconda L indica Leftmost derivation cio\
\[EGrave] l\[CloseCurlyQuote]ordine delle produzioni \[EGrave] da sinistra a \
destra, e 1 indica quanti caratteri della stringa di input vanno letti per \
capire la produzione successiva. Per essere LL(1) \[EGrave] necessario che la \
grammatica sia non ambigua, cio\[EGrave] che non abbia due produzioni che \
iniziano con lo stesso terminale, e sia non ricorsiva a sinistra, \
cio\[EGrave] il primo elemento di una produzione di un Non Terminale non sia \
il non Terminale stesso.
Nell\[CloseCurlyQuote]esempio precedente la grammatica \[EGrave] ambigua \
perch\[EGrave] le due produzioni di \[OpenCurlyDoubleQuote]A\
\[CloseCurlyDoubleQuote] iniziano entrambe per \[OpenCurlyDoubleQuote]a\
\[CloseCurlyDoubleQuote]. 
Un esempio di grammatica ricorsiva a sinistra \[EGrave]:\
\>", "Text",
 CellChangeTimes->{{3.890751559350464*^9, 3.89075155965889*^9}, {
  3.893327592718688*^9, 3.8933275935005627`*^9}, {3.893333428048501*^9, 
  3.893333447056421*^9}, {3.893333487160675*^9, 3.8933334972640285`*^9}, {
  3.8933335337038317`*^9, 3.8933335587043533`*^9}, {3.893333617039134*^9, 
  3.893333657871892*^9}, {3.8933338069265614`*^9, 3.893334027109736*^9}, {
  3.8933340833981137`*^9, 3.8933340915662794`*^9}, {3.893334155837365*^9, 
  3.8933343963492537`*^9}, {3.8933345653484774`*^9, 3.8933346126911783`*^9}, {
  3.893334656835793*^9, 
  3.893334657531576*^9}},ExpressionUUID->"57d0fbf2-2302-43f7-ad7a-\
96e6c7e4f9e9"],

Cell[BoxData[
 RowBox[{"\t\t", 
  RowBox[{"A", " ", "->", " ", 
   RowBox[{"Aa", " ", "|", " ", "\[Epsilon]"}]}]}]], "DisplayFormula",
 CellChangeTimes->{{3.893334623283156*^9, 
  3.8933346523252125`*^9}},ExpressionUUID->"02197243-2592-46cb-be4d-\
f1444b1aa465"],

Cell["\<\
che produce stringhe di soli caratteri \[OpenCurlyDoubleQuote]a\
\[CloseCurlyDoubleQuote], ma leggendo solo un carattere alla volta \[EGrave] \
impossibile sapere quante volte \[EGrave] stata sviluppata la prima \
produzione (in particolare \[EGrave] necessario leggere tutta la stringa per \
sapere quante produzioni sono state fatte).

Un esempio di grammatica LL(1) \[EGrave]:\
\>", "Text",
 CellChangeTimes->{{3.893334660459532*^9, 
  3.893334827043247*^9}},ExpressionUUID->"1a79801a-c25c-46e2-8c51-\
b7b6462dd6c5"],

Cell[BoxData[
 RowBox[{"\t\t", 
  RowBox[{
   RowBox[{"A", " ", "->", " ", 
    RowBox[{"aA", " ", "|", " ", "B"}]}], "\[IndentingNewLine]", "\t\t", 
   RowBox[{"B", " ", "->", " ", 
    RowBox[{"bB", " ", "|", " ", "\[Epsilon]"}]}]}]}]], "DisplayFormula",
 CellChangeTimes->{{3.8933348396716375`*^9, 3.8933348396756353`*^9}, {
  3.893334896786975*^9, 
  3.8933349224908867`*^9}},ExpressionUUID->"eb78b50a-1be1-45f8-b3b5-\
8c37ba703007"],

Cell["\<\
che produce stringhe composte da una serie di \[OpenCurlyDoubleQuote]a\
\[CloseCurlyDoubleQuote] seguite da una serie di \[OpenCurlyDoubleQuote]b\
\[CloseCurlyDoubleQuote] (si noti che le stringhe possono anche essere vuote).\
\>", "Text",
 CellChangeTimes->{{3.8933349515384064`*^9, 3.8933351182420597`*^9}, {
   3.8933354480879855`*^9, 3.893335509096744*^9}, 
   3.893335923638307*^9},ExpressionUUID->"20957a1a-2a6f-4596-b2ec-\
7c7223ce4df8"]
}, Open  ]],

Cell[CellGroupData[{

Cell["I.3 Parsing", "Subsection",
 CellChangeTimes->{{3.890751536580962*^9, 3.8907515375221353`*^9}, {
  3.8907516134669905`*^9, 3.890751614743664*^9}, {3.89332776116625*^9, 
  3.8933277737984614`*^9}, {3.893336046406447*^9, 
  3.8933360465743847`*^9}},ExpressionUUID->"0c060db3-f1a3-440c-9b93-\
ba28c7673e1a"],

Cell["\<\
Il parsing consiste nel prendere una stringa del linguaggio e derivare le \
produzioni della grammatica che generano quella stringa. In particolare siamo \
interessati al parsing con grammatiche LL(1), con le quali \[EGrave] \
possibile trovare la produzione giusta leggendo in input un solo carattere \
alla volta. Ad esempio con la grammatica descritta prima:\
\>", "Text",
 CellChangeTimes->{{3.8933359484543543`*^9, 3.8933359859586167`*^9}, {
  3.8933360210710645`*^9, 
  3.8933361784614024`*^9}},ExpressionUUID->"ceb045b8-07d7-4aec-8adb-\
800eca5f562a"],

Cell[BoxData[
 RowBox[{"\t\t", 
  RowBox[{
   RowBox[{"A", " ", "->", " ", 
    RowBox[{"aA", " ", "|", " ", "B"}]}], "\[IndentingNewLine]", "\t\t", 
   RowBox[{"B", " ", "->", " ", 
    RowBox[{"bB", " ", "|", " ", "\[Epsilon]"}]}]}]}]], "DisplayFormula",
 CellChangeTimes->{{3.8933378759253473`*^9, 
  3.8933378822282453`*^9}},ExpressionUUID->"c16db089-e26f-409a-9e57-\
cf9039d9d388"],

Cell[TextData[{
 "\[EGrave] possibile capire come \[EGrave] stata prodotta la stringa \
\[OpenCurlyDoubleQuote]aabb\[CloseCurlyDoubleQuote] leggendo un solo \
carattere alla volta e sviluppando le produzioni da sinistra (quando un \
carattere viene prodotto \[EGrave] \[OpenCurlyDoubleQuote]consumato\
\[CloseCurlyDoubleQuote] dalla stringa:\n\n\t",
 Cell[BoxData[GridBox[{
    {
     RowBox[{
      StyleBox["stringa",
       FontWeight->"Bold"], ":", "    "}], 
     RowBox[{
      StyleBox["input",
       FontWeight->"Bold"], ":", " "}], 
     RowBox[{"  ", 
      RowBox[{
       StyleBox["produzione",
        FontWeight->"Bold"], ":"}]}]},
    {"aabb", "a", "A"},
    {"aabb", "a", "aA"},
    {"abb", "a", "aaA"},
    {"bb", "b", "aaB"},
    {"bb", "b", "aabB"},
    {"b", "b", "aabbB"},
    {"\[Epsilon]", "\[Epsilon]", "aabb"}
   }]], "DisplayFormula",
  CellChangeTimes->{{3.8933351324474907`*^9, 3.8933354691207275`*^9}, {
   3.8933355343480587`*^9, 3.893335775664409*^9}},ExpressionUUID->
  "fa492ba3-9fd9-4344-b54f-a3615eddf772"],
 "\n\nQuesto esempio \[EGrave] stato fatto in maniera intuitiva, ma con \
grammatiche pi\[UGrave] complesse non \[EGrave] sempre possibile. In questi \
casi si pu\[OGrave] fare un procedimento per ottenere una tabella di parsing \
che associa ad ogni coppia di Non Terminale e Terminale una produzione da \
sviluppare. Questa tabella ha due funzioni: fornire le regole per il parsing \
delle stringhe e verificare che la grammatica sia effettivamente LL(1). In \
questo documento ci concentriamo solamente su grammatiche che sappiamo essere \
LL(1), che verranno prodotte nell\[CloseCurlyQuote]interfaccia finale di \
svolgimento degli esercizi. \nNelle prossime sezioni vengono illustrate le \
fasi di questo procedimento: la creazione degli insiemi Nullable, First e \
Follow per ogni Non Terminale e le regole di costruzione e riempimento della \
tabella di parsing finale."
}], "Text",
 CellChangeTimes->{{3.890751559350464*^9, 3.89075155965889*^9}, {
   3.893327592718688*^9, 3.8933275935005627`*^9}, {3.8933358839522123`*^9, 
   3.893335885882512*^9}, {3.8933361028544083`*^9, 3.8933361030465097`*^9}, 
   3.8933361892060947`*^9, {3.893336225302*^9, 3.8933362329417777`*^9}, {
   3.893337859664007*^9, 3.893337907887191*^9}, {3.893338000454883*^9, 
   3.8933380036706676`*^9}, {3.893338079742179*^9, 3.893338129678248*^9}, {
   3.893338219916582*^9, 
   3.893338495829579*^9}},ExpressionUUID->"3f2c0eeb-9b69-4886-a317-\
fffcd2a7f55e"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["II. Sezione 2", "Section",
 CellChangeTimes->{{3.890751406098993*^9, 
  3.890751408009591*^9}},ExpressionUUID->"2406016e-6080-4f95-bdcc-\
4e947cf98ed1"],

Cell[CellGroupData[{

Cell["II.1 Sottosezione", "Subsection",
 CellChangeTimes->{{3.890751485035192*^9, 3.890751504746661*^9}, {
  3.890751574160438*^9, 3.8907515750480895`*^9}, {3.8907516175610323`*^9, 
  3.890751619100312*^9}},ExpressionUUID->"6374d6a2-ba4c-46f3-aa30-\
2f2c26bb5098"],

Cell["...", "Text",
 CellChangeTimes->{{3.89075151167789*^9, 
  3.890751511958028*^9}},ExpressionUUID->"ffd2037c-f0b3-47be-b492-\
cee86fec2bdd"]
}, Open  ]],

Cell[CellGroupData[{

Cell["II.2 Esempi", "Subsection",
 CellChangeTimes->{{3.890751536580962*^9, 3.8907515375221353`*^9}, {
  3.8907516225991993`*^9, 
  3.8907516234660063`*^9}},ExpressionUUID->"e8d0d3b3-e296-4d4d-b31f-\
a21ece488adc"],

Cell["...", "Text",
 CellChangeTimes->{{3.890751559350464*^9, 
  3.89075155965889*^9}},ExpressionUUID->"aabff7e9-e37e-459b-8619-\
1a57cd80a4c9"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["III. Approfondimento", "Section",
 CellChangeTimes->{{3.890751417445614*^9, 
  3.8907514209663477`*^9}},ExpressionUUID->"8128f560-56af-4906-b20e-\
f0eb5cee469c"],

Cell[CellGroupData[{

Cell["III.1 Sottosezione", "Subsection",
 CellChangeTimes->{{3.890751485035192*^9, 3.890751504746661*^9}, {
  3.890751574160438*^9, 3.8907515750480895`*^9}, {3.890751625603489*^9, 
  3.89075162995789*^9}},ExpressionUUID->"61129019-4c6b-42e5-ba5e-\
736ca23b4903"],

Cell["...", "Text",
 CellChangeTimes->{{3.89075151167789*^9, 
  3.890751511958028*^9}},ExpressionUUID->"ea103078-fabb-4a01-8320-\
03e9c65139dc"]
}, Open  ]],

Cell[CellGroupData[{

Cell["III.2 Esempi", "Subsection",
 CellChangeTimes->{{3.890751536580962*^9, 3.8907515375221353`*^9}, {
  3.890751632906438*^9, 
  3.8907516341592317`*^9}},ExpressionUUID->"fa22868b-75e1-427f-a7c3-\
158c9ffb1128"],

Cell["\<\
A -> BC | aDb
B -> cd | \[Epsilon]
C -> e | \[Epsilon]
D -> fg\
\>", "Text",
 CellChangeTimes->{{3.890751559350464*^9, 3.89075155965889*^9}, {
  3.893226931067625*^9, 
  3.893226932667945*^9}},ExpressionUUID->"9f5568fa-f41f-4c2a-8683-\
9cd3fe560f1c"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["IV. Bibliografia e Sitografia", "Section",
 CellChangeTimes->{{3.890751429118579*^9, 
  3.890751439177018*^9}},ExpressionUUID->"b2b4837b-fa5c-444f-a236-\
91bdca30cda9"],

Cell["...", "Text",
 CellChangeTimes->{{3.8907514723087015`*^9, 
  3.890751472587801*^9}},ExpressionUUID->"ea59365b-32a6-4981-a1b6-\
5780175d3c7e"]
}, Open  ]],

Cell[CellGroupData[{

Cell["V. Commenti e Lavoro Futuro", "Section",
 CellChangeTimes->{{3.8907514458231473`*^9, 
  3.8907514547511325`*^9}},ExpressionUUID->"e500173f-e44a-4dc9-be86-\
3fd82f12e23e"],

Cell["...", "Text",
 CellChangeTimes->{{3.890751461928514*^9, 
  3.890751462214046*^9}},ExpressionUUID->"fc5c28d2-a05a-4452-9829-\
e1c8d0b78581"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1024.5, 521.25},
WindowMargins->{{-6, Automatic}, {Automatic, -6}},
FrontEndVersion->"13.2 for Microsoft Windows (64-bit) (January 30, 2023)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"9658fb0a-0c2b-417f-b382-efd4f58f5443"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 198, 2, 98, "Title",ExpressionUUID->"5a1f2e26-4b6a-4ea3-9804-de30c40d3e08"],
Cell[781, 26, 288, 4, 57, "Subtitle",ExpressionUUID->"bb67af07-e1ff-49b5-87b6-4fa053c91c67"],
Cell[1072, 32, 387, 10, 70, "Text",ExpressionUUID->"2cdba1a7-404c-4d69-8992-032295e035a9"],
Cell[1462, 44, 211, 3, 35, "Text",ExpressionUUID->"976b1111-432e-4e8a-94c9-20958d8eff75"],
Cell[1676, 49, 561, 10, 55, "Text",ExpressionUUID->"9274d549-7f68-4c12-8069-8ce7ef4449e9"],
Cell[CellGroupData[{
Cell[2262, 63, 208, 4, 67, "Section",ExpressionUUID->"75fb08d1-1430-4971-ab7d-77896cebc04a"],
Cell[2473, 69, 752, 16, 67, "Input",ExpressionUUID->"8b0f82fd-5ce7-4ba1-b2bf-31c964368f81"],
Cell[3228, 87, 197, 4, 28, "Input",ExpressionUUID->"583e7d5c-ab9d-44f5-8c10-19fe4af5e5f6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3462, 96, 155, 3, 67, "Section",ExpressionUUID->"b994f387-a12f-4dc4-a2dc-dab7aa7f8d43"],
Cell[3620, 101, 1568, 39, 610, "Text",ExpressionUUID->"2588153c-a80c-4091-ba49-2da0194dd30f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[5225, 145, 161, 3, 67, "Section",ExpressionUUID->"65fbb34a-22dc-40c9-b3dd-8d79751a7c6a"],
Cell[5389, 150, 2026, 31, 265, "Text",ExpressionUUID->"fb2c88f0-c1a6-4e3a-aa88-2663a01cd7f6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[7452, 186, 219, 4, 67, "Section",ExpressionUUID->"c6392b86-4ad6-4f35-ac5d-2139abd26ae9"],
Cell[CellGroupData[{
Cell[7696, 194, 410, 6, 54, "Subsection",ExpressionUUID->"eac818a9-0bde-4524-86da-4ff09a1c9579"],
Cell[8109, 202, 2193, 36, 288, "Text",ExpressionUUID->"5229659b-3e0d-4599-b55d-c02ef744291a"],
Cell[10305, 240, 437, 10, 47, "DisplayFormula",ExpressionUUID->"c54b5140-14ef-4f4f-801d-63b483670b23"],
Cell[10745, 252, 949, 17, 104, "Text",ExpressionUUID->"a9d16b72-c7ce-45b8-a26a-7c62758938bb"],
Cell[11697, 271, 654, 16, 24, "DisplayFormula",ExpressionUUID->"aac48780-8e33-4fce-9dc8-9d68c6fb6397"],
Cell[12354, 289, 249, 4, 35, "Text",ExpressionUUID->"1042509e-e4bb-45e9-a1ce-01774727656f"],
Cell[12606, 295, 350, 8, 24, "DisplayFormula",ExpressionUUID->"b297ce4e-cfe0-4bce-affc-87adc2f404be"],
Cell[12959, 305, 618, 12, 104, "Text",ExpressionUUID->"8870c543-62c0-4e5a-b906-ddf0143210f6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[13614, 322, 303, 4, 54, "Subsection",ExpressionUUID->"8987df16-8b6b-4db2-b052-94ae675742dd"],
Cell[13920, 328, 1809, 28, 196, "Text",ExpressionUUID->"57d0fbf2-2302-43f7-ad7a-96e6c7e4f9e9"],
Cell[15732, 358, 262, 6, 26, "DisplayFormula",ExpressionUUID->"02197243-2592-46cb-be4d-f1444b1aa465"],
Cell[15997, 366, 529, 11, 104, "Text",ExpressionUUID->"1a79801a-c25c-46e2-8c51-b7b6462dd6c5"],
Cell[16529, 379, 437, 10, 47, "DisplayFormula",ExpressionUUID->"eb78b50a-1be1-45f8-b3b5-8c37ba703007"],
Cell[16969, 391, 454, 8, 35, "Text",ExpressionUUID->"20957a1a-2a6f-4596-b2ec-7c7223ce4df8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[17460, 404, 310, 5, 54, "Subsection",ExpressionUUID->"0c060db3-f1a3-440c-9b93-ba28c7673e1a"],
Cell[17773, 411, 568, 10, 81, "Text",ExpressionUUID->"ceb045b8-07d7-4aec-8adb-800eca5f562a"],
Cell[18344, 423, 386, 9, 47, "DisplayFormula",ExpressionUUID->"c16db089-e26f-409a-9e57-cf9039d9d388"],
Cell[18733, 434, 2484, 50, 413, "Text",ExpressionUUID->"3f2c0eeb-9b69-4886-a317-fffcd2a7f55e"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[21266, 490, 158, 3, 67, "Section",ExpressionUUID->"2406016e-6080-4f95-bdcc-4e947cf98ed1"],
Cell[CellGroupData[{
Cell[21449, 497, 264, 4, 54, "Subsection",ExpressionUUID->"6374d6a2-ba4c-46f3-aa30-2f2c26bb5098"],
Cell[21716, 503, 144, 3, 35, "Text",ExpressionUUID->"ffd2037c-f0b3-47be-b492-cee86fec2bdd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[21897, 511, 214, 4, 54, "Subsection",ExpressionUUID->"e8d0d3b3-e296-4d4d-b31f-a21ece488adc"],
Cell[22114, 517, 144, 3, 35, "Text",ExpressionUUID->"aabff7e9-e37e-459b-8619-1a57cd80a4c9"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[22307, 526, 167, 3, 67, "Section",ExpressionUUID->"8128f560-56af-4906-b20e-f0eb5cee469c"],
Cell[CellGroupData[{
Cell[22499, 533, 262, 4, 54, "Subsection",ExpressionUUID->"61129019-4c6b-42e5-ba5e-736ca23b4903"],
Cell[22764, 539, 144, 3, 35, "Text",ExpressionUUID->"ea103078-fabb-4a01-8320-03e9c65139dc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[22945, 547, 213, 4, 54, "Subsection",ExpressionUUID->"fa22868b-75e1-427f-a7c3-158c9ffb1128"],
Cell[23161, 553, 260, 9, 104, "Text",ExpressionUUID->"9f5568fa-f41f-4c2a-8683-9cd3fe560f1c"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[23470, 568, 174, 3, 67, "Section",ExpressionUUID->"b2b4837b-fa5c-444f-a236-91bdca30cda9"],
Cell[23647, 573, 147, 3, 35, "Text",ExpressionUUID->"ea59365b-32a6-4981-a1b6-5780175d3c7e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[23831, 581, 176, 3, 67, "Section",ExpressionUUID->"e500173f-e44a-4dc9-be86-3fd82f12e23e"],
Cell[24010, 586, 145, 3, 35, "Text",ExpressionUUID->"fc5c28d2-a05a-4452-9829-e1c8d0b78581"]
}, Open  ]]
}, Open  ]]
}
]
*)

